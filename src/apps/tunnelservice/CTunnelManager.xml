<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (C) 2013-2016 Nanjing StarOS Technology Co., Ltd
	All rights reserved.
	
	@file 		CTunnelManager.xml
	@brief 		Class of tunnel management
	@version 	1.1.0
	@auth 		qiulei
	@date		2017/09/13

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<starlang xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">

	<class name="CTunnelManager">
		<private>
			<hashmap name="tunnelContainer" keytype="long" valuetype="object"/>
			<long name="id"/>			
			<long name="invlan"/>
			<long name="outvlan"/>
			<object name="m_tunnelidmgr"/>
		</private>
		
		<public>
			<function name="CTunnelManager">
				<set name="thisclass.id" value="0" />
				<set name="thisclass.invlan" value="0" />
				<set name="thisclass.outvlan" value="2000" />
				<log>CTunnelManager is create</log>
				<new name="m_tunnelidmgr" class="CTunnelIdManager"/>
			</function>
			
			<!--qiulei 20170913-->
			<!--
				@brief		添加tunnel
				@auth 		qiulei
				@date		2017/11/28
				Input:
				Output: 
					@param outjson 	获取封装后的json信息
			-->
			<function name="addTunnel">
				<parameters>
					<long name="id"/>
					<string name="username"/>
					<string name="inputPort"/>
					<string name="outputPort"/>					
					<string name="type"/>
					<string name="state"/>
					<long name="inputvlanid"/>
					<long name="outputvlanid"/>
					<string name="inputtunnelport"/>
					<string name="outputtunnelport"/>
					<!-- wangkang 2017/11/13 -->	
					<string name="inputvxlanport"/>
					<string name="outputvxlanport"/>			
					<long name="bandwidth"/>				
				</parameters>
				<long name="vxlantunnelid"/>
				<!--qiulei 20170919 pm-->
				<set name="thisclass.invlan" value="thisclass.invlan.toLong()+1" />
				<set name="thisclass.outvlan" value="thisclass.outvlan.toLong()+1" />
				<if cond="thisclass.invlan > 2000">
					<then>
						<function>
							<set name="thisclass.invlan" value="1" />
						</function>
					</then>
				</if>
				
				<if cond="thisclass.outvlan > 4000">
					<then>
						<function>
							<set name="thisclass.outvlan" value="2001" />
						</function>
					</then>
				</if>

				<set name="thisclass.id" value="thisclass.id.toLong()+1" />
				<set name="context.id" value="thisclass.id.toLong()"/>
				<function name="AllocTunnelId" class="thisclass.m_tunnelidmgr">
					<parameters>
						<long name="vxlantunnelid" out="context.vxlantunnelid"/>
					</parameters>
				</function>
				
				<object name="tunnelObject"/>
				<new name="tunnelObject" class="CTunnel">
					<parameters>
						<long name="id" in="thisclass.id.toLong()"/>
						<string name="username" in="context.username.toString()"/>
						<string name="inputPort" in="context.inputPort.toString()"/>
						<string name="outputPort" in="context.outputPort.toString()"/>
						<long name="invlan" in="thisclass.invlan.toLong()"/>
						<long name="outvlan" in="thisclass.outvlan.toLong()"/>
						<string name="type" in="context.type.toString()"/>
						<string name="state" in="context.state.toString()"/>
						<long name="inputvlanid" in="context.inputvlanid.toLong()"/>
						<long name="outputvlanid" in="context.outputvlanid.toLong()"/>
						<string name="inputtunnelport" in="context.inputtunnelport.toString()"/>
						<string name="outputtunnelport" in="context.outputtunnelport.toString()"/>
						<string name="inputvxlanport" in="context.inputvxlanport.toString()"/>
						<string name="outputvxlanport" in="context.outputvxlanport.toString()"/>
						<long name="vxlantunnelid" in="context.vxlantunnelid.toLong()"/>
						<long name="bandwidth" in="context.bandwidth.toLong()"/>
					</parameters>
				</new>
				
				<insert name="tunnelContainer" key="thisclass.id.toLong()" value="context.tunnelObject"/>
				<log level="101"><![CDATA[CTunnelManager tunnelContainer.size = <%=context.tunnelContainer.size().toString()%>]]></log>
			</function>
			<!--qiulei 20170913-->
			<!--
				@brief		删除tunnel
				@auth 		qiulei
				@date		2017/11/20 pm
				Input:
					@param tunnel_id
				Output: 
			-->
			<function name="removeTunnel">
				<parameters>
					<long name="tunnel_id"/>
				</parameters>

				<if cond="context.tunnelContainer.hasValue(context.tunnel_id.toLong())==true">
					<then>
						<function>
							<remove name="tunnelContainer" key="context.tunnel_id.toLong()"/>
						</function>
					</then>
				</if>
			</function>
			
			<!--
				@brief		tunnel转换为json字符串
				@auth 		qiulei
				@date		2017/11/28
				Input:
				Output: 
					@param AllTunnelJsonString
			-->
			<function name="AllTunnelToJsonStr">
				<parameters>
					<string name="AllTunnelJsonString"/>
				</parameters>
				<object name="tunnelObject"/>
				<string name="OneTunnelJsonString"/>
				<list name="tunnelJsonString_List" valuetype="string"/>
				<pair name="i" keytype="long" valuetype="object"/>
				<for var="i" in="context.tunnelContainer">
					<function>
						<set name="context.tunnelObject" value="context.i.second()"/>
						<if cond="context.tunnelObject != null">
							<then>
								<function name="OneTunnelObjectToJsonString" class="context.tunnelObject">
									<parameters>
										<string name="TunnelObjectToJson" out="context.OneTunnelJsonString"/>
									</parameters>
								</function>
								<insert name="context.tunnelJsonString_List" value="context.OneTunnelJsonString.toString()"/>
							</then>
						</if>
					</function>
				</for>
				
				<script><![CDATA[
					var jsonroot = new Object();
					var tunnelsArray = new Array();
					
					var first_str = context.tunnelJsonString_List.getFirst();
					while (first_str != null){
						var jsonobj = JSON.parse(first_str);
						tunnelsArray.push(jsonobj);
						first_str = context.tunnelJsonString_List.getNext();
						
					}
					
					jsonroot['tunnels']=tunnelsArray;
					jsonroot['resultCode']="0";
					jsonroot["resultDesc"]="ok";
					var strjson = JSON.stringify(jsonroot);
					context.AllTunnelJsonString.setValue(strjson);
				]]></script>
				
			</function>
			<!--qiulei 20170914 am get one tunnel object-->
			
			<!--
				@brief		根据tunnel_id，得到1个tunnel对象
				@auth 		qiulei
				@date		2017/11/28
				Input:
				Output: 
					@param AllTunnelJsonString
			-->
			<function name="GetOneTunnelObject">
				<parameters>
					<long name="tunnel_id"/>
					<object name="TunnelObject"/>
				</parameters>
				<log level="100">#############################################</log>
				<log level="100"><![CDATA[GetOneTunnelObject tunnel_id = <%=context.tunnel_id.toString()%>]]></log>
				<log level="100">#############################################</log>
				<if cond="context.tunnelContainer.hasValue(context.tunnel_id.toLong())==true">
					<then>
						<function>
							<log level="100">#############################################</log>
							<log level="100"><![CDATA[GetOneTunnelObject tunnelContainer.size = <%=thisclass.tunnelContainer.size().toString()%>]]></log>
							<log level="100">#############################################</log>
							<lookup name="tunnelContainer" key="context.tunnel_id.toLong()" output="context.TunnelObject"/>
						</function>
					</then>
					<else>
						<log level="100"> tunnel is null </log>
						<syslog level="FATAL"><![CDATA[tunnel null tunnelContainer.size = <%=thisclass.tunnelContainer.size().toString()%>]]></syslog>
					</else>
				</if>
			</function>
			
			<!--
				@brief		ergodic the tunnel container calls the mytopchange function in the CTunnel class
				@auth 		Wang Kang (kingsalone@sina.com)
				@date		2017/11/16
				Input:
		   			@param fromdevice 	Source Device id
		   			@param todevice 	destination Device id
			-->
			<function name="mytopchange">
				<parameters>
					<string name="fromdevice"/>
					<string name="todevice"/>
				</parameters>
				<log level="101">###### CTunnelManager mytopchange ######</log>
				<log level="101"><![CDATA[CTunnelManager tunnelContainer.size = <%=context.tunnelContainer.size().toString()%>]]></log>
				<hashmap-iterator name="tunnelContaineriterator" keytype="long" valuetype="object"/>
				<hashmap-iterator name="tunnelContainerfirst" keytype="long" valuetype="object"/>
				<hashmap-iterator name="tunnelContainerend" keytype="long" valuetype="object"/>
				<object name="onetunnel"/>
				<set name="tunnelContainerfirst" value="context.tunnelContainer.begin()"/>
				<set name="tunnelContainerend" value="context.tunnelContainer.end()"/>

				<for var="context.tunnelContaineriterator" from="context.tunnelContainerfirst" to="context.tunnelContainerend">
					<set name="onetunnel" value="context.tunnelContaineriterator.second()"/>
					<if cond="context.onetunnel.ptr == null">
						<then>
							<log level="100">CTunnelManager mytopchange onetunnel is null</log>
							<exit/>
						</then>
					</if>
					<function name="mytopchange" class="onetunnel">
						<parameters>
							<string name="fromdevice" in="context.fromdevice.toString()"/>
							<string name="todevice" in="context.todevice.toString()"/>
						</parameters>
					</function>
				</for>
			</function>


			<!--
				@brief		Check whether tunnel exists,if the tunnel does not exists,add tunnel 
				@auth 		Wang Kang (kingsalone@sina.com)
				@date		2017/12/13
				Input:
		   			@param fromdevice 	Source Device id
		   			@param todevice 	destination Device id
		   			@param isChange     Returns the state of Check whether tunnel exists
										 ture: tunnel exists
										 false:tunnel does not exist
			-->
			<function name="Is_Tunnel">
				<parameters>
					<string name="fromdevice"/>
					<string name="todevice"/>
					<boolean name="isChange"/>
				</parameters>
				<log level="101">###### CTunnelManager Is_Tunnel ######</log>
				<log level="101"><![CDATA[CTunnelManager tunnelContainer.size = <%=context.tunnelContainer.size().toString()%>]]></log>
				<if cond="context.tunnelContainer.size() == 0">
					<then>
						<set name="context.isChange" value="false"/>
						<exit/>
					</then>
				</if>
				<hashmap-iterator name="tunnelContaineriterator" keytype="long" valuetype="object"/>
				<hashmap-iterator name="tunnelContainerfirst" keytype="long" valuetype="object"/>
				<hashmap-iterator name="tunnelContainerend" keytype="long" valuetype="object"/>
				<object name="onetunnel"/>
				<set name="tunnelContainerfirst" value="context.tunnelContainer.begin()"/>
				<set name="tunnelContainerend" value="context.tunnelContainer.end()"/>

				<for var="context.tunnelContaineriterator" from="context.tunnelContainerfirst" to="context.tunnelContainerend">
					<set name="onetunnel" value="context.tunnelContaineriterator.second()"/>
					<if cond="context.onetunnel.ptr == null">
						<then>
							<log level="100">CTunnelManager Is_Tunnel onetunnel is null</log>
							<exit/>
						</then>
					</if>
					<function name="Is_Tunnel" class="onetunnel">
						<parameters>
							<string name="fromdevice" in="context.fromdevice.toString()"/>
							<string name="todevice" in="context.todevice.toString()"/>
							<boolean name="isChange" out="context.isChange"/>
						</parameters>
					</function>
				</for>
			</function>
			<!--
				@brief		Start tunnel
				@auth 		Wang Kang (kingsalone@sina.com)
				@date		2017/11/16
			-->
			<function name="ActiveTunnel">
				<log>CTunnelManager ActiveTunnel</log>
			</function>			
			<!--
				@brief		Close tunnel
				@auth 		Wang Kang (kingsalone@sina.com)
				@date		2017/11/16
			-->			
			<function name="DeactiveTunnel">
				<log>CTunnelManager DeactiveTunnel</log>
			</function>
			<!--
				@brief		ergodic the tunnel container calls the mytopremove function in the CTunnel class
				@auth 		Wang Kang (kingsalone@sina.com)
				@date		2017/09/22
				Input:
		   			@param fromdevice 	source device id
		   			@param todevice 	destination device id
		   			@param path 	JSON data of device attributes
			-->
			<function name="mytopremove">
				<parameters>
					<string name="fromdevice"/>
					<string name="todevice"/>
					<string name="path"/>
				</parameters>
				<log>###### CTunnelManager mytopremove ######</log>
				<log><![CDATA[CTunnelManager tunnelContainer.size = <%=context.tunnelContainer.size().toString()%>]]></log>
				<hashmap-iterator name="tunnelContaineriterator" keytype="long" valuetype="object"/>
				<hashmap-iterator name="tunnelContainerfirst" keytype="long" valuetype="object"/>
				<hashmap-iterator name="tunnelContainerend" keytype="long" valuetype="object"/>
				<object name="onetunnel"/>
				<set name="tunnelContainerfirst" value="context.tunnelContainer.begin()"/>
				<set name="tunnelContainerend" value="context.tunnelContainer.end()"/>

				<for var="context.tunnelContaineriterator" from="context.tunnelContainerfirst" to="context.tunnelContainerend">
					<set name="onetunnel" value="context.tunnelContaineriterator.second()"/>
					<if cond="context.onetunnel.ptr == null">
						<then>
							<log>CTunnelManager onetunnel is null</log>
							<exit/>
						</then>
					</if>
					<function name="mytopremove" class="onetunnel">
						<parameters>
							<string name="fromdevice" in="context.fromdevice.toString()"/>
							<string name="todevice" in="context.todevice.toString()"/>
							<string name="path" in="context.path.toString()"/>
						</parameters>
					</function>
				</for>
			</function>

			<function name="IsHasValue">
				<parameters>
					<string name="style"/>
					<string name="data"/>
					<boolean name="result"/>
				</parameters>
				<boolean name="final_result"/>
				<if cond="context.style.toString()=='inport'">
					<then>
						<function name="IsHasInPort">
							<parameters>
								<string name="data" in="context.data.toString()"/>
								<boolean name="result" out="context.final_result"/>
							</parameters>
						</function>
					</then>
					<elseif cond="context.style.toString()=='outport'">
						<function name="IsHasOutPort">
							<parameters>
								<string name="data" in="context.data.toString()"/>
								<boolean name="result" out="context.final_result"/>
							</parameters>
						</function>
					</elseif>
					<elseif cond="context.style.toString()=='invlan'">
						<function name="IsHasInVlan">
							<parameters>
								<string name="data" in="context.data.toString()"/>
								<boolean name="result" out="context.final_result"/>
							</parameters>
						</function>
					</elseif>
					<else>
						<function name="IsHasOutVlan">
							<parameters>
								<string name="data" in="context.data.toString()"/>
								<boolean name="result" out="context.final_result"/>
							</parameters>
						</function>
					</else>
				</if>
				<set name="context.result" value="context.final_result.toBoolean()"/>
			</function>
			
			<function name="IsHasInPort">
				<parameters>
					<string name="data"/>
					<boolean name="result"/>
				</parameters>
				<boolean name="final_result" value="false"/>
				<pair name="tunnelpair" keytype="long" valuetype="object"/>
				<object name="tunnel"/>
				<string name="port"/>
				<log><![CDATA[IsHasInPort tunnelContainer.size() = <%=thisclass.tunnelContainer.size().toString()%>]]></log>
				<for var="context.tunnelpair" in="thisclass.tunnelContainer">
					<set name="context.tunnel" value="context.tunnelpair.second()"/>
					<if cond="context.tunnel != null">
						<then>
							<function name="GetTunnel_inputPort" class="context.tunnel">
								<parameters>
									<string name="t_inputPort" out="context.port"/>
								</parameters>
							</function>
						</then>
					</if>
					<if cond="context.port.toString() == context.data.toString()">
						<then>
							<set name="context.final_result" value="true"/>
							<exit/>
						</then>
					</if>
				</for>
				<set name="context.result" value="context.final_result.toBoolean()"/>
			</function>
			
			<function name="IsHasOutPort">
				<parameters>
					<string name="data"/>
					<boolean name="result"/>
				</parameters>
				<boolean name="final_result" value="false"/>
				<pair name="tunnelpair" keytype="long" valuetype="object"/>
				<object name="tunnel"/>
				<string name="port"/>
				<log><![CDATA[IsHasOutPort tunnelContainer.size() = <%=thisclass.tunnelContainer.size().toString()%>]]></log>
				<for var="context.tunnelpair" in="thisclass.tunnelContainer">
					<set name="context.tunnel" value="context.tunnelpair.second()"/>
					<if cond="context.tunnel != null">
						<then>
							<function name="GetTunne_outputPort" class="context.tunnel">
								<parameters>
									<string name="t_outputPort" out="context.port"/>
								</parameters>
							</function>
						</then>
					</if>
					<if cond="context.port.toString() == context.data.toString()">
						<then>
							<set name="context.final_result" value="true"/>
							<exit/>
						</then>
					</if>
				</for>
				<set name="context.result" value="context.final_result.toBoolean()"/>
			</function>
			
			<function name="IsHasInVlan">
				<parameters>
					<string name="data"/>
					<boolean name="result"/>
				</parameters>
				<boolean name="final_result" value="false"/>
				<pair name="tunnelpair" keytype="long" valuetype="object"/>
				<object name="tunnel"/>
				<long name="vlan"/>
				<log><![CDATA[tunnelContainer.size() = <%=thisclass.tunnelContainer.size().toString()%>]]></log>
				<for var="context.tunnelpair" in="thisclass.tunnelContainer">
					<set name="context.tunnel" value="context.tunnelpair.second()"/>
					<if cond="context.tunnel != null">
						<then>
							<function name="GetTunnel_inputvlanid" class="context.tunnel">
								<parameters>
									<long name="t_inputvlanid" out="context.vlan"/>
								</parameters>
							</function>
						</then>
					</if>
					<if cond="context.vlan.toString() == context.data.toString()">
						<then>
							<set name="context.final_result" value="true"/>
							<exit/>
						</then>
					</if>
				</for>
				<set name="context.result" value="context.final_result.toBoolean()"/>
			</function>
			
			<function name="IsHasOutVlan">
				<parameters>
					<string name="data"/>
					<boolean name="result"/>
				</parameters>
				<boolean name="final_result" value="false"/>
				<pair name="tunnelpair" keytype="long" valuetype="object"/>
				<object name="tunnel"/>
				<long name="vlan"/>
				<log><![CDATA[tunnelContainer.size() = <%=thisclass.tunnelContainer.size().toString()%>]]></log>
				<for var="context.tunnelpair" in="thisclass.tunnelContainer">
					<set name="context.tunnel" value="context.tunnelpair.second()"/>
					<if cond="context.tunnel != null">
						<then>
							<function name="GetTunnel_outputvlanid" class="context.tunnel">
								<parameters>
									<long name="t_outputvlanid" out="context.vlan"/>
								</parameters>
							</function>
						</then>
					</if>
					<if cond="context.vlan.toString() == context.data.toString()">
						<then>
							<set name="context.final_result" value="true"/>
							<exit/>
						</then>
					</if>
				</for>
				<set name="context.result" value="context.final_result.toBoolean()"/>
			</function>
			<!--
				@brief		Get Tunnel Num
				@auth 		Wang Kang (kingsalone@sina.com)
				@date		2017/09/22
				Output:
		   			@param size 	size of tunnel Container
			-->
			<function name="getTunnelNum">
				<parameters>
					<long name="size"/>
				</parameters>
				<set name="context.size" value="thisclass.tunnelContainer.size()"/>
			</function>

			<!--
				@brief		ergodic the tunnel container calls the DeviceUp function in the CTunnel class
				@auth 		Wang Kang (kingsalone@sina.com)
				@date		2017/11/20
				Input:
		   			@param deviceid   The device ID connected to the controller
			-->
			<function name="DeviceUp">
				<parameters>
					<string name="deviceid"/>
				</parameters>
				<log level="101">###### CTunnelManager DeviceUp ######</log>
				<pair name="tunnelpair" keytype="long" valuetype="object"/>
				<object name="tunnel"/>
				<log level="101"><![CDATA[tunnelContainer.size() = <%=thisclass.tunnelContainer.size().toString()%>]]></log>
				<for var="context.tunnelpair" in="thisclass.tunnelContainer">
					<set name="context.tunnel" value="context.tunnelpair.second()"/>
					<if cond="context.tunnel != null">
						<then>
							<log level="101">###### tunnelContainer tunnel is not null ######</log>
							<function name="DeviceUp" class="context.tunnel">
								<parameters>
									<string name="deviceid" in="context.deviceid"/>
								</parameters>
							</function>
						</then>
					</if>
				</for>
			</function>
		</public>
	</class>
</starlang>