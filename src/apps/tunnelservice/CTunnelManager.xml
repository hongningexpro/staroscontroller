<?xml version="1.0" encoding="UTF-8"?>
<starlang xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	<!--
			Author:
					qiulei
			Date:
					20170913
			Copyright: 
					Nanjing StarOS Inc. All rights reserved.
		-->	
	<class name="CTunnelManager">
		<private>
			<hashmap name="tunnelContainer" keytype="long" valuetype="class"/>
			<long name="id"/>			
			<long name="invlan"/>
			<long name="outvlan"/>
		</private>
		
		<public>
			<function name="CTunnelManager">
				<set name="thisclass.id" value="0" />
				<set name="thisclass.invlan" value="0" />
				<set name="thisclass.outvlan" value="2000" />
				<log>CTunnelManager is create</log>
			</function>
			
			<!--qiulei 20170913-->
			<function name="addTunnel">
				<parameters>
					<long name="id"/>
					<string name="username"/>
					<string name="inputPort"/>
					<string name="outputPort"/>					
					<string name="type"/>
					<string name="state"/>
					<long name="inputvlanid"/>
					<long name="outputvlanid"/>
					<long name="bandwidth"/>				
				</parameters>
				
				<!--qiulei 20170919 pm-->
				<set name="thisclass.invlan" value="thisclass.invlan.toLong()+1" />
				<set name="thisclass.outvlan" value="thisclass.outvlan.toLong()+1" />
				<if cond="thisclass.invlan > 2000">
					<then>
						<function>
							<set name="thisclass.invlan" value="1" />
						</function>
					</then>
				</if>
				
				<if cond="thisclass.outvlan > 4000">
					<then>
						<function>
							<set name="thisclass.outvlan" value="2001" />
						</function>
					</then>
				</if>

				<set name="thisclass.id" value="thisclass.id.toLong()+1" />
				<set name="context.id" value="thisclass.id.toLong()"/>
				
				<object name="tunnelObject"/>
				<new name="tunnelObject" class="CTunnel">
					<parameters>
						<long name="id" in="thisclass.id.toLong()"/>
						<string name="username" in="context.username.toString()"/>
						<string name="inputPort" in="context.inputPort.toString()"/>
						<string name="outputPort" in="context.outputPort.toString()"/>
						<long name="invlan" in="thisclass.invlan.toLong()"/>
						<long name="outvlan" in="thisclass.outvlan.toLong()"/>
						<string name="type" in="context.type.toString()"/>
						<string name="state" in="context.state.toString()"/>
						<long name="inputvlanid" in="context.inputvlanid.toLong()"/>
						<long name="outputvlanid" in="context.outputvlanid.toLong()"/>
						<long name="bandwidth" in="context.bandwidth.toLong()"/>
					</parameters>
				</new>
				
				<insert name="tunnelContainer" key="thisclass.id.toLong()" value="context.tunnelObject"/>
				
			</function>
			<!--qiulei 20170913-->
			<function name="removeTunnel">
				<parameters>
					<long name="tunnel_id"/>
				</parameters>

				<if cond="context.tunnelContainer.hasValue(context.tunnel_id.toLong())==true">
					<then>
						<function>
							<remove name="tunnelContainer" key="context.tunnel_id.toLong()"/>
						</function>
					</then>
				</if>
			</function>
			
			<function name="AllTunnelToJsonStr">
				<parameters>
					<string name="AllTunnelJsonString"/>
				</parameters>
				<object name="tunnelObject"/>
				<string name="OneTunnelJsonString"/>
				<list name="tunnelJsonString_List" valuetype="string"/>
				<pair name="i" keytype="long" valuetype="class"/>
				<for var="i" in="context.tunnelContainer">
					<function>
						<set name="context.tunnelObject" value="context.i.second()"/>
						<if cond="context.tunnelObject != null">
							<then>
								<function name="OneTunnelObjectToJsonString" class="context.tunnelObject">
									<parameters>
										<string name="TunnelObjectToJson" out="context.OneTunnelJsonString"/>
									</parameters>
								</function>
								<insert name="context.tunnelJsonString_List" value="context.OneTunnelJsonString.toString()"/>
							</then>
						</if>
					</function>
				</for>
				
				<script><![CDATA[
					var jsonroot = new Object();
					var tunnelsArray = new Array();
					
					var first_str = context.tunnelJsonString_List.getFirst();
					while (first_str != null){
						var jsonobj = JSON.parse(first_str);
						tunnelsArray.push(jsonobj);
						first_str = context.tunnelJsonString_List.getNext();
						
					}
					
					jsonroot['tunnels']=tunnelsArray;
					jsonroot['resultCode']="0";
					jsonroot["resultDesc"]="ok";
					var strjson = JSON.stringify(jsonroot);
					context.AllTunnelJsonString.setValue(strjson);
				]]></script>
				
			</function>
			<!--qiulei 20170914 am get one tunnel object-->
			<function name="GetOneTunnelObject">
				<parameters>
					<long name="tunnel_id"/>
					<object name="TunnelObject"/>
				</parameters>

				<if cond="context.tunnelContainer.hasValue(context.tunnel_id.toLong())==true">
					<then>
						<function>
							<lookup name="tunnelContainer" key="context.tunnel_id.toLong()" output="context.TunnelObject"/>
						</function>
					</then>
				</if>
			</function>
						
			<function name="ActiveTunnel">
				<log>CTunnelManager ActiveTunnel</log>
			</function>			
						
			<function name="DeactiveTunnel">
				<log>CTunnelManager DeactiveTunnel</log>
			</function>
			<!--yijian add-->
			<function name="mytopremove">
				<parameters>
					<string name="fromdevice"/>
					<string name="todevice"/>
					<string name="path"/>
				</parameters>
				<log>CTunnelManager mytopremove</log>
				<hashmap-iterator name="tunnelContaineriterator" keytype="long" valuetype="class"/>
				<hashmap-iterator name="tunnelContainerfirst" keytype="long" valuetype="class"/>
				<hashmap-iterator name="tunnelContainerend" keytype="long" valuetype="class"/>
				<object name="onetunnel"/>
				<set name="tunnelContainerfirst" value="context.tunnelContainer.begin()"/>
				<set name="tunnelContainerend" value="context.tunnelContainer.end()"/>
				<for var="context.tunnelContaineriterator" from="context.tunnelContainerfirst" to="context.tunnelContainerend">
					<set name="onetunnel" value="context.tunnelContaineriterator.second()"/>
					<if cond="context.onetunnel != null">
						<then>
							<function name="mytopremove" class="onetunnel">
								<parameters>
									<string name="fromdevice" in="context.fromdevice.toString()"/>
									<string name="todevice" in="context.todevice.toString()"/>
									<string name="path" in="context.path.toString()"/>
								</parameters>
							</function>
						</then>
					</if>
				</for>
			</function>

			<function name="IsHasValue">
				<parameters>
					<string name="style"/>
					<string name="data"/>
					<boolean name="result"/>
				</parameters>
				<boolean name="final_result"/>
				<if cond="context.style.toString()=='inport'">
					<then>
						<function name="IsHasInPort">
							<parameters>
								<string name="data" in="context.data.toString()"/>
								<boolean name="result" out="context.final_result"/>
							</parameters>
						</function>
					</then>
					<elseif cond="context.style.toString()=='outport'">
						<function name="IsHasOutPort">
							<parameters>
								<string name="data" in="context.data.toString()"/>
								<boolean name="result" out="context.final_result"/>
							</parameters>
						</function>
					</elseif>
					<elseif cond="context.style.toString()=='invlan'">
						<function name="IsHasInVlan">
							<parameters>
								<string name="data" in="context.data.toString()"/>
								<boolean name="result" out="context.final_result"/>
							</parameters>
						</function>
					</elseif>
					<else>
						<function name="IsHasOutVlan">
							<parameters>
								<string name="data" in="context.data.toString()"/>
								<boolean name="result" out="context.final_result"/>
							</parameters>
						</function>
					</else>
				</if>
				<set name="context.result" value="context.final_result.toBoolean()"/>
			</function>
			
			<function name="IsHasInPort">
				<parameters>
					<string name="data"/>
					<boolean name="result"/>
				</parameters>
				<boolean name="final_result" value="false"/>
				<pair name="tunnelpair" keytype="long" valuetype="class"/>
				<object name="tunnel"/>
				<string name="port"/>
				<for var="context.tunnelpair" in="thisclass.tunnelContainer">
					<set name="context.tunnel" value="context.tunnelpair.second()"/>
					<if cond="context.tunnel != null">
						<then>
							<function name="GetTunnel_inputPort" class="context.tunnel">
								<parameters>
									<string name="t_inputPort" out="context.port"/>
								</parameters>
							</function>
						</then>
					</if>
					<if cond="context.port.toString() == context.data.toString()">
						<then>
							<set name="context.final_result" value="true"/>
							<exit/>
						</then>
					</if>
				</for>
				<set name="context.result" value="context.final_result.toBoolean()"/>
			</function>
			<function name="IsHasOutPort">
				<parameters>
					<string name="data"/>
					<boolean name="result"/>
				</parameters>
				<boolean name="final_result" value="false"/>
				<pair name="tunnelpair" keytype="long" valuetype="class"/>
				<object name="tunnel"/>
				<string name="port"/>
				<for var="context.tunnelpair" in="thisclass.tunnelContainer">
					<set name="context.tunnel" value="context.tunnelpair.second()"/>
					<if cond="context.tunnel != null">
						<then>
							<function name="GetTunne_outputPort" class="context.tunnel">
								<parameters>
									<string name="t_outputPort" out="context.port"/>
								</parameters>
							</function>
						</then>
					</if>
					<if cond="context.port.toString() == context.data.toString()">
						<then>
							<set name="context.final_result" value="true"/>
							<exit/>
						</then>
					</if>
				</for>
				<set name="context.result" value="context.final_result.toBoolean()"/>
			</function>
			<function name="IsHasInVlan">
				<parameters>
					<string name="data"/>
					<boolean name="result"/>
				</parameters>
				<boolean name="final_result" value="false"/>
				<pair name="tunnelpair" keytype="long" valuetype="class"/>
				<object name="tunnel"/>
				<long name="vlan"/>
				<for var="context.tunnelpair" in="thisclass.tunnelContainer">
					<set name="context.tunnel" value="context.tunnelpair.second()"/>
					<if cond="context.tunnel != null">
						<then>
							<function name="GetTunnel_inputvlanid" class="context.tunnel">
								<parameters>
									<long name="t_inputvlanid" out="context.vlan"/>
								</parameters>
							</function>
						</then>
					</if>
					<if cond="context.vlan.toString() == context.data.toString()">
						<then>
							<set name="context.final_result" value="true"/>
							<exit/>
						</then>
					</if>
				</for>
				<set name="context.result" value="context.final_result.toBoolean()"/>
			</function>
			<function name="IsHasOutVlan">
				<parameters>
					<string name="data"/>
					<boolean name="result"/>
				</parameters>
				<boolean name="final_result" value="false"/>
				<pair name="tunnelpair" keytype="long" valuetype="class"/>
				<object name="tunnel"/>
				<long name="vlan"/>
				<for var="context.tunnelpair" in="thisclass.tunnelContainer">
					<set name="context.tunnel" value="context.tunnelpair.second()"/>
					<if cond="context.tunnel != null">
						<then>
							<function name="GetTunnel_outputvlanid" class="context.tunnel">
								<parameters>
									<long name="t_outputvlanid" out="context.vlan"/>
								</parameters>
							</function>
						</then>
					</if>
					<if cond="context.vlan.toString() == context.data.toString()">
						<then>
							<set name="context.final_result" value="true"/>
							<exit/>
						</then>
					</if>
				</for>
				<set name="context.result" value="context.final_result.toBoolean()"/>
			</function>
			<function name="getTunnelNum">
				<parameters>
					<long name="size"/>
				</parameters>
				<set name="context.size" value="thisclass.tunnelContainer.size()"/>
			</function>
		</public>
	</class>
</starlang>