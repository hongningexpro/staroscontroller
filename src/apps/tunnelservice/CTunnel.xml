<?xml version="1.0" encoding="UTF-8"?>
<starlang xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	<!--wangkang 2017/09/13 -->
	<class name="CTunnel">
		<private>
			<long name="m_id"/>
			<string name="m_username"/>
			<string name="m_inputPort"/>
			<string name="m_outputPort"/>
			
			<long name="m_serviceinvlan"/>			
			<long name="m_serviceoutvlan"/>
			<string name="m_type"/>
			<string name="m_state"/>
			<long name="m_inputvlanid"/>
			<long name="m_outputvlanid"/>
			
			<long name="m_bandwidth"/>
			<object name="m_tunneldevicemgr"/>
			<boolean name="m_bisActive" value="false"/>
			
			<string name="m_fromdevice"/>
			<string name="m_fromdeviceport"/>
			<string name="m_todevice"/>
			<string name="m_todeviceport"/>
		</private>
		<public>
			<function name="CTunnel">
				<parameters>
					<long name="id"/>
					<string name="username"/>
					<string name="inputPort"/>
					<string name="outputPort"/>
					<long name="invlan"/>
					
					<long name="outvlan"/>
					<string name="type"/>
					<string name="state"/>
					<long name="inputvlanid"/>
					<long name="outputvlanid"/>
					
					<long name="bandwidth"/>
				</parameters>
				<set name="thisclass.m_id" value="context.id.toLong()"/>
				<set name="thisclass.m_username" value="context.username.toString()"/>
				<set name="thisclass.m_inputPort" value="context.inputPort.toString()"/>
				<set name="thisclass.m_outputPort" value="context.outputPort.toString()"/>
				<set name="thisclass.m_serviceinvlan" value="context.invlan.toLong()"/>
				<set name="thisclass.m_serviceoutvlan" value="context.outvlan.toLong()"/>
				<set name="thisclass.m_type" value="context.type.toString()"/>
				<set name="thisclass.m_state" value="context.state.toString()"/>
				<set name="thisclass.m_inputvlanid" value="context.inputvlanid.toLong()"/>
				<set name="thisclass.m_outputvlanid" value="context.outputvlanid.toLong()"/>
				<set name="thisclass.m_bandwidth" value="context.bandwidth.toLong()"/>
				<new name="m_tunneldevicemgr" class="CTunnelDeviceManager"/>
				<script><![CDATA[
					var inputport = thisclass.m_inputPort.toString();
					var oneinputid = (inputport.split("/")[0]).split(":")[1];	
					var inputport = inputport.split("/")[1];			
					var outputport = thisclass.m_outputPort.toString();
					var oneoutputid = (outputport.split("/")[0]).split(":")[1];
					var outputport = outputport.split("/")[1];
					thisclass.m_fromdevice.setValue(oneinputid);
					thisclass.m_todevice.setValue(oneoutputid);
					thisclass.m_fromdeviceport.setValue(inputport);
					thisclass.m_todeviceport.setValue(outputport);
				]]></script>
			</function>

			<function name="GetTunnelId">
				<parameters>
					<long name="outid"/>
				</parameters>
				<set name="outid" value="thisclass.m_id.toLong()"/>
			</function>
			<!--qiulei 20170913 pm-->
			<function name="GetTunnel_username">
				<parameters>
					<string name="t_username"/>
				</parameters>
				<set name="t_username" value="thisclass.m_username.toString()"/>
			</function>
			
			<function name="GetTunnel_inputPort">
				<parameters>
					<string name="t_inputPort"/>
				</parameters>
				<set name="t_inputPort" value="thisclass.m_inputPort.toString()"/>
			</function>
			
			
			<function name="GetTunne_outputPort">
				<parameters>
					<string name="t_outputPort"/>
				</parameters>
				<set name="t_outputPort" value="thisclass.m_outputPort.toString()"/>
			</function>
			
			<function name="GetTunne_invlan">
				<parameters>
					<long name="t_invlan"/>
				</parameters>
				<set name="t_invlan" value="thisclass.m_invlan.toLong()"/>
			</function>
			
			<function name="GetTunnel_outvlan">
				<parameters>
					<long name="t_outvlan"/>
				</parameters>
				<set name="t_outvlan" value="thisclass.m_outvlan.toLong()"/>
			</function>
			
			<function name="GetTunnel_type">
				<parameters>
					<string name="t_type"/>
				</parameters>
				<set name="t_type" value="thisclass.m_type.toString()"/>
			</function>
			
			<function name="GetTunnel_state">
				<parameters>
					<string name="t_state"/>
				</parameters>
				<set name="t_state" value="thisclass.m_state.toString()"/>
			</function>
			
			<function name="GetTunnel_inputvlanid">
				<parameters>
					<long name="t_inputvlanid"/>
				</parameters>
				<set name="t_inputvlanid" value="thisclass.m_inputvlanid.toLong()"/>
			</function>
			
			<function name="GetTunnel_outputvlanid">
				<parameters>
					<long name="t_outputvlanid"/>
				</parameters>
				<set name="t_outputvlanid" value="thisclass.m_outputvlanid.toLong()"/>
			</function>
			
			<function name="GetTunnel_bandwidth">
				<parameters>
					<long name="t_bandwidth"/>
				</parameters>
				<set name="t_bandwidth" value="thisclass.m_bandwidth.toLong()"/>
			</function>
			
			<!--qiulei 20170913-->

			<function name="OneTunnelObjectToJsonString">
				<parameters>
					<string name="TunnelObjectToJson"/>
				</parameters>
				<log>insert CTunnel OneTunnelObjectToJsonString</log>
				<string name="values"/>
				<reference variable="values">
					<jsonbody><![CDATA[ 
						{	
							"id":"<%=thisclass.m_id.toString()%>",
							"username":"<%=thisclass.m_username.toString()%>",
							"inputPort":"<%=thisclass.m_inputPort.toString()%>",
							"outputPort":"<%=thisclass.m_outputPort.toString()%>",
							"invlan":"<%=thisclass.m_serviceinvlan.toString()%>",
							
							"outvlan":"<%=thisclass.m_serviceoutvlan.toString()%>",
							"type":"<%=thisclass.m_type.toString()%>",
							"state":"<%=thisclass.m_state.toString()%>",
							"inputvlanid":"<%=thisclass.m_inputvlanid.toString()%>",
							"outputvlanid":"<%=thisclass.m_outputvlanid.toString()%>",
							
							"bandwidth":"<%=thisclass.m_bandwidth.toString()%>"
						}
					]]></jsonbody>
				</reference>
				<log><![CDATA[context.values = <%=context.values.toString()%>]]></log>
				<set name="TunnelObjectToJson" value="context.values.toString()"/>
			</function>
			
			<!--qiulei 20170913 update Tunnel-->
			<function name="UpdateTunnel">
				<parameters>
					<string name="username"/>
					<string name="inputPort"/>
					<string name="outputPort"/>
					<long name="invlan"/>
					
					<long name="outvlan"/>
					<string name="type"/>
					<string name="state"/>
					<long name="inputvlanid"/>
					<long name="outputvlanid"/>
					<long name="bandwidth"/>
				</parameters>
				
				<set name="thisclass.m_username" value="context.username.toString()"/>
				<set name="thisclass.m_inputPort" value="context.inputPort.toString()"/>
				<set name="thisclass.m_outputPort" value="context.outputPort.toString()"/>
				<set name="thisclass.m_serviceinvlan" value="context.invlan.toLong()"/>
				<set name="thisclass.m_serviceoutvlan" value="context.outvlan.toLong()"/>
				<set name="thisclass.m_type" value="context.type.toString()"/>
				<set name="thisclass.m_state" value="context.state.toString()"/>
				<set name="thisclass.m_inputvlanid" value="context.inputvlanid.toLong()"/>
				<set name="thisclass.m_outputvlanid" value="context.outputvlanid.toLong()"/>
				<set name="thisclass.m_bandwidth" value="context.bandwidth.toLong()"/>
			</function>
			
			<!-- wangkang 2017/09/15 -->
			<function name="ActiveTunnel">
				<object name="firstdevice"/>
				<object name="lastdevice"/>
				<object name="onedevice"/>
				<list name="middevice" valuetype="class"/>
				<list-iterator name="middeviceiterator" valuetype="class"/>
				<list-iterator name="middevicefirst" valuetype="class"/>
				<list-iterator name="middeviceend" valuetype="class"/>
				<boolean name="getpathresult"/>
				<log>==============================</log>
				<log>##### Active Tunnel #####</log>
				<if cond="thisclass.m_bisActive.toBoolean()==true">
					<then>
						<function>
							<log>Tunnel is Active already</log>
							<exit/>
						</function>
					</then>
				</if>
				<!--
				<function name="InstallMeter"/>
				<function name="InstallFlow"/>
				-->
				<function name="GetShortPath">
					<parameters>
						<boolean name="result" out="context.getpathresult"/>
					</parameters>
				</function>
				<if cond="context.getpathresult.toBoolean()==false">
					<then>
						<log>getpathresult is false</log>
						<exit/>
					</then>
				</if>
				
				<if cond="thisclass.m_tunneldevicemgr.ptr!= null">
					<then>
						<function name="PrintTunnerDevice" class="m_tunneldevicemgr"/>
						<log>##### m_tunneldevicemgr is not null #####</log>
						<function name="GetFirstDevice" class="m_tunneldevicemgr">
							<parameters>
								<object name="firstdevice" out="context.firstdevice"/>
							</parameters>
						</function>
						
						<function name="GetLastDevice" class="m_tunneldevicemgr">
							<parameters>
								<object name="lastdevice" out="context.lastdevice"/>
							</parameters>
						</function>
						
						<function name="GetMiddleDevice" class="m_tunneldevicemgr">
							<parameters>
								<list name="devicelist" out="context.middevice"/>
							</parameters>							
						</function>
					</then>
				</if>
				<if cond="context.firstdevice.equal(context.lastdevice)">
					<then>
						<log>context.firstdevice==context.lastdevice</log>
						<function name="installRuleAtSameDevice" class="firstdevice">
							<parameters>
								<string name="inport" in="thisclass.m_fromdeviceport.toString()"/>
								<string name="invlan" in="thisclass.m_inputvlanid.toString()"/>
								<string name="outport" in="thisclass.m_todeviceport.toString()"/>
								<string name="outvlan" in="thisclass.m_outputvlanid.toString()"/>
								<long name="bandwith" in="thisclass.m_bandwidth.toLong()"/>
							</parameters>
						</function>
						<set name="m_bisActive" value="true"/>
						<exit/>
					</then>
				</if>
				<function name="installRuleStart" class="firstdevice">
					<parameters>
						<string name="inport" in="thisclass.m_fromdeviceport.toString()"/>
						<string name="invlan" in="thisclass.m_inputvlanid.toString()"/>
						<string name="serviceinvlan" in="thisclass.m_serviceinvlan.toString()"/>
						<string name="serviceoutvlan" in="thisclass.m_serviceoutvlan.toString()"/>
						<long name="bandwith" in="thisclass.m_bandwidth.toLong()"/>
					</parameters>
				</function>
				<function name="installRuleEnd" class="lastdevice">
					<parameters>
						<string name="serviceinvlan" in="thisclass.m_serviceinvlan.toString()"/>
						<string name="serviceoutvlan" in="thisclass.m_serviceoutvlan.toString()"/>
						<string name="outport" in="thisclass.m_todeviceport.toString()"/>
						<string name="outvlan" in="thisclass.m_outputvlanid.toString()"/>
						<long name="bandwith" in="thisclass.m_bandwidth.toLong()"/>
					</parameters>
				</function>

				<set name="middevicefirst" value="context.middevice.begin()"/>
				<set name="middeviceend" value="context.middevice.end()"/>				
				<log><![CDATA[middevice size=<%=context.middevice.size().toString()%>]]></log>			
				<for var="context.middeviceiterator" from="context.middevicefirst" to="context.middeviceend">
					<set name="onedevice" value="context.middeviceiterator.value()"/>
					<function name="installRuleMid" class="onedevice">
						<parameters>
							<string name="serviceinvlan" in="thisclass.m_serviceinvlan.toString()"/>
							<string name="serviceoutvlan" in="thisclass.m_serviceoutvlan.toString()"/>
						</parameters>
					</function>
				</for>
				<set name="m_bisActive" value="true"/>
			</function>
			<function name="DeactiveTunnel">
				<log>##### Deactive Tunnel #####</log>
				<if cond="thisclass.m_bisActive.toBoolean()==false">
					<then>
						<function>
							<log>Tunnel is Deactive already</log>
							<exit/>
						</function>
					</then>
				</if>
				<if cond="thisclass.m_tunneldevicemgr.ptr!= null">
					<then>
						<function name="DeactiveTunnel" class="m_tunneldevicemgr"/>
					</then>
				</if>
				<set name="m_bisActive" value="false"/>
			</function>
			
			<function name="GetShortPath">
				<parameters>
					<boolean name="result"/>
				</parameters>
				<log>##### Get Shortest Path #####</log>
				<string name="strlink"/>
				<string name="strlink2"/>
				<if cond="thisclass.m_fromdevice.toString()==thisclass.m_todevice.toString()">
					<then>
						<function name="CreateTunnelDevice" class="thisclass.m_tunneldevicemgr">
							<parameters>
								<string name="deviceid" in="thisclass.m_fromdevice.toString()"/>
							</parameters>
						</function>
						<set name="result" value="true"/>
					</then>
					<else>
						<function name="getShortestPath" class="TopoService">
							<parameters>
								<string name="fromdevice" in="thisclass.m_fromdevice.toString()"/>
								<string name="todevice" in="thisclass.m_todevice.toString()"/>
								<string name="outjson" out="context.strlink"/>
							</parameters>
						</function>
						<function name="getShortestLink" class="TopoService">
							<parameters>
								<string name="fromdevice" in="thisclass.m_fromdevice.toString()"/>
								<string name="todevice" in="thisclass.m_todevice.toString()"/>
								<string name="outjson" out="context.strlink2"/>
							</parameters>
						</function>						
						<if cond="context.strlink.toString()!=''">
							<then>
								<function name="GetTunnelDeviceFromJson" class="thisclass.m_tunneldevicemgr">
									<parameters>
										<string name="json" in="context.strlink.toString()"/>
									</parameters>
								</function>
								<log>result true</log>
								<set name="result" value="true"/>
							</then>
							<else>
								<log>result false</log>
								<set name="result" value="false"/>
							</else>
						</if>
					</else>
				</if>
			</function>
			
			<!-- wangkang 2017/09/21-->
			<function name="FindTunnelDeviceFromlist">
				<parameters>
					<string name="json"/>
				</parameters>
				<string name="dstport"/>
				<string name="srcport"/>
				<string name="oneinputport"/>
				<string name="oneoutputport"/>
				<string name="onedeviceid"/>
				<object name="onetunneldevice"/>
				<log><![CDATA[json=<%=context.json.toString()%>]]></log>
				<script><![CDATA[
					if (context.json.toString().length>0)
					{
						var info = JSON.parse(context.json.toString());
						if (info.paths.length==1)
						{
							context.dstport.setValue(info.paths[0].dst.port);
							context.srcport.setValue(info.paths[0].src.port);
						}
					}
				]]></script>
				
				<for var="onetunneldevice" in="thisclass.m_tunneldevicemgr.tunneldeviceContainer">
					<function name="GetInputPort" class="context.onetunneldevice">
						<parameters>
							<string name="inputPort" out="context.oneinputport"/>
						</parameters>
					</function>
					<function name="GetOutputPort" class="context.onetunneldevice">
						<parameters>
							<string name="outputPort" out="context.oneoutputport"/>
						</parameters>
					</function>
					<if cond="context.srcport.toString() == context.inputport.toString()">
						<then>
							<if cond="context.dstport.toString() == context.outputport.toString()">
								<then>
									<log>TunnelDevice is Find From List</log>
									<function name="GetTunnelDeviceId" class="context.onetunneldevice">
										<parameters>
											<string name="outtunneldeviceid" out="context.onedeviceid"/>
										</parameters>
									</function>
									<exit/>
								</then>
							</if>
						</then>
					</if>
				</for>
				<function name="removeTunnelDevice" class="thisclass.m_tunneldevicemgr">
					<parameters>
						<string name="deviceid" in="context.onedeviceid"/>
					</parameters>
				</function>
				<function name="GetShortPath"/>
			</function>
			
			<!--Topology change-->
			<function name="mytopremove">
				<parameters>
					<string name="fromdevice"/>
					<string name="todevice"/>
					<string name="path"/>
				</parameters>
				<boolean name="isChange" value="false"/>
				<log>Tunnel Top channge</log>
				<log><![CDATA[CTunnel mytopremove fromdevice = <%=context.fromdevice.toString()%>]]></log>
				<function name="IsMyTopChange" class="m_tunneldevicemgr">
					<parameters>
						<string name="fromdevice" in="context.fromdevice.toString()"/>
						<string name="todevice" in="context.todevice.toString()"/>
						<string name="path" in="context.path.toString()"/>
						<boolean name="ischanage" out="context.isChange"/>
					</parameters>
				</function>
				<if cond="context.isChange.toBoolean()==true">
					<then>
						<function name="DeactiveTunnel"/>
						<function name="ActiveTunnel"/>
					</then>					
				</if>
			</function>
			
		</public>
	</class>
</starlang>