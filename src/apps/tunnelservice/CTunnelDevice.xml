<starlang xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	<!--hupeng 2017/09/25 -->
	<class name="CTunnelDevice">
		<private>
			<string name="m_deviceid"/>
			<string name="m_inputPort"/>
			<string name="m_outputPort"/>
			<string name="m_flowid"/>
			<string name="m_flowid2"/>
			<long name="m_meterid"/>
		</private>	
		<public>
			<function name="CTunnelDevice">
				<parameters>
					<string name="deviceid"/>
					<string name="inputPort"/>
					<string name="outputPort"/>
				</parameters>
				<log>##### CTunnelDevice is create #####</log>
				<log><![CDATA[CTunnelDevice deviceid = <%=context.deviceid.toString()%>]]></log>
				<set name="thisclass.m_deviceid" value="context.deviceid.toString()"/>
				<set name="thisclass.m_inputPort" value="context.inputPort.toString()"/>
				<set name="thisclass.m_outputPort" value="context.outputPort.toString()"/>
			</function>
			<function name="Printtunnel">
				<log><![CDATA[Ctunnel m_inputPort=<%=context.m_inputPort.toString()%>]]></log>
				<log><![CDATA[Ctunnel m_outputPort=<%=context.m_outputPort.toString()%>]]></log>
			</function>
			<function name="GetTunnelDeviceId">
				<parameters>
					<string name="outtunneldeviceid"/>
				</parameters>
				<set name="outtunneldeviceid" value="thisclass.m_deviceid.toString()"/>
			</function>
			<function name="GetInputPort">
				<parameters>
					<string name="inputPort"/>
				</parameters>
				<set name="inputPort" value="thisclass.m_inputPort.toString()"/>
			</function>
			<function name="GetOutputPort">
				<parameters>
					<string name="outputPort"/>
				</parameters>
				<set name="outputPort" value="thisclass.m_outputPort.toString()"/>
			</function>

			<function name="installRuleAtSameDevice">
				<parameters>
					<string name="inport"/>
					<string name="invlan"/>
					<string name="outport"/>
					<string name="outvlan"/>
					<long name="bandwith"/>
				</parameters>
				<string name="jsonout2in"/>
				<string name="jsonin2out"/>

				<log>CTunnelDevice installRuleAtSameDevice</log>
				
				<function name="InstallMeter">	
					<parameters>
						<string name="bandwith" in="context.bandwith.toString()"/>
					</parameters>	
				</function>
				
				<reference variable="jsonin2out">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID().toString()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.invlan.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=context.inport.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"0",
												"outport":"<%=context.outport.toString()%>",
												"maxlen":"0xffff"
											}
										]
									},
									{
										"type":"6",
										"meterid":"<%=context.m_meterid.toString()%>"
									}
								]
							}
					]]></jsonbody>
				</reference>
				<reference variable="jsonout2in">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID().toString()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.outvlan.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=context.outport.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"0",
												"outport":"<%=context.inport.toString()%>",
												"maxlen":"0xffff"
											}
										]
									},
									{
										"type":"6",
										"meterid":"<%=context.m_meterid.toString()%>"
									}
								]
							}
					]]></jsonbody>
				</reference>
				
				<function name="InstallFlow" class="flowservice">
					<parameters>
						<string name="outflowid" out="thisclass.m_flowid"/>
						<string name="strjson" in="context.jsonin2out.toString()"/>
						<string name="appId" in="'tunnelservice'"/>
						<string name="datapathid" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
				<function name="InstallFlow" class="flowservice">
					<parameters>
						<string name="outflowid" out="thisclass.m_flowid2"/>
						<string name="strjson" in="context.jsonout2in.toString()"/>
						<string name="appId" in="'tunnelservice'"/>
						<string name="datapathid" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
				<if cond="context.m_flowid.size() == 0">
					<then>
						<log>context.m_flowid.size() == 0</log>
						<assert/>
					</then>
				</if>
				<if cond="context.m_flowid2.size() == 0">
					<then>
						<log>context.m_flowid2.size() == 0</log>
						<assert/>
					</then>
				</if>
			</function>
			<function name="installRuleStart">
				<parameters>
					<string name="inport"/>
					<string name="invlan"/>
					<string name="serviceinvlan"/>
					<string name="serviceoutvlan"/>
					<long name="bandwith"/>
				</parameters>
				<log>Ctunnerdevice installRuleStart</log>
				<string name="jsonin2out"/>
				<string name="jsonout2in"/>

				<function name="InstallMeter">	
					<parameters>
						<string name="bandwith" in="context.bandwith.toString()"/>
					</parameters>	
				</function>
								
				<reference variable="jsonin2out">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID().toString()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=context.inport.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.invlan.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"17",
												"ethertype":"0x8100",
												"maxlen":"0xffff"
											},
											{
												"type":"25",
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.serviceinvlan.toString()%>"
											},
											{
												"type":"0",
												"outport":"<%=thisclass.m_outputPort.toString()%>",
												"maxlen":"0xffff"
											}
										]
									},
									{
										"type":"6",
										"meterid":"<%=thisclass.m_meterid.toString()%>"
									}
								]
							}
					]]></jsonbody>
				</reference>
				
				<reference variable="jsonout2in">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID().toString()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=thisclass.m_outputPort.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.serviceoutvlan.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"18",
												"maxlen":"0xffff"
											},
											{
												"type":"0",
												"outport":"<%=context.inport.toString()%>",
												"maxlen":"0xffff"
											}
										]
									},
									{
										"type":"6",
										"meterid":"<%=thisclass.m_meterid.toString()%>"
									}
								]
							}
					]]></jsonbody>
				</reference>
						
				<function name="InstallFlow" class="flowservice">
					<parameters>
						<string name="outflowid" out="thisclass.m_flowid"/>
						<string name="strjson" in="context.jsonin2out.toString()"/>
						<string name="appId" in="'tunnelservice'"/>
						<string name="datapathid" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
				<function name="InstallFlow" class="flowservice">
					<parameters>
						<string name="outflowid" out="thisclass.m_flowid2"/>
						<string name="strjson" in="context.jsonout2in.toString()"/>
						<string name="appId" in="'tunnelservice'"/>
						<string name="datapathid" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
				
				<log><![CDATA[jsonin2out = <%=context.jsonin2out.toString()%>]]></log>
				<log><![CDATA[jsonout2in = <%=context.jsonout2in.toString()%>]]></log>			
			</function>
			<function name="installRuleMid">
				<parameters>
					<string name="serviceinvlan"/>
					<string name="serviceoutvlan"/>
				</parameters>
				<string name="jsonin2out"/>
				<string name="jsonout2in"/>

				<log>CTunnelDevice installRuleMid</log>
				<reference variable="jsonin2out">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID().toString()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.serviceinvlan.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=thisclass.m_inputPort.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"0",
												"outport":"<%=thisclass.m_outputPort.toString()%>",
												"maxlen":"0xffff"
											}
										]
									}
								]
							}
					]]></jsonbody>
				</reference>
				<reference variable="jsonout2in">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID().toString()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.serviceoutvlan.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=thisclass.m_outputPort.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"0",
												"outport":"<%=thisclass.m_inputPort.toString()%>",
												"maxlen":"0xffff"
											}
										]
									}
								]
							}
					]]></jsonbody>
				</reference>
				<function name="InstallFlow" class="flowservice">
					<parameters>
						<string name="outflowid" out="thisclass.m_flowid"/>
						<string name="strjson" in="context.jsonin2out.toString()"/>
						<string name="appId" in="'tunnelservice'"/>
						<string name="datapathid" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
				<function name="InstallFlow" class="flowservice">
					<parameters>
						<string name="outflowid" out="thisclass.m_flowid2"/>
						<string name="strjson" in="context.jsonout2in.toString()"/>
						<string name="appId" in="'tunnelservice'"/>
						<string name="datapathid" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
			</function>
			<function name="installRuleEnd">
				<parameters>
					<string name="serviceinvlan"/>
					<string name="serviceoutvlan"/>
					<string name="outport"/>
					<string name="outvlan"/>
					<long name="bandwith"/>
				</parameters>
				<string name="jsonin2out"/>
				<string name="jsonout2in"/>

				<log>CTunnelDevice installRuleEnd</log>
				<function name="InstallMeter">	
					<parameters>
						<string name="bandwith" in="context.bandwith.toString()"/>
					</parameters>	
				</function>
				
				<reference variable="jsonin2out">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID().toString()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.serviceinvlan.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=thisclass.m_inputPort.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"18",
												"maxlen":"0xffff"
											},
											{
												"type":"0",
												"outport":"<%=context.outport.toString()%>",
												"maxlen":"0xffff"
											}
										]
									},
									{
										"type":"6",
										"meterid":"<%=thisclass.m_meterid.toString()%>"
									}
								]
							}
					]]></jsonbody>
				</reference>
				<reference variable="jsonout2in">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID().toString()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=context.outport.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.outvlan.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"17",
												"ethertype":"0x8100",
												"maxlen":"0xffff"
											},
											{
												"type":"25",
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.serviceoutvlan.toString()%>"
											},
											{
												"type":"0",
												"outport":"<%=thisclass.m_inputPort.toString()%>",
												"maxlen":"0xffff"
											}
										]
									},
									{
										"type":"6",
										"meterid":"<%=thisclass.m_meterid.toString()%>"
									}
								]
							}
					]]></jsonbody>
				</reference>
				
				<function name="InstallFlow" class="FlowService">
					<parameters>
						<string name="outflowid" out="thisclass.m_flowid"/>
						<string name="strjson" in="context.jsonin2out.toString()"/>
						<string name="appId" in="'tunnelservice'"/>
						<string name="datapathid" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
				<function name="InstallFlow" class="FlowService">
					<parameters>
						<string name="outflowid" out="thisclass.m_flowid2"/>
						<string name="strjson" in="context.jsonout2in.toString()"/>
						<string name="appId" in="'tunnelservice'"/>
						<string name="datapathid" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
			</function>
			
			<function name="InstallVxlanTunnelStart">
				<parameters>
					<string name="inport"/>
					<string name="invlan"/>
					<string name="serviceinvlan"/>
					<string name="serviceoutvlan"/>
					<string name="inputtunnelport"/>
					<string name="outputtunnelport"/>
					<long name="vxlantunnelid"/>
					<long name="bandwith"/>
				</parameters>
				<string name="jsonin2out"/>
				<string name="jsonout2in"/>
				
				<log>### CTunnelDevice InstallVxlanTunnelStart###</log>
				
				<function name="InstallMeter">	
					<parameters>
						<string name="bandwith" in="context.bandwith.toString()"/>
					</parameters>	
				</function>
				
				<reference variable="jsonin2out">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID().toString()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.invlan.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=context.inport.toString()%>"
											}
										]
									},
									"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"17",
												"ethertype":"0x8100",
												"maxlen":"0xffff"
											},
											{
												"type":"25",
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.serviceinvlan.toString()%>"
											},
											{
												"type":"0",
												"outport":"<%=context.outputtunnelport.toString()%>",
												"maxlen":"0xffff"
											},
											{
												"type":"25",
												"oxmfield":"38",
												"tunnelid":"<%=context.vxlantunnelid.toLong()%>",
												"maxlen":"0xffff"
											}
										]
									},
									{
										"type":"6",
										"meterid":"<%=thisclass.m_meterid.toString()%>"
									}
								]
							}
					]]></jsonbody>
				</reference>
				<reference variable="jsonout2in">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID().toString()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.serviceoutvlan.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=thisclass.m_outputPort.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"18",
												"maxlen":"0xffff"
											},
											{
												"type":"0",
												"outport":"<%=context.inputtunnelport.toString()%>",
												"maxlen":"0xffff"
											},
											{
												"type":"25",
												"oxmfield":"38",
												"tunnelid":"<%=context.vxlantunnelid.toLong()%>",
												"maxlen":"0xffff"
											}
										]
									},
									{
										"type":"6",
										"meterid":"<%=thisclass.m_meterid.toString()%>"
									}
								]
							}
					]]></jsonbody>
				</reference>
				<function name="InstallFlow" class="flowservice">
					<parameters>
						<string name="outflowid" out="thisclass.m_flowid"/>
						<string name="strjson" in="context.jsonin2out.toString()"/>
						<string name="appId" in="'tunnelservice'"/>
						<string name="datapathid" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
				<function name="InstallFlow" class="flowservice">
					<parameters>
						<string name="outflowid" out="thisclass.m_flowid2"/>
						<string name="strjson" in="context.jsonout2in.toString()"/>
						<string name="appId" in="'tunnelservice'"/>
						<string name="datapathid" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
				<if cond="context.m_flowid.size() == 0">
					<then>
						<log>context.m_flowid.size() == 0</log>
						<assert/>
					</then>
				</if>
				<if cond="context.m_flowid2.size() == 0">
					<then>
						<log>context.m_flowid2.size() == 0</log>
						<assert/>
					</then>
				</if>	
			</function>
			
			<function name="InstallVxlanTunnelEnd">
				<parameters>
					<string name="serviceinvlan"/>
					<string name="serviceoutvlan"/>
					<string name="outport"/>
					<string name="outvlan"/>
					<string name="outputtunnelport"/>
					<string name="inputtunnelport"/>
					<long name="vxlantunnelid"/>
					<long name="bandwith"/>
				</parameters>
				<string name="jsonin2out"/>
				<string name="jsonout2in"/>
				
				<log>### CTunnelDevice InstallVxlanTunnelEnd###</log>
				
				<function name="InstallMeter">	
					<parameters>
						<string name="bandwith" in="context.bandwith.toString()"/>
					</parameters>	
				</function>
				
				<reference variable="jsonin2out">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID().toString()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.serviceinvlan.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=thisclass.m_inputPort.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"18",
												"maxlen":"0xffff"
											},
											{
												"type":"0",
												"outport":"<%=context.outputtunnelport.toString()%>",
												"maxlen":"0xffff"
											},
											{
												"type":"25",
												"oxmfield":"38",
												"tunnelid":"<%=context.vxlantunnelid.toLong()%>",
												"maxlen":"0xffff"
											}
										]
									},
									{
										"type":"6",
										"meterid":"<%=thisclass.m_meterid.toString()%>"
									}
								]
							}
					]]></jsonbody>
				</reference>
				<reference variable="jsonout2in">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID().toString()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=context.outport.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.outvlan.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"17",
												"ethertype":"0x8100",
												"maxlen":"0xffff"
											},
											{
												"type":"25",
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.serviceoutvlan.toString()%>"
											},
											{
												"type":"0",
												"outport":"<%=context.inputtunnelport.toString()%>",
												"maxlen":"0xffff"
											},
											{
												"type":"25",
												"oxmfield":"38",
												"tunnelid":"<%=context.vxlantunnelid.toLong()%>",
												"maxlen":"0xffff"
											}
										]
									},
									{
										"type":"6",
										"meterid":"<%=thisclass.m_meterid.toString()%>"
									}
								]
							}
					]]></jsonbody>
				</reference>
				<function name="InstallFlow" class="flowservice">
					<parameters>
						<string name="outflowid" out="thisclass.m_flowid"/>
						<string name="strjson" in="context.jsonin2out.toString()"/>
						<string name="appId" in="'tunnelservice'"/>
						<string name="datapathid" in="thisclass.m_device.toString()"/>
					</parameters>
				</function>
				<function name="InstallFlow" class="flowservice">
					<parameters>
						<string name="outflowid" out="thisclass.m_flowid2"/>
						<string name="strjson" in="context.jsonout2in.toString()"/>
						<string name="appId" in="'tunnelservice'"/>
						<string name="datapathid" in="thisclass.m_device.toString()"/>
					</parameters>
				</function>
					<if cond="context.m_flowid.size() == 0">
					<then>
						<log>context.m_flowid.size() == 0</log>
						<assert/>
					</then>
				</if>
				<if cond="context.m_flowid2.size() == 0">
					<then>
						<log>context.m_flowid2.size() == 0</log>
						<assert/>
					</then>
				</if>	
			</function>
			
			<function name="InstallMeter">	
				<parameters>
					<string name="bandwith"/>
				</parameters>		
				<string name="modstrjson"/>
				
				<log>Ctunnerdevice InstallMeter</log>
				<reference variable="modstrjson">
					<jsonbody><![CDATA[ 
						{
							"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID().toString()%>",
							"command":"<$=OPENFLOW_METER_MOD_ADD$>",
							"flag":"0x00000005",
							"meterid":"1",
							"meterbandlist":[
								{
									"bandtype":"1",
									"rate":"<%=context.bandwith.toString()%>",
									"burstsize":"0"
								}
							]
						}	
					]]></jsonbody>
				</reference>
				<function name="InstallMeter" class="MeterService">
					<parameters>
						<long name="outmeterid" out="thisclass.m_meterid"/>
						<string name="meterjson" in="context.modstrjson.toString()"/>
						<string name="appid" in="'tunnelservice'"/>
						<string name="datapathid" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
			</function>
			<function name="DeactiveTunnel">
				<!--DeactiveTunnel-->
				<!--删除流表-->
				<!--删除meter-->
				<log>CTunnelDevice DeactiveTunnel</log>
				<function name="UnInstallFlow" class="FlowService">
					<parameters>
						<string name="datapathid" in="thisclass.m_deviceid.toString()"/>			
						<string name="flowid" in="thisclass.m_flowid.toString()"/>
					</parameters>
				</function>
				<!--uninstall flow 2-->
				<function name="UnInstallFlow" class="FlowService">
					<parameters>
						<string name="datapathid" in="thisclass.m_deviceid.toString()"/>			
						<string name="flowid" in="thisclass.m_flowid2.toString()"/>
					</parameters>
				</function>
				<!--uninstall meter-->
				<log><![CDATA[thisclass.m_deviceid.toString() = <%=thisclass.m_deviceid.toString()%>]]></log>
				<log><![CDATA[thisclass.m_meterid.toString() = <%=thisclass.m_meterid.toString()%>]]></log>				
				<function name="UnInstallMeter" class="MeterService">
					<parameters>
						<string name="datapathid" in="thisclass.m_deviceid.toString()"/>			
						<long name="meterid" in="thisclass.m_meterid.toLong()"/>
					</parameters>
				</function>
			</function>
		</public>
	</class>	
</starlang>