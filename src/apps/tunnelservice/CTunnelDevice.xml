<starosxml xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	<!--hupeng 2017/09/25 -->
	<class name="CTunnelDevice">
		<private>
			<variable name="m_deviceid" type="string"/>
			<variable name="m_inputPort" type="string"/>
			<variable name="m_outputPort" type="string"/>
			<variable name="m_flowid" type="string"/>
			<variable name="m_flowid2" type="string"/>
			<variable name="m_meterid" type="long"/>
		</private>	
		<public>
			<function name="CTunnelDevice">
				<parameters>
					<parameter name="deviceid" type="string"/>
					<parameter name="inputPort" type="string"/>
					<parameter name="outputPort" type="string"/>
				</parameters>
				<log>##### CTunnelDevice is create #####</log>
				<log><![CDATA[CTunnelDevice deviceid = <%=context.deviceid.toString()%>]]></log>
				<set name="thisclass.m_deviceid" value="context.deviceid.toString()"/>
				<set name="thisclass.m_inputPort" value="context.inputPort.toString()"/>
				<set name="thisclass.m_outputPort" value="context.outputPort.toString()"/>
			</function>
			<function name="Printtunnel">
				<log><![CDATA[Ctunnel m_inputPort=<%=context.m_inputPort.toString()%>]]></log>
				<log><![CDATA[Ctunnel m_outputPort=<%=context.m_outputPort.toString()%>]]></log>
			</function>
			<function name="GetTunnelDeviceId">
				<parameters>
					<parameter name="outtunneldeviceid" type="string"/>
				</parameters>
				<set name="outtunneldeviceid" value="thisclass.m_deviceid.toString()"/>
			</function>
			<function name="GetInputPort">
				<parameters>
					<parameter name="inputPort" type="string"/>
				</parameters>
				<set name="inputPort" value="thisclass.m_inputPort.toString()"/>
			</function>
			<function name="GetOutputPort">
				<parameters>
					<parameter name="outputPort" type="string"/>
				</parameters>
				<set name="outputPort" value="thisclass.m_outputPort.toString()"/>
			</function>
			<function name="installRuleAtSameDevice">
				<parameters>
					<parameter name="inport" type="string"/>
					<parameter name="invlan" type="string"/>
					<parameter name="outport" type="string"/>
					<parameter name="outvlan" type="string"/>
					<parameter name="bandwith" type="long"/>
				</parameters>
				<variable name="jsonout2in" type="string"/>
				<variable name="jsonin2out" type="string"/>
				<variable name="onedevice" type="class"/>
				<variable name="oneflowmgr" type="class"/>
				<log>CTunnelDevice installRuleAtSameDevice</log>
				
				<function name="InstallMeter">	
					<parameters>
						<parameter name="bandwith" type="string" in="context.bandwith.toString()"/>
					</parameters>	
				</function>
				
				<reference variable="jsonin2out">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.getIncreaseXID()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.invlan.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=context.inport.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"0",
												"outport":"<%=context.outport.toString()%>",
												"maxlen":"0xffff"
											}
										]
									},
									{
										"type":"6",
										"meterid":"<%=context.m_meterid.toLong()%>"
									}
								]
							}
					]]></jsonbody>
				</reference>
				<reference variable="jsonout2in">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.getIncreaseXID()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.outvlan.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=context.outport.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"0",
												"outport":"<%=context.inport.toString()%>",
												"maxlen":"0xffff"
											}
										]
									},
									{
										"type":"6",
										"meterid":"<%=context.m_meterid.toLong()%>"
									}
								]
							}
					]]></jsonbody>
				</reference>
				
				<function name="InstallFlow" class="flowservice">
					<parameters>
						<parameter name="outflowid" type="string" out="thisclass.m_flowid"/>
						<parameter name="strjson" type="string" in="context.jsonin2out.toString()"/>
						<parameter name="appId" type="string" in="'tunnelservice'"/>
						<parameter name="datapathid" type="string" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
				<function name="InstallFlow" class="flowservice">
					<parameters>
						<parameter name="outflowid" type="string" out="thisclass.m_flowid2"/>
						<parameter name="strjson" type="string" in="context.jsonout2in.toString()"/>
						<parameter name="appId" type="string" in="'tunnelservice'"/>
						<parameter name="datapathid" type="string" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
			<if cond="context.m_flowid.size() == 0">
					<then>
						<log>context.m_flowid.size() == 0</log>
						<assert/>
					</then>
				</if>
				<if cond="context.m_flowid2.size() == 0">
					<then>
						<log>context.m_flowid2.size() == 0</log>
						<assert/>
					</then>
				</if>
			</function>
			<function name="installRuleStart">
				<parameters>
					<parameter name="inport" type="string"/>
					<parameter name="invlan" type="string"/>
					<parameter name="serviceinvlan" type="string"/>
					<parameter name="serviceoutvlan" type="string"/>
					<parameter name="bandwith" type="long"/>
				</parameters>
				<log>Ctunnerdevice installRuleStart</log>
				<variable name="jsonin2out" type="string"/>
				<variable name="jsonout2in" type="string"/>
				<variable name="oneflowmgr" type="class"/>
				<variable name="onedevice" type="class"/>

				<function name="InstallMeter">	
					<parameters>
						<parameter name="bandwith" type="string" in="context.bandwith.toString()"/>
					</parameters>	
				</function>
								
				<reference variable="jsonin2out">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.getIncreaseXID()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=context.inport.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.invlan.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"17",
												"ethertype":"0x8100",
												"maxlen":"0xffff"
											},
											{
												"type":"25",
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.serviceinvlan.toString()%>"
											},
											{
												"type":"0",
												"outport":"<%=thisclass.m_outputPort.toString()%>",
												"maxlen":"0xffff"
											}
										]
									},
									{
										"type":"6",
										"meterid":"<%=thisclass.m_meterid.toLong()%>"
									}
								]
							}
					]]></jsonbody>
				</reference>
				
				<reference variable="jsonout2in">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.getIncreaseXID()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=thisclass.m_outputPort.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.serviceoutvlan.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"18",
												"maxlen":"0xffff"
											},
											{
												"type":"0",
												"outport":"<%=context.inport.toString()%>",
												"maxlen":"0xffff"
											}
										]
									},
									{
										"type":"6",
										"meterid":"<%=thisclass.m_meterid.toLong()%>"
									}
								]
							}
					]]></jsonbody>
				</reference>
			
				
				<function name="InstallFlow" class="flowservice">
					<parameters>
						<parameter name="outflowid" type="string" out="thisclass.m_flowid"/>
						<parameter name="strjson" type="string" in="context.jsonin2out.toString()"/>
						<parameter name="appId" type="string" in="'tunnelservice'"/>
						<parameter name="datapathid" type="string" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
				<function name="InstallFlow" class="flowservice">
					<parameters>
						<parameter name="outflowid" type="string" out="thisclass.m_flowid2"/>
						<parameter name="strjson" type="string" in="context.jsonout2in.toString()"/>
						<parameter name="appId" type="string" in="'tunnelservice'"/>
						<parameter name="datapathid" type="string" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
				
				<log><![CDATA[jsonin2out = <%=context.jsonin2out.toString()%>]]></log>
				<log><![CDATA[jsonout2in = <%=context.jsonout2in.toString()%>]]></log>			
			</function>
			<function name="installRuleMid">
				<parameters>
					<parameter name="serviceinvlan" type="string"/>
					<parameter name="serviceoutvlan" type="string"/>
				</parameters>
				<variable name="jsonin2out" type="string"/>
				<variable name="jsonout2in" type="string"/>
				<variable name="oneflowmgr" type="class"/>
				<variable name="onedevice" type="class"/>
				<log>CTunnelDevice installRuleMid</log>
				<reference variable="jsonin2out">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.getIncreaseXID()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.serviceinvlan.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=thisclass.m_inputPort.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"0",
												"outport":"<%=thisclass.m_outputPort.toString()%>",
												"maxlen":"0xffff"
											}
										]
									}
								]
							}
					]]></jsonbody>
				</reference>
				<reference variable="jsonout2in">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.getIncreaseXID()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.serviceoutvlan.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=thisclass.m_outputPort.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"0",
												"outport":"<%=thisclass.m_inputPort.toString()%>",
												"maxlen":"0xffff"
											}
										]
									}
								]
							}
					]]></jsonbody>
				</reference>
				<function name="InstallFlow" class="flowservice">
					<parameters>
						<parameter name="outflowid" type="string" out="thisclass.m_flowid"/>
						<parameter name="strjson" type="string" in="context.jsonin2out.toString()"/>
						<parameter name="appId" type="string" in="'tunnelservice'"/>
						<parameter name="datapathid" type="string" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
				<function name="InstallFlow" class="flowservice">
					<parameters>
						<parameter name="outflowid" type="string" out="thisclass.m_flowid2"/>
						<parameter name="strjson" type="string" in="context.jsonout2in.toString()"/>
						<parameter name="appId" type="string" in="'tunnelservice'"/>
						<parameter name="datapathid" type="string" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
			</function>
			<function name="installRuleEnd">
				<parameters>
					<parameter name="serviceinvlan" type="string"/>
					<parameter name="serviceoutvlan" type="string"/>
					<parameter name="outport" type="string"/>
					<parameter name="outvlan" type="string"/>
					<parameter name="bandwith" type="long"/>
				</parameters>
				<variable name="jsonin2out" type="string"/>
				<variable name="jsonout2in" type="string"/>
				<variable name="oneflowmgr" type="class"/>
				<variable name="onedevice" type="class"/>
				<log>CTunnelDevice installRuleEnd</log>
				<function name="InstallMeter">	
					<parameters>
						<parameter name="bandwith" type="string" in="context.bandwith.toString()"/>
					</parameters>	
				</function>
				
				<reference variable="jsonin2out">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.getIncreaseXID()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.serviceinvlan.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=thisclass.m_inputPort.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"18",
												"maxlen":"0xffff"
											},
											{
												"type":"0",
												"outport":"<%=context.outport.toString()%>",
												"maxlen":"0xffff"
											}
										]
									},
									{
										"type":"6",
										"meterid":"<%=thisclass.m_meterid.toLong()%>"
									}
								]
							}
					]]></jsonbody>
				</reference>
				<reference variable="jsonout2in">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.getIncreaseXID()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"<%=context.outport.toString()%>"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.outvlan.toString()%>"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"17",
												"ethertype":"0x8100",
												"maxlen":"0xffff"
											},
											{
												"type":"25",
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"<%=context.serviceoutvlan.toString()%>"
											},
											{
												"type":"0",
												"outport":"<%=thisclass.m_inputPort.toString()%>",
												"maxlen":"0xffff"
											}
										]
									},
									{
										"type":"6",
										"meterid":"<%=thisclass.m_meterid.toLong()%>"
									}
								]
							}
					]]></jsonbody>
				</reference>
				
				<function name="InstallFlow" class="FlowService">
					<parameters>
						<parameter name="outflowid" type="string" out="thisclass.m_flowid"/>
						<parameter name="strjson" type="string" in="context.jsonin2out.toString()"/>
						<parameter name="appId" type="string" in="'tunnelservice'"/>
						<parameter name="datapathid" type="string" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
				<function name="InstallFlow" class="FlowService">
					<parameters>
						<parameter name="outflowid" type="string" out="thisclass.m_flowid2"/>
						<parameter name="strjson" type="string" in="context.jsonout2in.toString()"/>
						<parameter name="appId" type="string" in="'tunnelservice'"/>
						<parameter name="datapathid" type="string" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
			</function>
			<function name="InstallMeter">	
				<parameters>
					<parameter name="bandwith" type="string"/>
				</parameters>		
				<variable name="modstrjson" type="string"/>
				
				<log>Ctunnerdevice InstallMeter</log>
				<reference variable="modstrjson">
					<jsonbody><![CDATA[ 
						{
							"xid":"<%=context.openflowserverobj.getIncreaseXID()%>",
							"command":"<$=OPENFLOW_METER_MOD_ADD$>",
							"flag":"0x00000005",
							"meterid":"1",
							"meterbandlist":[
								{
									"bandtype":"1",
									"rate":"<%=context.bandwith.toString()%>",
									"burstsize":"0"
								}
							]
						}	
					]]></jsonbody>
				</reference>
				<function name="InstallMeter" class="MeterService">
					<parameters>
						<parameter name="outmeterid" type="long" out="thisclass.m_meterid"/>
						<parameter name="meterjson" type="string" in="context.modstrjson.toString()"/>
						<parameter name="appid" type="string" in="'tunnelservice'"/>
						<parameter name="datapathid" type="string" in="thisclass.m_deviceid.toString()"/>
					</parameters>
				</function>
			</function>
			<function name="DeactiveTunnel">
				<!--DeactiveTunnel-->
				<!--删除流表-->
				<!--删除meter-->
				<log>CTunnelDevice DeactiveTunnel</log>
				<function name="UnInstallFlow" class="FlowService">
					<parameters>
						<parameter name="datapathid" type="string" in="thisclass.m_deviceid.toString()"/>			
						<parameter name="flowid" type="string" in="thisclass.m_flowid.toString()"/>
					</parameters>
				</function>
				<!--uninstall flow 2-->
				<function name="UnInstallFlow" class="FlowService">
					<parameters>
						<parameter name="datapathid" type="string" in="thisclass.m_deviceid.toString()"/>			
						<parameter name="flowid" type="string" in="thisclass.m_flowid2.toString()"/>
					</parameters>
				</function>
				<!--uninstall meter-->
				<log><![CDATA[thisclass.m_deviceid.toString() = <%=thisclass.m_deviceid.toString()%>]]></log>
				<log><![CDATA[thisclass.m_meterid.toLong() = <%=thisclass.m_meterid.toLong()%>]]></log>				
				<function name="UnInstallMeter" class="MeterService">
					<parameters>
						<parameter name="datapathid" type="string" in="thisclass.m_deviceid.toString()"/>			
						<parameter name="meterid" type="long" in="thisclass.m_meterid.toLong()"/>
					</parameters>
				</function>
			</function>
		</public>
	</class>	
</starosxml>