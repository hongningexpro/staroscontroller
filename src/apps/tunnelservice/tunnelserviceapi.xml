<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (C) 2013-2016 Nanjing StarOS Technology Co., Ltd
	All rights reserved.
	
	@file 		tunnelserviceapi.xml
	@brief 		tunnelapp's api
	@version 	1.1.0
	@auth 		YY
	@date		2017/09/14

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<starlang xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	<function name="RegisterHandler">
		<log>insert tunnelserviceapi RegisterHandler</log>
		
		
		<function name="RegisterAPIHandler" class="restfulservice">
			<parameters>
				<long name="bundleid" in="context.getCurrentBundleId()"/>			
				<string name="handleevent" in="'processactiverequest'"/>
				<string name="requestpathtest" in="'/onos/v1/tunnelservice/tunnels/active'"/>			
			</parameters>
		</function>		
		<function name="RegisterAPIHandler" class="restfulservice">
			<parameters>
				<long name="bundleid" in="context.getCurrentBundleId()"/>			
				<string name="handleevent" in="'processtunnelsrequest'"/>
				<string name="requestpathtest" in="'/onos/v1/tunnelservice/tunnels'"/>			
			</parameters>
		</function>
		<function name="RegisterAPIHandler" class="restfulservice">
			<parameters>
				<long name="bundleid" in="context.getCurrentBundleId()"/>			
				<string name="handleevent" in="'processtunnelrequest'"/>
				<string name="requestpathtest" in="'/onos/v1/tunnelservice/tunnel/{resourceid}'"/>			
			</parameters>
		</function>
		<function name="RegisterAPIHandler" class="restfulservice">
			<parameters>
				<long name="bundleid" in="context.getCurrentBundleId()"/>			
				<string name="handleevent" in="'processaddtunnelrequest'"/>
				<string name="requestpathtest" in="'/onos/v1/tunnelservice/tunnel'"/>			
			</parameters>
		</function>
	</function>
	
	<function name="UnRegisterHandler">
		<function name="UnRegisterAPIHandler" class="restfulservice">
			<parameters>
				<string name="requestpath" in="'/onos/v1/tunnelservice/tunnels/active'"/>			
			</parameters>
		</function>
		<function name="UnRegisterAPIHandler" class="restfulservice">
			<parameters>
				<string name="requestpath" in="'/onos/v1/tunnelservice/tunnels/tunnel/{resourceid}'"/>			
			</parameters>
		</function>
		<function name="UnRegisterAPIHandler" class="restfulservice">
			<parameters>
				<string name="requestpath" in="'/onos/v1/tunnelservice/tunnels'"/>			
			</parameters>
		</function>
		<function name="UnRegisterAPIHandler" class="restfulservice">
			<parameters>
				<string name="requestpath" in="'/onos/v1/tunnelservice/tunnel'"/>			
			</parameters>
		</function>
	</function>
	<!--
		@brief		根据操作类型区分方法
		@auth 		YY
		@date		2017/09/14
		Input:
		Output:
	-->
	<events>
		<onevent event="processactiverequest">
			<log>tunnelserviceapi processactiverequest</log>
			<if cond="event.getParam('method').toString() == 'POST'">
				<then>
					<long name="size"/>
					<function name="getTunnelNum" class="context.tunnelManagerObject">
						<parameters>
							<long name="size" out="context.size"/>
						</parameters>
					</function>
					<if cond="context.size.toLong()==0">
						<then>
							<function name="ErrorDataResponse">
								<parameters>
									<long name="resourceid" in="-1"/>
									<string name="transportid" in="event.getParam('transportid').toString()"/>
									<string name="description" in="'This tunnelcontanier size is null!'"/>
								</parameters>
							</function>
							<exit/>
						</then>
					</if>
					<function name="ActiveTunnel" class="context.tunnelManagerObject"/>
					<string name="outjson"/>
					<script><![CDATA[
						var json = new Object();
						var one = new Object();
						one.resourceId = 0;
						one.code = 0;
						one.description = "ok";						
						json.result = one;
						var strjson=JSON.stringify(json);												
						context.outjson.setValue(strjson);
					]]></script>
					<function name="SendResponse" class="RestfulService">
						<parameters>
							<string name="transportid" in="event.getParam('transportid').toString()"/>
							<string name="json" in="context.outjson.toString()"/>
						</parameters>
					</function>
				</then>
				<else>
					<long name="size"/>
					<function name="getTunnelNum" class="context.tunnelManagerObject">
						<parameters>
							<long name="size" out="context.size"/>
						</parameters>
					</function>
					<if cond="context.size.toLong()==0">
						<then>
							<function name="ErrorDataResponse">
								<parameters>
									<long name="resourceid" in="-1"/>
									<string name="transportid" in="event.getParam('transportid').toString()"/>
									<string name="description" in="'This tunnelcontanier size is null!'"/>
								</parameters>
							</function>
							<exit/>
						</then>
					</if>
					<function name="DeactiveTunnel" class="context.tunnelManagerObject"/>
					<string name="outjson"/>
					<script><![CDATA[
						var json = new Object();
						var one = new Object();
						one.resourceId = 0;
						one.code = 0;
						one.description = "ok";						
						json.result = one;
						var strjson=JSON.stringify(json);												
						context.outjson.setValue(strjson);
					]]></script>
					<function name="SendResponse" class="RestfulService">
						<parameters>
							<string name="transportid" in="event.getParam('transportid').toString()"/>
							<string name="json" in="context.outjson.toString()"/>
						</parameters>
					</function>
				</else>
			</if>
		</onevent>	
		<!--
			@brief		添加tunnel
			@auth 		YY
			@date		2017/09/14
			Input:
			Output:
		-->	
		<onevent event="processaddtunnelrequest">
			<log level="100">tunnelserviceapi processaddtunnelsrequest</log>
			<boolean name="isChange"/>
			<string name="fromdevice"/>
			<string name="todevice"/>
			<hashmap name="tunnelmap" keytype="string" valuetype="string"/>
			<hashmap name="tunnelinfo" keytype="long" valuetype="hashmap"/>
			<pair name="onetunnelpair" keytype="string" valuetype="string"/>
			<boolean name="isdb" value="true"/>
			<if cond="event.getParam('eventdata').toString() == ''">
				<then>
					<log level="100">addtunnel eventdata is null</log>
					<exit/>
				</then>	
			</if>
			<script><![CDATA[
				var json = JSON.parse(event.getParam('eventdata').toString());
				context.print(event.getParam('eventdata').toString());
				if(json.specialLine == null)
				{
					context.isdb.setValue(false);
				}
			]]></script>
			<if cond="context.isdb.toBoolean() == false">
				<then>
					<syslog level="INFO"><![CDATA[ADD json= <%=event.getParam('eventdata').toString()%>]]></syslog>
					<function name="addTunnel"/>
				</then>
				<else>
					<syslog level="INFO"> 1 add old tunnel</syslog>
					<log level="100">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       isdb is true #####</log>
					<syslog level="INFO"><![CDATA[ADD OLD json= <%=event.getParam('eventdata').toString()%>]]></syslog>
					<script><![CDATA[
						var json = JSON.parse(event.getParam('eventdata').toString());
						if(json.specialLine != null)
						{
							for (var i = 0; i < json.specialLine.length; i++)
							{
								var onehashmap = context.createHashMap("string","string");
								onehashmap.addValue('fromdevice', (json.specialLine[i].inputPort.split("/")[0]).split(":")[1]);
								onehashmap.addValue('todevice', (json.specialLine[i].outputPort.split("/")[0]).split(":")[1]);
								context.tunnelinfo.addValue(i,onehashmap);
								context.destroyHashMap(onehashmap);
							}
						}	
					]]></script>
					<for var="onetunnelpair" in="tunnelinfo">
						<syslog level="INFO"> ######### processaddtunnelrequest FOR START #########</syslog>
						<set name="tunnelmap" value="context.onetunnelpair.second()"/>
						<set name="fromdevice" value="context.tunnelmap.getValue('fromdevice').toString()"/>	
						<set name="todevice" value="context.tunnelmap.getValue('todevice').toString()"/>
						<log level="101"><![CDATA[++++++ fromdevice = <%=context.fromdevice.toString()%>]]></log>
						<log level="101"><![CDATA[++++++ todevice = <%=context.todevice.toString()%>]]></log>

						<function name="Is_Tunnel" class="context.tunnelManagerObject">
							<parameters>
								<string name="fromdevice" in="context.fromdevice.toString()"/>
								<string name="todevice" in="context.todevice.toString()"/>
								<boolean name="isChange" out="context.isChange"/>
							</parameters>
						</function>	

						<if cond="context.isChange.toBoolean()==false">
							<then>
								<syslog level="INFO"> ######### addOldTunnel START #########</syslog>
								<function name="addOldTunnel">
									<parameters>
										<long name="specialLineid" in="context.onetunnelpair.first().toLong()"/>
									</parameters>
								</function>
							</then>
						</if>	
					</for>
				</else>
			</if>						
		</onevent>
		<!--
			@brief		获取所有tunnels
			@auth 		YY
			@date		2017/09/14
			Input:
			Output:
		-->	
		<onevent event="processtunnelsrequest">
			<log>tunnelserviceapi processtunnelsrequest</log>					
			<function name="getAllTunnels"/>				
		</onevent>
		<!--
			@brief		根据操作类型区分方法
			@auth 		YY
			@date		2017/09/14
			Input:
			Output:
		-->
		<onevent event="processtunnelrequest">
			<log level="100">tunnelserviceapi processrequest</log>	
			<syslog level="INFO"><![CDATA[ProcessTunnelrequest json= <%=event.getParam('method').toString()%>]]></syslog>		
			<if cond="event.getParam('method').toString()=='GET'">
				<then>
					<log>insert method get</log>
					<function name="getTunnel"/>						
				</then>
				<elseif cond="event.getParam('method').toString()=='PUT'">
					<log>insert method put</log>										
					<function name="updateTunnel"/>						
				</elseif>				
				<else>
					<log level="100">insert method delete</log>
					<function name="deleteTunnel"/>						
				</else>									
			</if>				
		</onevent>
	</events>
	<!--
		@brief		获取所有tunnels
		@auth 		YY
		@date		2017/09/14
		Input:
		Output:
	-->	
	<function name="getAllTunnels">		
		<log>insert getAllTunnels</log>
		<string name="outjson"/>
		<function name="AllTunnelToJsonStr" class="context.tunnelManagerObject">
			<parameters>
				<string name="AllTunnelJsonString" out="context.outjson"/>
			</parameters>
		</function>
		<function name="SendResponse" class="RestfulService">
			<parameters>
				<string name="transportid" in="event.getParam('transportid').toString()"/>
				<string name="json" in="context.outjson.toString()"/>
			</parameters>
		</function>
	</function>
	<!--
		@brief		获取一个tunnel
		@auth 		YY
		@date		2017/09/14
		Input:
		Output:
	-->	
	<function name="getTunnel">		
		<log>insert method == get</log>
		<vector name="pathvector" valuetype="string"/>
		<set name="pathvector" value="event.getParam('params')"/>
		<log level="11"><![CDATA[getTunnel vector.size = <%=context.pathvector.size().toString()%>]]></log>
		<if cond="event.getParam('params').size()==0">
			<then>
				<exit/>
			</then>
		</if>
		<long name="resourceid"/>
		<script><![CDATA[
			var id = event.getParam('params').getIndexOf(0).toString()
			if (id.indexOf("{") == -1)
				context.resourceid.setValue(id)
			else
				context.resourceid.setValue(id.split("{")[1].split("}")[0])
		]]></script>
		<object name="tunnel"/>
		<string name="outjson"/>			
		<function name="GetOneTunnelObject" class="context.tunnelManagerObject">
			<parameters>
				<long name="tunnel_id" in="context.resourceid.toLong()"/>
				<object name="TunnelObject" out="context.tunnel"/>
			</parameters>
		</function>
		<if cond="context.tunnel.ptr==null">
			<then>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="context.resourceid.toLong()"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'This tunnel is null!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<function name="OneTunnelObjectToJsonString" class="context.tunnel">
			<parameters>
				<string name="TunnelObjectToJson" out="context.outjson"/>
			</parameters>
		</function>
		<function name="SendResponse" class="RestfulService">
			<parameters>
				<string name="transportid" in="event.getParam('transportid').toString()"/>
				<string name="json" in="context.outjson.toString()"/>
			</parameters>
		</function>
	</function>
	<!--
		@brief		更新一个tunnel
		@auth 		YY
		@date		2017/09/14
		Input:
		Output:
	-->	
	<function name="updateTunnel">		
		<log>insert method == put</log>
		<long name="resourceid"/>
		<syslog level="INFO"><![CDATA[update event 1= <%=event.getParam('params').getIndexOf(0).toString()%>]]></syslog>		
		<script><![CDATA[
			var id = event.getParam('params').getIndexOf(0).toString()
			if (id.indexOf("{") == -1)
				context.resourceid.setValue(id)
			else
				context.resourceid.setValue(id.split("{")[1].split("}")[0])
		]]></script>
		<object name="tunnel"/>
		<string name="outjson"/>
		<string name="username"/>
		<string name="inputPort"/>
		<string name="outputPort"/>
		
		<!-- wangkang 2017/10/27 -->	
		<string name="inputtunnelport"/>
		<string name="outputtunnelport"/>		
		<!-- wangkang 2017/11/13 -->
		<string name="inputvxlanport"/>
		<string name="outputvxlanport"/>

		<string name="type"/>
		<string name="state"/>
		<long name="inputvlanid"/>
		<long name="outputvlanid"/>
		<long name="bandwidth"/>		
		<long name="putindexof" value="0"/>
		<string name="inputdevice" value=""/>
		<string name="outputdevice" value=""/>
		<object name="indevice"/>
		<object name="outdevice"/>
		<boolean name="IsAlikePort" value="false"/>
		<object name="indeviceportobj"/>
		<long name="indeivceportnum"/>
		<long name="innum"/>
		<object name="outdeviceportobj"/>
		<long name="outdeivceportnum"/>
		<long name="outnum"/>		
		<long name="tunnel_invlan"/>
		<long name="tunnel_outvlan"/>	
		<function name="GetOneTunnelObject" class="context.tunnelManagerObject">
			<parameters>
				<long name="tunnel_id" in="context.resourceid.toLong()"/>
				<object name="TunnelObject" out="context.tunnel"/>
			</parameters>
		</function>
		<syslog level="INFO"><![CDATA[update event 2= <%=event.getParam('eventdata').toString()%>]]></syslog>		
		<script><![CDATA[									
			var json = JSON.parse(event.getParam('eventdata').toString());
			var local_username = json.username;
			var local_inputport = json.inputPort;
			var local_outputPort = json.outputPort;
			var local_type = json.type;
			var local_state = "active";
			var local_inputvlanid = json.inputvlanid;
			var local_outputvlanid = json.outputvlanid;
			var local_inputtunnelport = json.inputtunnelport;
			var local_outputtunnelport = json.outputtunnelport;
			var local_inputvxlanport= json.inputvxlanport;
			var local_outputvxlanport = json.outputvxlanport;
			var local_bandwidth = json.bandwidth;
			context.username.setValue(local_username);
			context.inputPort.setValue(local_inputport);
			context.outputPort.setValue(local_outputPort);
			context.type.setValue(local_type);
			context.state.setValue(local_state);
			context.inputvlanid.setValue(local_inputvlanid);
			context.outputvlanid.setValue(local_outputvlanid);
			context.inputtunnelport.setValue(local_inputtunnelport);
			context.outputtunnelport.setValue(local_outputtunnelport);
			context.inputvxlanport.setValue(local_inputvxlanport);
			context.outputvxlanport.setValue(local_outputvxlanport);
			context.bandwidth.setValue(local_bandwidth);
			if(local_type == 'vlan')
			{
				if (local_inputport == local_outputPort)
				{
					context.IsAlikePort.setValue(true);
				}
				if ((local_inputport.indexOf("of:") != -1) && (local_outputPort.indexOf("of:") != -1))
				{
					context.putindexof.setValue(1);
					if (local_inputport.split(":")[1] != '')
					{
						if (local_inputport.split(":")[1].split("/")[0] != '')
						{
							if (local_inputport.split("/")[1] != '')
							{
								context.innum.setValue(local_inputport.split("/")[1]);
								context.inputdevice.setValue(local_inputport.split(":")[1].split("/")[0]);
							}
						}
					}
					if (local_outputPort.split(":")[1] != '')
					{
						if (local_outputPort.split(":")[1].split("/")[0] != '')
						{
							if (local_outputPort.split("/")[1] != '')
							{
								context.outnum.setValue(local_outputPort.split("/")[1]);
								context.outputdevice.setValue(local_outputPort.split(":")[1].split("/")[0]);
							}						
						}
					}				
				}
			}
			if(local_type == 'vxlan')
			{
				if (local_inputtunnelport == local_outputtunnelport)
				{
					context.IsAlikePort.setValue(true);
				}
				if ((local_inputtunnelport.indexOf("of:") != -1) && (local_outputtunnelport.indexOf("of:") != -1))
				{
					context.putindexof.setValue(1);
					if (local_inputtunnelport.split(":")[1] != '')
					{
						if (local_inputtunnelport.split(":")[1].split("/")[0] != '')
						{
							if (local_inputtunnelport.split("/")[1] != '')
							{
								context.innum.setValue(local_inputtunnelport.split("/")[1]);
								context.inputdevice.setValue(local_inputtunnelport.split(":")[1].split("/")[0]);
							}
						}
					}
					if (local_outputtunnelport.split(":")[1] != '')
					{
						if (local_outputtunnelport.split(":")[1].split("/")[0] != '')
						{
							if (local_outputtunnelport.split("/")[1] != '')
							{
								context.outnum.setValue(local_outputtunnelport.split("/")[1]);
								context.outputdevice.setValue(local_outputtunnelport.split(":")[1].split("/")[0]);
							}						
						}
					}	
				}								
			}
		]]></script>
		<if cond="context.IsAlikePort.toBoolean() == true">
			<then>
				<syslog level="INFO">############# 1 #############</syslog>		
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="-1"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'The port data can not alike!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<if cond="context.putindexof.toLong()!=1">
			<then>
				<syslog level="INFO">############# 2 #############</syslog>		
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="context.resourceid.toLong()"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'Port is wrong!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<if cond="context.inputdevice.toString()=='' || context.outputdevice.toString()==''">
			<then>	
				<syslog level="INFO">############# 3 #############</syslog>		
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="context.resourceid.toLong()"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'Port is wrong!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<function name="getDevice" class="DeviceManager">
			<parameters>
				<object name="outdevice" out="context.indevice"/>
				<string name="datapathid" in="context.inputdevice.toString()"/>
			</parameters>
		</function>		
		<function name="getDevice" class="DeviceManager">
			<parameters>
				<object name="outdevice" out="context.outdevice"/>
				<string name="datapathid" in="context.outputdevice.toString()"/>
			</parameters>
		</function>
		<if cond="context.indevice.ptr==null || context.outdevice.ptr==null">
			<then>
				<syslog level="INFO">############# 4 #############</syslog>		
				<log>indevicde is null or outdevice is null</log>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="context.resourceid.toLong()"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'This id is wrong!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<function name="GetPortManager" class="context.indevice">
			<parameters>
				<object name="outportmgr" out="context.indeviceportobj"/>
			</parameters>
		</function>
		<function name="GetPortNumberSize" class="context.indeviceportobj">
			<parameters>
				<long name="portnumber" out="context.indeivceportnum"/>
			</parameters>
		</function>
		<!--if cond="context.innum.toLong() > context.indeivceportnum.toLong()">
			<then>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="context.resourceid.toLong()"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'This portnum is wrong!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if-->
		<function name="GetPortManager" class="context.outdevice">
			<parameters>
				<object name="outportmgr" out="context.outdeviceportobj"/>
			</parameters>
		</function>
		<function name="GetPortNumberSize" class="context.outdeviceportobj">
			<parameters>
				<long name="portnumber" out="context.outdeivceportnum"/>
			</parameters>
		</function>
		<!--if cond="context.outnum.toLong() > context.outdeivceportnum.toLong()">
			<then>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="context.resourceid.toLong()"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'This portnum is wrong!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if-->
		<function name="getInVlan" class="context.tunnel">
			<parameters>
				<long name="invlan" out="context.tunnel_invlan"/>
			</parameters>			
		</function>
		<function name="getOutVlan" class="context.tunnel">
			<parameters>
				<long name="outvlan" out="context.tunnel_outvlan"/>
			</parameters>			
		</function>	
		<syslog level="INFO">############# 5 #############</syslog>		
		<function name="UpdateTunnel" class="context.tunnel">
			<parameters>											
				<string name="username" in="context.username.toString()"/>
				<string name="inputPort" in="context.inputPort.toString()"/>
				<string name="outputPort" in="context.outputPort.toString()"/>
				<long name="invlan" in="context.tunnel_invlan.toLong()"/>					
				<long name="outvlan" in="context.tunnel_outvlan.toLong()"/>
				<string name="type" in="context.type.toString()"/>
				<string name="state" in="context.state.toString()"/>
				<long name="inputvlanid" in="context.inputvlanid.toLong()"/>
				<long name="outputvlanid" in="context.outputvlanid.toLong()"/>
				<!-- wangkang 2017/10/27 -->	
				<string name="inputtunnelport" in="context.inputtunnelport.toString()"/>
				<string name="outputtunnelport" in="context.outputtunnelport.toString()"/>
				<!-- wangkang 2017/11/13 -->	
				<string name="inputvxlanport" in="context.inputvxlanport.toString()"/>
				<string name="outputvxlanport" in="context.outputvxlanport.toString()"/>			
				<long name="bandwidth" in="context.bandwidth.toLong()"/>
			</parameters>
		</function>			
		<script><![CDATA[
			var json = new Object();
			var one = new Object();
			one.resourceId = ""+context.resourceid.toLong();
			one.code = "0";
			one.description = "ok";						
			json.result = one;
			var strjson=JSON.stringify(json);												
			context.outjson.setValue(strjson);
		]]></script>
		<function name="SendResponse" class="RestfulService">
			<parameters>
				<string name="transportid" in="event.getParam('transportid').toString()"/>
				<string name="json" in="context.outjson.toString()"/>
			</parameters>
		</function>
	</function>
	<!--
		@brief		添加一个tunnel
		@auth 		YY
		@date		2017/09/14
		Input:
		Output:
	-->	
	<function name="addTunnel">
		<string name="username"/>
		<string name="inputPort"/>
		<string name="outputPort"/>
		<string name="type"/>
		<string name="state"/>
		<long name="inputvlanid"/>
		<long name="outputvlanid"/>
		
		<!-- wangkang 2017/10/27 -->	
		<string name="inputtunnelport"/>
		<string name="outputtunnelport"/>
		<long name="vxlantunnelid"/>
		<!-- wangkang 2017/11/13 -->	
		<string name="inputvxlanport"/>
		<string name="outputvxlanport"/>

		<long name="bandwidth"/>
		<long name="resourceid"/>
		<string name="outjson"/>
		<object name="tunnel"/>
		<string name="inputdevice" value=""/>
		<string name="outputdevice" value=""/>
		<object name="indevice"/>
		<object name="outdevice"/>
		<long name="putindexof" value="0"/>
		<boolean name="result"/>
		<boolean name="IsAlikePort" value="false"/>
		<object name="indeviceportobj"/>
		<long name="indeivceportnum"/>
		<long name="innum"/>
		<object name="outdeviceportobj"/>
		<long name="outdeivceportnum"/>
		<long name="outnum"/>
		
		<script><![CDATA[									
			var json = JSON.parse(event.getParam('eventdata').toString());
			var local_username = json.username;
			var local_inputport = json.inputPort;
			var local_outputPort = json.outputPort;
			var local_type = json.type;
			var local_state = "active";
			var local_inputvlanid = json.inputvlanid;
			var local_outputvlanid = json.outputvlanid;
			var local_inputtunnelport = json.inputtunnelport;
			var local_outputtunnelport = json.outputtunnelport;
			var local_inputvxlanport= json.inputvxlanport;
			var local_outputvxlanport = json.outputvxlanport;
			var local_bandwidth = json.bandwidth;
			context.username.setValue(local_username);
			context.inputPort.setValue(local_inputport);
			context.outputPort.setValue(local_outputPort);
			context.type.setValue(local_type);
			context.state.setValue(local_state);
			context.inputvlanid.setValue(local_inputvlanid);
			context.outputvlanid.setValue(local_outputvlanid);
			context.inputtunnelport.setValue(local_inputtunnelport);
			context.outputtunnelport.setValue(local_outputtunnelport);
			context.inputvxlanport.setValue(local_inputvxlanport);
			context.outputvxlanport.setValue(local_outputvxlanport);
			context.bandwidth.setValue(local_bandwidth);
			if(local_type == 'vlan')
			{
				if (local_inputport == local_outputPort)
				{
					context.IsAlikePort.setValue(true);
				}
				if ((local_inputport.indexOf("of:") != -1) && (local_outputPort.indexOf("of:") != -1))
				{
					context.putindexof.setValue(1);
					if (local_inputport.split(":")[1] != '')
					{
						if (local_inputport.split(":")[1].split("/")[0] != '')
						{
							if (local_inputport.split("/")[1] != '')
							{
								context.innum.setValue(local_inputport.split("/")[1]);
								context.inputdevice.setValue(local_inputport.split(":")[1].split("/")[0]);
							}
						}
					}
					if (local_outputPort.split(":")[1] != '')
					{
						if (local_outputPort.split(":")[1].split("/")[0] != '')
						{
							if (local_outputPort.split("/")[1] != '')
							{
								context.outnum.setValue(local_outputPort.split("/")[1]);
								context.outputdevice.setValue(local_outputPort.split(":")[1].split("/")[0]);
							}						
						}
					}	
				}
			}
			if(local_type == 'vxlan')
			{
				if (local_inputtunnelport == local_outputtunnelport)
				{
					context.IsAlikePort.setValue(true);
				}
				if ((local_inputtunnelport.indexOf("of:") != -1) && (local_outputtunnelport.indexOf("of:") != -1))
				{
					context.putindexof.setValue(1);
					if (local_inputtunnelport.split(":")[1] != '')
					{
						if (local_inputtunnelport.split(":")[1].split("/")[0] != '')
						{
							if (local_inputtunnelport.split("/")[1] != '')
							{
								context.innum.setValue(local_inputtunnelport.split("/")[1]);
								context.inputdevice.setValue(local_inputtunnelport.split(":")[1].split("/")[0]);
							}
						}
					}
					if (local_outputtunnelport.split(":")[1] != '')
					{
						if (local_outputtunnelport.split(":")[1].split("/")[0] != '')
						{
							if (local_outputtunnelport.split("/")[1] != '')
							{
								context.outnum.setValue(local_outputtunnelport.split("/")[1]);
								context.outputdevice.setValue(local_outputtunnelport.split(":")[1].split("/")[0]);
							}						
						}
					}	
				}								
			}	
					
		]]></script>
		<syslog level="INFO"><![CDATA[inputport = <%= context.inputPort.toString()%>]]></syslog>
		<syslog level="INFO"><![CDATA[outputport=<%=context.outputPort.toString()%>]]></syslog>
		<if cond="context.IsAlikePort.toBoolean() == true">
			<then>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="-1"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'The port data can not alike!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<function name="IsHasValue" class="context.tunnelManagerObject">
			<parameters>
				<string name="style" in="'inport'"/>
				<string name="data" in="context.inputPort.toString()"/>
				<boolean name="result" out="context.result"/>
			</parameters>
		</function>
		<if cond="context.result.toBoolean()==true">
			<then>
				<log level="2">inport</log>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="-1"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'This tunnel is already had!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<function name="IsHasValue" class="context.tunnelManagerObject">
			<parameters>
				<string name="style" in="'outport'"/>
				<string name="data" in="context.outputPort.toString()"/>
				<boolean name="result" out="context.result"/>
			</parameters>
		</function>
		<if cond="context.result.toBoolean()==true">
			<then>
				<log level="2">outputPort</log>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="-1"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'This tunnel is already had!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<function name="IsHasValue" class="context.tunnelManagerObject">
			<parameters>
				<string name="style" in="'invlan'"/>
				<string name="data" in="context.inputvlanid.toString()"/>
				<boolean name="result" out="context.result"/>
			</parameters>
		</function>
		<if cond="context.putindexof.toLong()!=1">
			<then>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="-1"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'Port is wrong!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<if cond="context.inputdevice.toString()=='' || context.outputdevice.toString()==''">
			<then>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="context.resourceid.toLong()"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'Port is wrong!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<function name="getDevice" class="DeviceManager">
			<parameters>
				<object name="outdevice" out="context.indevice"/>
				<string name="datapathid" in="context.inputdevice.toString()"/>
			</parameters>
		</function>		
		<function name="getDevice" class="DeviceManager">
			<parameters>
				<object name="outdevice" out="context.outdevice"/>
				<string name="datapathid" in="context.outputdevice.toString()"/>
			</parameters>
		</function>		
		<if cond="context.indevice.ptr==null || context.outdevice.ptr==null">
			<then>
				<log level="100">indevice is null or outdevice is null</log>
				<log level="100"><![CDATA[indevice = <%=context.inputdevice.toString()%>]]></log>
				<log level="100"><![CDATA[outdevice = <%=context.outputdevice.toString()%>]]></log>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="-1"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'This id is wrong!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<function name="GetPortManager" class="context.indevice">
			<parameters>
				<object name="outportmgr" out="context.indeviceportobj"/>
			</parameters>
		</function>
		<function name="GetPortNumberSize" class="context.indeviceportobj">
			<parameters>
				<long name="portnumber" out="context.indeivceportnum"/>
			</parameters>
		</function>
		<!--if cond="context.innum.toLong() > context.indeivceportnum.toLong()">
			<then>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="-1"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'This portnum is wrong!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if-->
		<function name="GetPortManager" class="context.outdevice">
			<parameters>
				<object name="outportmgr" out="context.outdeviceportobj"/>
			</parameters>
		</function>
		<function name="GetPortNumberSize" class="context.outdeviceportobj">
			<parameters>
				<long name="portnumber" out="context.outdeivceportnum"/>
			</parameters>
		</function>
		<!--if cond="context.outnum.toLong() > context.outdeivceportnum.toLong()">
			<then>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="-1"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'This portnum is wrong!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if-->		
		<function name="addTunnel" class="context.tunnelManagerObject">
			<parameters>
				<long name="id" out="context.resourceid"/>
				<string name="username" in="context.username.toString()"/>
				<string name="inputPort" in="context.inputPort.toString()"/>
				<string name="outputPort" in="context.outputPort.toString()"/>
				<string name="type" in="context.type.toString()"/>
				<string name="state" in="context.state.toString()"/>
				<long name="inputvlanid" in="context.inputvlanid.toLong()"/>
				<long name="outputvlanid" in="context.outputvlanid.toLong()"/>
				<!-- wangkang 2017/10/27 -->	
				<string name="inputtunnelport" in="context.inputtunnelport.toString()"/>
				<string name="outputtunnelport" in="context.outputtunnelport.toString()"/>
				<!-- wangkang 2017/11/13 -->	
				<string name="inputvxlanport" in="context.inputvxlanport.toString()"/>
				<string name="outputvxlanport" in="context.outputvxlanport.toString()"/>
				<long name="bandwidth" in="context.bandwidth.toLong()"/>
			</parameters>
		</function>
		<function name="GetOneTunnelObject" class="context.tunnelManagerObject">
			<parameters>
				<long name="tunnel_id" in="context.resourceid.toLong()"/>
				<object name="TunnelObject" out="context.tunnel"/>
			</parameters>			
		</function>
		<if cond="context.tunnel==null">
			<then>
				<log>tunnel is null</log>
			</then>
			<else>
				<function name="ActiveTunnel" class="context.tunnel"/>
			</else>
		</if>		
		<script><![CDATA[
			var json = new Object();
			var one = new Object();
			one.resourceId = ""+context.resourceid.toLong();
			one.code = "0";
			one.description = "ok";						
			json.result = one;
			var strjson=JSON.stringify(json);												
			context.outjson.setValue(strjson);
		]]></script>
		<function name="SendResponse" class="RestfulService">
			<parameters>
				<string name="transportid" in="event.getParam('transportid').toString()"/>
				<string name="json" in="context.outjson.toString()"/>
			</parameters>
		</function>
	</function>
	
	<!--
		@brief	    根据json数组恢复一个tunnel
		@auth 		YXR
		@date		2017/12/20
		Input:
		Output:
	-->	
	<function name="addOldTunnel">
		<parameters>
			<long name="specialLineid"/>
		</parameters>
		<string name="username"/>
		<string name="inputPort"/>
		<string name="outputPort"/>
		<string name="type"/>
		<string name="state"/>
		<long name="inputvlanid"/>
		<long name="outputvlanid"/>
		
		<!-- wangkang 2017/10/27 -->	
		<string name="inputtunnelport"/>
		<string name="outputtunnelport"/>
		<long name="vxlantunnelid"/>
		<!-- wangkang 2017/11/13 -->	
		<string name="inputvxlanport"/>
		<string name="outputvxlanport"/>

		<long name="bandwidth"/>
		<long name="resourceid"/>
		<string name="outjson"/>
		<object name="tunnel"/>
		<string name="inputdevice" value=""/>
		<string name="outputdevice" value=""/>
		<object name="indevice"/>
		<object name="outdevice"/>
		<long name="putindexof" value="0"/>
		<boolean name="result"/>
		<boolean name="IsAlikePort" value="false"/>
		<object name="indeviceportobj"/>
		<long name="indeivceportnum"/>
		<long name="innum"/>
		<object name="outdeviceportobj"/>
		<long name="outdeivceportnum"/>
		<long name="outnum"/>
		<script><![CDATA[									
			var json = JSON.parse(event.getParam('eventdata').toString());
			var local_username = json.specialLine[context.specialLineid.toLong()].username;
			var local_inputport = json.specialLine[context.specialLineid.toLong()].inputPort;
			var local_outputPort = json.specialLine[context.specialLineid.toLong()].outputPort;
			var local_type = json.specialLine[context.specialLineid.toLong()].type;
			var local_state = "active";
			var local_inputvlanid = json.specialLine[context.specialLineid.toLong()].inputvlanid;
			var local_outputvlanid = json.specialLine[context.specialLineid.toLong()].outputvlanid;
			var local_inputtunnelport = json.specialLine[context.specialLineid.toLong()].inputtunnel;
			var local_outputtunnelport = json.specialLine[context.specialLineid.toLong()].outputtunnel;
			var local_inputvxlanport= json.specialLine[context.specialLineid.toLong()].inputvxlanport;
			var local_outputvxlanport = json.specialLine[context.specialLineid.toLong()].outputvxlanport;
			var local_bandwidth = json.specialLine[context.specialLineid.toLong()].bandwidth;
			context.username.setValue(local_username);
			context.inputPort.setValue(local_inputport);
			context.outputPort.setValue(local_outputPort);
			context.type.setValue(local_type);
			context.state.setValue(local_state);
			context.inputvlanid.setValue(local_inputvlanid);
			context.outputvlanid.setValue(local_outputvlanid);
			context.inputtunnelport.setValue(local_inputtunnelport);
			context.outputtunnelport.setValue(local_outputtunnelport);
			context.inputvxlanport.setValue(local_inputvxlanport);
			context.outputvxlanport.setValue(local_outputvxlanport);
			context.bandwidth.setValue(local_bandwidth);
			if(local_type == 'vlan')
			{
				if (local_inputport == local_outputPort)
				{
					context.IsAlikePort.setValue(true);
				}
				if ((local_inputport.indexOf("of:") != -1) && (local_outputPort.indexOf("of:") != -1))
				{
					context.putindexof.setValue(1);
					if (local_inputport.split(":")[1] != '')
					{
						if (local_inputport.split(":")[1].split("/")[0] != '')
						{
							if (local_inputport.split("/")[1] != '')
							{
								context.innum.setValue(local_inputport.split("/")[1]);
								context.inputdevice.setValue(local_inputport.split(":")[1].split("/")[0]);
							}
						}
					}
					if (local_outputPort.split(":")[1] != '')
					{
						if (local_outputPort.split(":")[1].split("/")[0] != '')
						{
							if (local_outputPort.split("/")[1] != '')
							{
								context.outnum.setValue(local_outputPort.split("/")[1]);
								context.outputdevice.setValue(local_outputPort.split(":")[1].split("/")[0]);
							}						
						}
					}	
				}
			}
			if(local_type == 'vxlan')
			{
				if (local_inputtunnelport == local_outputtunnelport)
				{
					context.IsAlikePort.setValue(true);
				}
				if ((local_inputtunnelport.indexOf("of:") != -1) && (local_outputtunnelport.indexOf("of:") != -1))
				{
					context.putindexof.setValue(1);
					if (local_inputtunnelport.split(":")[1] != '')
					{
						if (local_inputtunnelport.split(":")[1].split("/")[0] != '')
						{
							if (local_inputtunnelport.split("/")[1] != '')
							{
								context.innum.setValue(local_inputtunnelport.split("/")[1]);
								context.inputdevice.setValue(local_inputtunnelport.split(":")[1].split("/")[0]);
							}
						}
					}
					if (local_outputtunnelport.split(":")[1] != '')
					{
						if (local_outputtunnelport.split(":")[1].split("/")[0] != '')
						{
							if (local_outputtunnelport.split("/")[1] != '')
							{
								context.outnum.setValue(local_outputtunnelport.split("/")[1]);
								context.outputdevice.setValue(local_outputtunnelport.split(":")[1].split("/")[0]);
							}						
						}
					}	
				}								
			}	
					
		]]></script>
		<if cond="context.IsAlikePort.toBoolean() == true">
			<then>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="-1"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'The port data can not alike!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<function name="IsHasValue" class="context.tunnelManagerObject">
			<parameters>
				<string name="style" in="'inport'"/>
				<string name="data" in="context.inputPort.toString()"/>
				<boolean name="result" out="context.result"/>
			</parameters>
		</function>
		<if cond="context.result.toBoolean()==true">
			<then>
				<log level="2">inport</log>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="-1"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'This tunnel is already had!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<function name="IsHasValue" class="context.tunnelManagerObject">
			<parameters>
				<string name="style" in="'outport'"/>
				<string name="data" in="context.outputPort.toString()"/>
				<boolean name="result" out="context.result"/>
			</parameters>
		</function>
		<if cond="context.result.toBoolean()==true">
			<then>
				<log level="2">outputPort</log>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="-1"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'This tunnel is already had!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<function name="IsHasValue" class="context.tunnelManagerObject">
			<parameters>
				<string name="style" in="'invlan'"/>
				<string name="data" in="context.inputvlanid.toString()"/>
				<boolean name="result" out="context.result"/>
			</parameters>
		</function>
		<if cond="context.putindexof.toLong()!=1">
			<then>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="-1"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'Port is wrong!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<if cond="context.inputdevice.toString()=='' || context.outputdevice.toString()==''">
			<then>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="context.resourceid.toLong()"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'Port is wrong!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<function name="getDevice" class="DeviceManager">
			<parameters>
				<object name="outdevice" out="context.indevice"/>
				<string name="datapathid" in="context.inputdevice.toString()"/>
			</parameters>
		</function>		
		<function name="getDevice" class="DeviceManager">
			<parameters>
				<object name="outdevice" out="context.outdevice"/>
				<string name="datapathid" in="context.outputdevice.toString()"/>
			</parameters>
		</function>		
		<if cond="context.indevice.ptr==null || context.outdevice.ptr==null">
			<then>
				<log level="100">indevice is null or outdevice is null</log>
				<log level="100"><![CDATA[indevice = <%=context.inputdevice.toString()%>]]></log>
				<log level="100"><![CDATA[outdevice = <%=context.outputdevice.toString()%>]]></log>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="-1"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'This id is wrong!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		<function name="GetPortManager" class="context.indevice">
			<parameters>
				<object name="outportmgr" out="context.indeviceportobj"/>
			</parameters>
		</function>
		<function name="GetPortNumberSize" class="context.indeviceportobj">
			<parameters>
				<long name="portnumber" out="context.indeivceportnum"/>
			</parameters>
		</function>
		<!--if cond="context.innum.toLong() > context.indeivceportnum.toLong()">
			<then>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="-1"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'This portnum is wrong!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if-->
		<function name="GetPortManager" class="context.outdevice">
			<parameters>
				<object name="outportmgr" out="context.outdeviceportobj"/>
			</parameters>
		</function>
		<function name="GetPortNumberSize" class="context.outdeviceportobj">
			<parameters>
				<long name="portnumber" out="context.outdeivceportnum"/>
			</parameters>
		</function>
		<!--if cond="context.outnum.toLong() > context.outdeivceportnum.toLong()">
			<then>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="-1"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'This portnum is wrong!'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if-->		
		<function name="addTunnel" class="context.tunnelManagerObject">
			<parameters>
				<long name="id" out="context.resourceid"/>
				<string name="username" in="context.username.toString()"/>
				<string name="inputPort" in="context.inputPort.toString()"/>
				<string name="outputPort" in="context.outputPort.toString()"/>
				<string name="type" in="context.type.toString()"/>
				<string name="state" in="context.state.toString()"/>
				<long name="inputvlanid" in="context.inputvlanid.toLong()"/>
				<long name="outputvlanid" in="context.outputvlanid.toLong()"/>
				<!-- wangkang 2017/10/27 -->	
				<string name="inputtunnelport" in="context.inputtunnelport.toString()"/>
				<string name="outputtunnelport" in="context.outputtunnelport.toString()"/>
				<!-- wangkang 2017/11/13 -->	
				<string name="inputvxlanport" in="context.inputvxlanport.toString()"/>
				<string name="outputvxlanport" in="context.outputvxlanport.toString()"/>
				<long name="bandwidth" in="context.bandwidth.toLong()"/>
			</parameters>
		</function>
		<function name="GetOneTunnelObject" class="context.tunnelManagerObject">
			<parameters>
				<long name="tunnel_id" in="context.resourceid.toLong()"/>
				<object name="TunnelObject" out="context.tunnel"/>
			</parameters>			
		</function>
		<if cond="context.tunnel==null">
			<then>
				<log>tunnel is null</log>
			</then>
			<else>
				<function name="ActiveTunnel" class="context.tunnel"/>
			</else>
		</if>		
	</function>
	
	<!--
		@brief		删除一个tunnel
		@auth 		YY
		@date		2017/09/14
		Input:
		Output:
	-->	
	<function name="deleteTunnel">
		<long name="resourceid"/>
		<syslog level="INFO"><![CDATA[delete json= <%=event.getParam('params').getIndexOf(0).toString()%>]]></syslog>
		<script><![CDATA[
			var id = event.getParam('params').getIndexOf(0).toString()
			if (id.indexOf("{") == -1)
				context.resourceid.setValue(id)
			else
				context.resourceid.setValue(id.split("{")[1].split("}")[0])
		]]></script>
		<string name="outjson"/>
		<object name="tunnel"/>
		<long name="size"/>
		<log level="100">#############################################</log>
		<syslog level="INFO"><![CDATA[deleteTunnel resourceid = <%=context.resourceid.toString()%>]]></syslog>
		<log level="100">#############################################</log>
		<function name="GetOneTunnelObject" class="context.tunnelManagerObject">
			<parameters>
				<long name="tunnel_id" in="context.resourceid.toLong()"/>
				<object name="TunnelObject" out="context.tunnel"/>
			</parameters>			
		</function>
		<syslog level="INFO">deleteTunnel 1</syslog>
		<function name="getTunnelNum" class="context.tunnelManagerObject">
			<parameters>
				<long name="size" out="context.size"/>
			</parameters>
		</function>
		<syslog level="INFO">deleteTunnel 2</syslog>
		<if cond="context.tunnel.ptr==null">
			<then>
				<log>tunnel is null</log>
				<syslog level="INFO">deleteTunnel 3</syslog>
				<function name="ErrorDataResponse">
					<parameters>
						<long name="resourceid" in="context.resourceid.toLong()"/>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="context.size.toString()"/>
					</parameters>
				</function>
				<exit/>
			</then>
			<else>
				<syslog level="INFO">deleteTunnel 4</syslog>
				<function name="DeactiveTunnel" class="context.tunnel"/>
			</else>
		</if>
		<syslog level="INFO">deleteTunnel 5</syslog>
		<function name="removeTunnel" class="context.tunnelManagerObject">
			<parameters>
				<long name="tunnel_id" in="context.resourceid.toLong()"/>
			</parameters>
		</function>		
		<syslog level="INFO">deleteTunnel 6</syslog>
		<script><![CDATA[
			var json = new Object();
			var one = new Object();
			one.resourceId = ""+context.resourceid.toLong();
			one.code = "0";
			one.description = "ok";						
			json.result = one;
			var strjson=JSON.stringify(json);												
			context.outjson.setValue(strjson);
		]]></script>
		<function name="SendResponse" class="RestfulService">
			<parameters>
				<string name="transportid" in="event.getParam('transportid').toString()"/>
				<string name="json" in="context.outjson.toString()"/>
			</parameters>
		</function>
	</function>
	<!--
		@brief		返回错误信息
		@auth 		YY
		@date		2017/09/14
		Input:
			@param resourceid 	资源id
			@param transportid   发送报文id
			@param description   错误信息
		Output:
	-->	
	<function name="ErrorDataResponse">
		<parameters>
			<long name="resourceid"/>
			<string name="transportid"/>
			<string name="description"/>
		</parameters>
		<string name="outjson"/>
		<script><![CDATA[
			var json = new Object();
			var one = new Object();
			one.resourceId = ""+context.resourceid.toLong();
			one.code = "-1";
			one.description = context.description.toString();						
			json.result = one;
			var strjson=JSON.stringify(json);												
			context.outjson.setValue(strjson);
		]]></script>
		<function name="SendResponse" class="RestfulService">
			<parameters>
				<string name="transportid" in="context.transportid.toString()"/>
				<string name="json" in="context.outjson.toString()"/>
			</parameters>
		</function>
	</function>	
</starlang>
