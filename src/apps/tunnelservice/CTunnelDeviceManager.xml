<starlang xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	<!-- wangkang 2017/09/22 -->
	<class name="CTunnelDeviceManager">
		<private>
			<list name="tunneldeviceContainer" valuetype="object"/>
			<long name="id"/>
			
			<!--qiulei 20170927 pm-->
			<string name="tunnelPath"/>
		</private>
		<public>
			<function name="CTunnelDeviceManager">
				<set name="thisclass.id" value="0" />
				<log>CTunnelDeviceManager is create</log>
			</function>
			
			<function name="addTunnelDevice">
				<parameters>
					<string name="deviceid"/>
					<string name="inputPort"/>
					<string name="outputPort"/>
				</parameters>
				<log><![CDATA[CTunnelDeviceManager addTunnelDevice deviceid = <%=context.deviceid.toString()%>]]></log>
				<object name="tunneldeviceObject"/>
				<new name="tunneldeviceObject" class="CTunnelDevice">
					<parameters>
						<string name="deviceid" in="context.deviceid.toString()"/>
						<string name="inputPort" in="context.inputPort.toString()"/>
						<string name="outputPort" in="context.outputPort.toString()"/>
					</parameters>
				</new>
				<insert name="tunneldeviceContainer" value="context.tunneldeviceObject"/>
			</function>
			
			<function name="removeTunnelDevice">
				<parameters>
					<string name="deviceid"/>
				</parameters>
				<object name="onetunneldevice"/>
				<string name="onedeviceid"/>
				<for var="onetunneldevice" in="tunneldeviceContainer">
					<function name="GetTunnelDeviceId" class="onetunneldevice">
						<parameters>
							<string name="outtunneldeviceid" out="context.onedeviceid"/>
						</parameters>
					</function>
					<if cond="context.onedeviceid.toString() == context.deviceid.toString()">
						<then>
							<exit/>
						</then>
					</if>
				</for>
				<remove name="tunneldeviceContainer" value="onetunneldevice"/>
			</function>
			
			<function name="CreateTunnelDevice">
				<parameters>
					<string name="deviceid"/>
				</parameters>
				<object name="tunneldeviceObject"/>
				<new name="tunneldeviceObject" class="CTunnelDevice">
					<parameters>
						<string name="deviceid" in="context.deviceid.toString()"/>
						<string name="inputPort" in="'null'"/>
						<string name="outputPort" in="'null'"/>
					</parameters>
				</new>
				<insert name="tunneldeviceContainer" value="context.tunneldeviceObject"/>
			</function>
			<function name="GetTunnelDeviceFromJson">
				<parameters>
					<string name="json"/>
				</parameters>
				<string name="dstport"/>
				<string name="srcport"/>
				<list name="tempContainer" valuetype="hashmap"/>
				<hashmap name="mapContainer" keytype="string" valuetype="string"/>
				<list-iterator name="mapContaineriterator" valuetype="hashmap"/>
				<list-iterator name="tempContainerfirst" valuetype="hashmap"/>
				<list-iterator name="tempContainerend" valuetype="hashmap"/>
				<log><![CDATA[json=<%=context.json.toString()%>]]></log>
				<set name="tunnelPath" value="context.json.toString()"/>
				<script><![CDATA[
					if (context.json.toString().length>0)
					{
						var info = JSON.parse(context.json.toString());
						var devicesize = info.paths.length;
						for(var i=0;i<devicesize;i++)
						{
							var hashcontainer = context.createHashMap("string", "string");
							hashcontainer.addValue('device', info.paths[i].device);
							hashcontainer.addValue('inport', info.paths[i].inport);
							hashcontainer.addValue('outport', info.paths[i].outport);
							context.tempContainer.addValue(hashcontainer);
						}
					}
				]]></script>
				<log><![CDATA[tempContainer size=<%=context.tempContainer.size().toString()%>]]></log>
				<set name="context.tempContainerfirst" value="context.tempContainer.begin()"/>
				<set name="context.tempContainerend" value="context.tempContainer.end()"/>
				
				<for var="context.mapContaineriterator" from="context.tempContainerfirst" to="context.tempContainerend">
					<set name="mapContainer" value="context.mapContaineriterator.value()"/>
					<log><![CDATA[GetTunnelDeviceFromJson container device huhu=<%=context.mapContainer.getValue('device').toString()%>]]></log>
					<log><![CDATA[GetTunnelDeviceFromJson container inport huhu=<%=context.mapContainer.getValue('inport').toString()%>]]></log>
					<log><![CDATA[GetTunnelDeviceFromJson container outport huhu=<%=context.mapContainer.getValue('outport').toString()%>]]></log>
					<function name="addTunnelDevice">
						<parameters>
							<string name="deviceid" in="context.mapContainer.getValue('device').toString()"/>
							<string name="inputPort" in="context.mapContainer.getValue('inport').toString()"/>
							<string name="outputPort" in="context.mapContainer.getValue('outport').toString()"/>
						</parameters>
					</function>
				</for>
				<log><![CDATA[GetTunnelDeviceFromJson container size=<%=context.tunneldeviceContainer.size().toString()%>]]></log>
			</function>
					
			<function name="Clearup">
				<script><![CDATA[				
					context.tunneldeviceContainer.clear();
				]]></script>
			</function>
			
			<function name="IsMyTopChange">
				<parameters>
					<string name="fromdevice"/>
					<string name="todevice"/>
					<string name="path"/>
					<boolean name="ischanage"/>
				</parameters>
				
				<if cond="context.path.toString()==thisclass.tunnelPath.toString()">
					<then>
						<set name="context.ischanage" value="true"/>
					</then>
					
					<else>
						<set name="context.ischanage" value="false"/>
					</else>			
				</if>
			</function>
			
			<function name="IsMyTopChange_old">
				<parameters>
					<string name="fromdevice"/>
					<string name="todevice"/>
					<string name="path"/>
					<boolean name="ischanage"/>
				</parameters>
				<object name="firstdevice"/>
				<object name="lastdevice"/>
				<string name="firstdeviceid"/>
				<string name="lastdeviceid"/>
				<set name="firstdevice" value="context.tunneldeviceContainer.front()"/>
				<set name="lastdevice" value="context.tunneldeviceContainer.back()"/>
				<if cond="context.firstdevice!=null">
					<then>
						<function name="GetTunnelDeviceId" class="firstdevice">
							<parameters>
								<string name="outtunneldeviceid" out="context.firstdeviceid"/>
							</parameters>
						</function>
					</then>
				</if>
				<if cond="context.lastdevice!=null">
					<then>
						<function name="GetTunnelDeviceId" class="lastdevice">
							<parameters>
								<string name="outtunneldeviceid" out="context.lastdeviceid"/>
							</parameters>
						</function>
					</then>
				</if>
				<if cond="context.fromdevice.toString()==context.firstdeviceid.toString()">
					<then>
						<if cond="context.todevice.toString()==context.lastdeviceid.toString()">
							<then>
								<set name="context.ischanage" value="true"/>
							</then>
						</if>
					</then>
					<else>
						<log><![CDATA[context.fromdevice.toString() = <%=context.fromdevice.toString()%>]]></log>
						<log><![CDATA[context.firstdeviceid.toString() = <%=context.firstdeviceid.toString()%>]]></log>
						<log><![CDATA[context.todevice.toString() = <%=context.todevice.toString()%>]]></log>
						<log><![CDATA[context.lastdeviceid.toString() = <%=context.lastdeviceid.toString()%>]]></log>
					</else>			
				</if>
			</function>
			<function name="DeactiveTunnel">
				<log>##### CTunnelDeviceManager function DeactiveTunnel #####</log>
				<list-iterator name="tunnelContaineriterator" valuetype="object"/>
				<list-iterator name="tunnelContainerfirst" valuetype="object"/>
				<list-iterator name="tunnelContainerend" valuetype="object"/>				
				<object name="ontunneldevice"/>
				<set name="tunnelContainerfirst" value="context.tunneldeviceContainer.begin()"/>
				<set name="tunnelContainerend" value="context.tunneldeviceContainer.end()"/>
				
				<for var="context.tunnelContaineriterator" from="context.tunnelContainerfirst" to="context.tunnelContainerend">
					<set name="ontunneldevice" value="context.tunnelContaineriterator.value()"/>
					<if cond="context.ontunneldevice != null">
						<then>
							<function name="DeactiveTunnel" class="context.ontunneldevice"/>
						</then>
					</if>
				</for>
			</function>
			
			<function name="GetFirstDevice">
				<parameters>
					<object name="firstdevice"/>
				</parameters>
				<log> ##### Get First Device #####</log>
				<set name="firstdevice" value="context.tunneldeviceContainer.front()"/>				
			</function>
			
			<function name="GetLastDevice">
				<parameters>
					<object name="lastdevice"/>
				</parameters>
				<log> ##### Get Last Device #####</log>
				<set name="lastdevice" value="context.tunneldeviceContainer.back()"/>
			</function>
			
			<function name="GetMiddleDevice">
				<parameters>
					<list name="devicelist"/>
				</parameters>
				<log> ##### Get Middle Device List #####</log>
				<list-iterator name="beginit" valuetype="object"/>
				<list-iterator name="endit" valuetype="object"/>
				<list-iterator name="middevice" valuetype="object"/>
				<set name="beginit" value="context.tunneldeviceContainer.beginNext()"/>
				<set name="endit" value="context.tunneldeviceContainer.endBefore()"/>
				
				<if cond="context.tunneldeviceContainer.size() > 2">
					<then>
						<for var="context.middevice" from="context.beginit" to="context.endit">
							<insert name="devicelist" value="context.middevice.value()"/>	
						</for>
					</then>
					<else>
						<log>##### DeviceList is null #####</log>
					</else>
				</if>
			</function>
			<function name="PrintTunnerDevice">
				<object name="onetunnel"/>
				<object name="tunnel"/>
				<for var="onetunnel" in="context.tunneldeviceContainer">
					<set name="tunnel" value="context.onetunnel"/>
					<if cond="context.tunnel!=null">
						<then>
							<function name="Printtunnel" class="tunnel"/>
						</then>
					</if>
				</for>
			</function>
			
		</public>
	</class>
</starlang>	