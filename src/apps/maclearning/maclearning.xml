<?xml version="1.0" encoding="UTF-8"?>
<starosxml xmlns="http://www.staros.xyz/staros" scope="application">
<!--
	Author:
			YY
	Date:
			2017-08-11
	Copyright: 
			Nanjing StarOS Inc. All rights reserved.
-->
	<variable name="applicationmgr" reference="global.ApplicationManager"/>
	<variable name="devicemgr" reference="global.DeviceManager"/>
	<variable name="flowservice" reference="global.FlowService"/>
	<container name="resourceid_list" type="list" valuetype="string"/>
	<container name="machashmap" type="hashmap" keytype="string" valuetype="string"/>
	<function name="installflow">
		<parameters>
			<parameter name="outport" type="string"/>
			<parameter name="dstmac" type="string"/>
			<parameter name="datapathid" type="string"/>
		</parameters>
		<variable name="modstrjson" type="string"/>
		<reference variable="modstrjson">
			<jsonbody><![CDATA[ 
					{
						"xid":"<%=context.openflowserverobj.getIncreaseXID()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"3",
										"hasmask":"false",
										"dstmac":"<%=context.dstmac.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"5",
										"hasmask":"false",
										"ethtype":"0x0800"
									}
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.outport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
					}
			]]></jsonbody>
		</reference>
		<variable name="resourceid" type="string"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<parameter name="outflowid" type="string" out="context.resourceid"/>
				<parameter name="strjson" type="string" in="context.modstrjson.toString()"/>
				<parameter name="appId" type="string" in="'maclearning'"/>
				<parameter name="datapathid" type="string" in="context.datapathid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_list" value="context.resourceid.toString()"/>
	</function>
	<function name="uninstallflow">
		<parameters>
			<parameter name="datapathid" type="string"/>
		</parameters>
		<variable name="resourceid" type="string"/>
		<for var="i" from="0" to="context.resourceid_list.size()-1">
			<set name="resourceid" value="context.resourceid_list.getValueByIndex(context.i.toLong()"/>
			<function name="UnInstallFlow" class="context.flowservice">
				<parameters>
					<parameter name="datapathid" type="string" in="context.datapathid.toString()"/>			
					<parameter name="flowid" type="string" in="context.resourceid.toString()"/>
				</parameters>
			</function>
		</for>
	</function>
	<events>
		<onevent event="bundleapp.startup">			
			<!-- YY 2017-08-21 -->
			<function name="RegistApplication" class="context.applicationmgr">
				<parameters>
					<parameter name="id" type="string" in="'maclearning'"/>
					<parameter name="version" type="string" in="'1.0.0'"/>
					<parameter name="category" type="string" in="'starosapp'"/>
					<parameter name="origin" type="string" in="'Nanjing StarOS Inc.'"/>
					<parameter name="title" type="string" in="'app for maclearning'"/>
					<parameter name="desc" type="string" in="'2.10.10.0'"/>		
					<parameter name="url" type="string" in="'192.168.228.128'"/>
					<parameter name="bundleid" type="long" in="context.getCurrentBundleId()"/>
				</parameters>
			</function>			
			
					
			
			<function name="addTopoListener" class="TopoService">				
				<parameters>
					<parameter name="appid" type="string" in="'maclearning'"/>
					<parameter name="add_eventname" type="string" in="'mytopadd'"/>
					<parameter name="remove_eventname" type="string" in="'mytopremove'"/>
				</parameters>
			</function>	
			
			<log>maclearning app startup</log>
		</onevent>	
		
		<onevent event="bundleapp.active">
			<function name="addProcessor" class="PacketService">				
				<parameters>
					<parameter name="app_name" type="string" in="'maclearning'"/>
					<parameter name="event_name" type="string" in="'PacketInEvent'"/>					
					<parameter name="eth_type" type="string" in="'0x0800'"/>					
				</parameters>
			</function>	
		</onevent>
		
		<onevent event="~bundleapp.deactive">
			<function name="removeProcessor" class="PacketService">				
				<parameters>
					<parameter name="app_name" type="string" in="'maclearning'"/>									
				</parameters>
			</function>
		</onevent>
		
		<onevent event="mytopadd">
			
		</onevent>
		<onevent event="mytopremove">
			
		</onevent>
		
		<onevent event="~bundleapp.shutdown">
			<!-- YY 2017-08-21 -->
			
			
			<function name="removeTopoListener" class="TopoService">
				<parameters>
					<parameter name="appid" type="string" in="'maclearning'"/>
				</parameters>
			</function>
			
			<!--function name="uninstallflow">
				<parameters>
					<parameter name="datapathid" type="string" in="event.getParam('datapathid').toString()"/>
				</parameters>
			</function-->
		</onevent>
		<onevent event="PacketInEvent">
			<!-- YY 2017-08-21 -->
			<log dest="stdout">maclearning application get a PacketIn Message</log>			
			<messageblock name="packetmsgblock"/>
			<variable name="inportid" type="string"/>
			<variable name="pkoutjson" type="string"/>
			<variable name="srcmac" type="string"/>
			<variable name="dstmac" type="string"/>
			<variable name="ethtype" type="string"/>
			<variable name="result_mac" type="string"/>
			<script><![CDATA[
				var info = JSON.parse(event.getParam('eventdata').toString());
				if (info.match != null) {
					var inport_id = info.match.matchfieldlist[0].inport;					
					context.inportid.setValue(inport_id);
				}
				if (info.payload != null) {
					var pay_load = info.payload;
					var strjson=JSON.stringify(pay_load);
					context.pkoutjson.setValue(strjson);
					var src_mac = info.payload.smac;
					var dst_mac = info.payload.dmac;
					var eth = info.payload.ethtype;
					context.srcmac.setValue(src_mac);
					context.dstmac.setValue(dst_mac);
					context.ethtype.setValue(eth);										
				}

			]]></script>
			<set name="packetmsgblock" value="event.getMessageBlock()"/>			
			<if cond="context.ethtype.toString()=='2054'">
				<then>
					<log>get a arp packet</log>
					<if cond="context.dstmac.toString()=='ff:ff:ff:ff:ff:ff'">
						<then>
							<log>dstmac is ff:ff:ff:ff:ff:ff PacketOutToAllPort</log>
							<function name="PacketOutToAllPort" class="context.devicemgr">
								<parameters>
									<parameter name="datapathid" type="string" in="event.getParam('datapathid').toString()"/>
									<parameter name="inportid" type="string" in="context.inportid.toString()"/>	
									<parameter name="pkoutjson" type="string" in="context.pkoutjson.toString()"/>	
									<parameter name="msgblock" type="messageblock" in="context.packetmsgblock"/>	
								</parameters>
							</function>
						</then>					
						<else>
							<log><![CDATA[dstmac <%=context.dstmac.toString()%>]]> </log>
							<if cond="context.machashmap.hasValue(context.dstmac.toString())==false">
								<then>		
									<log><![CDATA[dstmac <%=context.dstmac.toString()%> PacketOutToAllPort]]> </log>								
									<function name="PacketOutToAllPort" class="context.devicemgr">
										<parameters>
											<parameter name="datapathid" type="string" in="event.getParam('datapathid').toString()"/>
											<parameter name="inportid" type="string" in="context.inportid.toString()"/>	
											<parameter name="pkoutjson" type="string" in="context.pkoutjson.toString()"/>	
											<parameter name="msgblock" type="messageblock" in="context.packetmsgblock"/>	
										</parameters>
									</function>
								</then>
								<else>			
									<log><![CDATA[dstmac <%=context.dstmac.toString()%> find outport=<%=context.machashmap.getValue(context.dstmac.toString()).toString()%> ]]> </log>								
									<function name="PacketOutToPort" class="context.devicemgr">
										<parameters>	
											<parameter name="outputport" type="string" in="context.machashmap.getValue(context.dstmac.toString()).toString()"/>
											<parameter name="pkoutjson" type="string" in="context.pkoutjson.toString()"/>						
											<parameter name="msgblock" type="messageblock" in="context.packetmsgblock"/>
											<parameter name="inportid" type="string" in="context.inportid.toString()"/>	
											<parameter name="datapathid" type="string" in="event.getParam('datapathid').toString()"/>							
										</parameters>
									</function>							
								</else>
							</if>
						</else>
					</if>
					<log><![CDATA[srcmac <%=context.srcmac.toString()%> inportid=<%=context.inportid.toString()%> insert]]> </log>	
					<if cond="context.machashmap.hasValue(context.srcmac.toString())==false">
				<then>
					<insert name="machashmap" key="context.srcmac.toString()" value="context.inportid.toString()"/>
				</then>
			</if>
			</then>
				<else>			
					<log><![CDATA[not arp packet]]> </log>	
					<if cond="context.machashmap.hasValue(context.dstmac.toString())==false">
						<then>									
							<log><![CDATA[not arp packet dstmac <%=context.dstmac.toString()%> can not find , PacketOutToAllPort]]> </log>							
							<function name="PacketOutToAllPort" class="context.devicemgr">
								<parameters>
									<parameter name="datapathid" type="string" in="event.getParam('datapathid').toString()"/>
									<parameter name="inportid" type="string" in="context.inportid.toString()"/>	
									<parameter name="pkoutjson" type="string" in="context.pkoutjson.toString()"/>	
									<parameter name="msgblock" type="messageblock" in="context.packetmsgblock"/>	
								</parameters>
							</function>
						</then>
						<else>					
							<log><![CDATA[not arp packet dstmac <%=context.dstmac.toString()%> find outport=<%=context.machashmap.getValue(context.dstmac.toString()).toString()%> ]]> </log>	
							<function name="PacketOutToPort" class="context.devicemgr">
								<parameters>	
									<parameter name="outputport" type="string" in="context.machashmap.getValue(context.dstmac.toString()).toString()"/>
									<parameter name="pkoutjson" type="string" in="context.pkoutjson.toString()"/>						
									<parameter name="msgblock" type="messageblock" in="context.packetmsgblock"/>
									<parameter name="inportid" type="string" in="context.inportid.toString()"/>	
									<parameter name="datapathid" type="string" in="event.getParam('datapathid').toString()"/>							
								</parameters>
							</function>
							<function name="installflow">
								<parameters>
									<parameter name="outport" type="string" in="context.machashmap.getValue(context.dstmac.toString()).toString()"/>
									<parameter name="dstmac" type="string" in="context.dstmac.toString()"/>
									<parameter name="datapathid" type="string" in="event.getParam('datapathid').toString()"/>
								</parameters>
							</function>
						</else>
					</if>
					<log><![CDATA[not arp packet srcmac <%=context.srcmac.toString()%> inportid=<%=context.inportid.toString()%> insert]]> </log>	
					<if cond="context.machashmap.hasValue(context.srcmac.toString())==false">
						<then>
							<insert name="machashmap" key="context.srcmac.toString()" value="context.inportid.toString()"/>
						</then>
					</if>
				</else>
			</if>
		</onevent>
		
		<onevent event="*">
			<function>
			<log level="1"><![CDATA[ invalid event <%=event.getName()%>]]> </log>
			<log level="1"><![CDATA[ invalid param <%=event.getParam("eventdata").toString()%>]]> </log>
			</function>
		</onevent>
	</events>
</starosxml>