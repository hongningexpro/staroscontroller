<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (C) 2013-2016 Nanjing StarOS Technology Co., Ltd
	All rights reserved.
	
	@file 		sdnmgrapi.xml
	@brief 		sdnmgr's api
	@version 	1.1.0
	@auth 		qiulei 20180117
	@date		2017/09/14

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<starlang xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	
	<include src="/opt/staros.xyz/staroscontroller/starlang/apps/sdnmgr/CSDNMGRTypeManager.xml"/>
	<hashmap name="resourceid_hash" keytype="string" valuetype="string"/>
	<object name="m_db"/>
	<params name="dbparams"/>
	<function name="createDeviceDB">		
		<set name="dbparams" paramname="dbname" value="'sdndevice'"/>
		<set name="dbparams" paramname="dbtype" value="'sqlite'"/>
		<database name="m_db" method="Open" params="context.dbparams"/>
		<wait event="db.response" transportid="context.m_db.ptr.GetTransportId()" timeout="3000" detachclass="true">
			<log level="100"><![CDATA[open database db name <%=event.getName().toString()%>]]></log>
			<log level="100"><![CDATA[open database db result <%=event.getParam('result').toString()%>]]></log>
			<log level="100"><![CDATA[open database db description <%=event.getParam('description').toString()%>]]></log>
			<log level="100"><![CDATA[open database db transportid <%=event.getParam('transportid').toString()%>]]></log>
			<log level="100"><![CDATA[open database db eventdata <%=event.getParam('eventdata').toString()%>]]></log>
		</wait>
		<database name="m_db" method="ExecSQL">
			<sql><![CDATA[

				create table if not exists COMPANY(
				RESOURCEID     		TEXT   PRIMARY KEY  NOT NULL,
				
				IP 					TEXT 	NOT NULL,

				MAC        			TEXT    NOT NULL,

				LOCATION            TEXT    NOT NULL,

				DEVICETYPE          TEXT    NOT NULL,

				DEVICEROLE        	TEXT 	NOT NULL,

				BANDWIDTH         	TEXT 	NOT NULL

				);

			]]></sql>
		</database>
		<wait event="db.response" transportid="context.m_db.ptr.GetTransportId()" timeout="3000">
			<log><![CDATA[create table result <%=event.getParam('result').toString()%>]]></log>
			<log><![CDATA[create table description <%=event.getParam('description').toString()%>]]></log>
			<log><![CDATA[create table transportid <%=event.getParam('transportid').toString()%>]]></log>
			<log><![CDATA[create table eventdata <%=event.getParam('eventdata').toString()%>]]></log>
		</wait>
	</function>
<!--qiulei create DataBase 20180122 start-->
	<object name="m_db_policy"/>
	<params name="dbparams_policy"/>
	<function name="createPolicyDB">
		<set name="dbparams_policy" paramname="dbname" value="'sdnpolicy'"/>
		<set name="dbparams_policy" paramname="dbtype" value="'sqlite'"/>
		<database name="m_db_policy" method="Open" params="context.dbparams_policy"/>
		<wait event="db.response" transportid="context.m_db_policy.ptr.GetTransportId()" timeout="3000" detachclass="true">
			<log level="100"><![CDATA[open database db name <%=event.getName().toString()%>]]></log>
			<log level="100"><![CDATA[open database db result <%=event.getParam('result').toString()%>]]></log>
			<log level="100"><![CDATA[open database db description <%=event.getParam('description').toString()%>]]></log>
			<log level="100"><![CDATA[open database db transportid <%=event.getParam('transportid').toString()%>]]></log>
			<log level="100"><![CDATA[open database db eventdata <%=event.getParam('eventdata').toString()%>]]></log>
		</wait>
		
		<database name="m_db_policy" method="ExecSQL">
			<sql><![CDATA[

				create table if not exists POLICY(

				POLICYID        		TEXT,

				SRCDEVICETYPE          TEXT,

				SRCDEVICEROLE        	TEXT,
				
				DSTDEVICETYPE        	TEXT,
				
				DSTDEVICEROLE        	TEXT,
				
				PRIORITY        		TEXT

				);

			]]></sql>
		</database>
		
		<wait event="db.response" transportid="context.m_db_policy.ptr.GetTransportId()" timeout="3000">
			<log><![CDATA[create table result <%=event.getParam('result').toString()%>]]></log>
			<log><![CDATA[create table description <%=event.getParam('description').toString()%>]]></log>
			<log><![CDATA[create table transportid <%=event.getParam('transportid').toString()%>]]></log>
			<log><![CDATA[create table eventdata <%=event.getParam('eventdata').toString()%>]]></log>
		</wait>
	</function>
<!--qiulei create DataBase 20180122 end-->
	<function name="RegisterHandler_sdnmgr">
		<log level="101">insert tunnelserviceapi RegisterHandler</log>
		<function name="RegisterAPIHandler" class="restfulservice">
			<parameters>
				<long name="bundleid" in="context.getCurrentBundleId()"/>			
				<string name="handleevent" in="'processCreateOneDeviceRequest'"/>
				<string name="requestpathtest" in="'/onos/v1/sdnmgr/device'"/>
			</parameters>
		</function>		
		<function name="RegisterAPIHandler" class="restfulservice">
			<parameters>
				<long name="bundleid" in="context.getCurrentBundleId()"/>			
				<string name="handleevent" in="'processDeleteOneDeviceRequest'"/>
				<string name="requestpathtest" in="'/onos/v1/sdnmgr/device/{resourceid}'"/>			
			</parameters>
		</function>
		<function name="RegisterAPIHandler" class="restfulservice">
			<parameters>
				<long name="bundleid" in="context.getCurrentBundleId()"/>			
				<string name="handleevent" in="'getAllDevices'"/>
				<string name="requestpathtest" in="'/onos/v1/sdnmgr/devices'"/>
			</parameters>
		</function>
		<function name="RegisterAPIHandler" class="restfulservice">
			<parameters>
				<long name="bundleid" in="context.getCurrentBundleId()"/>			
				<string name="handleevent" in="'processCreateOnePolicyRequest'"/>
				<string name="requestpathtest" in="'/onos/v1/sdnmgr/policy'"/>			
			</parameters>
		</function>
		<function name="RegisterAPIHandler" class="restfulservice">
			<parameters>
				<long name="bundleid" in="context.getCurrentBundleId()"/>			
				<string name="handleevent" in="'processGetAllPolicysRequest'"/>
				<string name="requestpathtest" in="'/onos/v1/sdnmgr/policys'"/>			
			</parameters>
		</function>
		<function name="RegisterAPIHandler" class="restfulservice">
			<parameters>
				<long name="bundleid" in="context.getCurrentBundleId()"/>			
				<string name="handleevent" in="'processDeleteOnePolicyRequest'"/>
				<string name="requestpathtest" in="'/onos/v1/sdnmgr/policy/{policyid}'"/>			
			</parameters>
		</function>
		<function name="RegisterAPIHandler" class="restfulservice">
			<parameters>
				<long name="bundleid" in="context.getCurrentBundleId()"/>			
				<string name="handleevent" in="'processGetAllPortsOfDeviceRequest'"/>
				<string name="requestpathtest" in="'/onos/v1/sdnmgr/ports/{deviceid}'"/>			
			</parameters>
		</function>
		
		<function name="RegisterAPIHandler" class="restfulservice">
			<parameters>
				<long name="bundleid" in="context.getCurrentBundleId()"/>			
				<string name="handleevent" in="'get1port'"/>
				<string name="requestpathtest" in="'/onos/v1/sdnmgr/port/{deviceid}/{portno}'"/>	
			</parameters>
		</function>
		
		<function name="RegisterAPIHandler" class="restfulservice">
			<parameters>
				<long name="bundleid" in="context.getCurrentBundleId()"/>			
				<string name="handleevent" in="'getlocationbyip'"/>
				<string name="requestpathtest" in="'/onos/v1/sdnmgr/location/{ipaddr}'"/>			
			</parameters>
		</function>
	</function>
	
	<function name="UnRegisterHandler_sdnmgr">
		<function name="UnRegisterAPIHandler" class="restfulservice">
			<parameters>
				<string name="requestpath" in="'/onos/v1/sdnmgr/device'"/>
			</parameters>
		</function>
		<function name="UnRegisterAPIHandler" class="restfulservice">
			<parameters>
				<string name="requestpath" in="'/onos/v1/sdnmgr/device/{ip}'"/>
			</parameters>
		</function>
		<function name="UnRegisterAPIHandler" class="restfulservice">
			<parameters>
				<string name="requestpath" in="'/onos/v1/sdnmgr/devices'"/>
			</parameters>
		</function>
		<function name="UnRegisterAPIHandler" class="restfulservice">
			<parameters>
				<string name="requestpath" in="'/onos/v1/sdnmgr/policy'"/>
			</parameters>
		</function>
		<function name="UnRegisterAPIHandler" class="restfulservice">
			<parameters>
				<string name="requestpath" in="'/onos/v1/sdnmgr/policys'"/>
			</parameters>
		</function>
		<function name="UnRegisterAPIHandler" class="restfulservice">
			<parameters>
				<string name="requestpath" in="'/onos/v1/sdnmgr/policy/{policyid}/{src-devidetype}/{src-devicerole}'"/>	
			</parameters>
		</function>
		<function name="UnRegisterAPIHandler" class="restfulservice">
			<parameters>
				<string name="requestpath" in="'/onos/v1/sdnmgr/ports/{deviceid}'"/>
			</parameters>
		</function>
		
		
		<function name="UnRegisterAPIHandler" class="restfulservice">
			<parameters>
				<string name="requestpath" in="'/onos/v1/sdnmgr/port/{ip}/{port}'"/>
			</parameters>
		</function>
		
		<function name="UnRegisterAPIHandler" class="restfulservice">
			<parameters>
				<string name="requestpath" in="'/onos/v1/sdnmgr/location/{ipaddr}'"/>
			</parameters>
		</function>
	</function>

	<events>	
		<!--处理 创建device 请求-->
		<onevent event="processCreateOneDeviceRequest">
			<log level="101">enter processCreateOneDeviceRequest  ----sdnmgrapi.xml 101</log>
			<if cond="event.getParam('method').toString() == 'POST'">
				<then>
					<log level="100">processCreateOneDeviceRequest</log>
					
					<string name="resourceid"/>
					<string name="ip"/>
					<string name="mac"/>
					<string name="location"/>
					<string name="devicetype"/>
					<string name="devicerole"/>
					<string name="bandwidth"/>
					<boolean name="result"/>
					<string name="addDataBaseResult"/>
					<boolean name="addResult"/>
					<boolean name="addResult2"/>
					<string name="outjson123"/>
					<script><![CDATA[
						var info = JSON.parse(event.getParam('eventdata').toString());
						context.ip.setValue(info.ip);
						context.mac.setValue(info.mac);
						context.location.setValue(info.inlocation);
						context.devicetype.setValue(info.devicetype);
						context.devicerole.setValue(info.devicerole);
						context.bandwidth.setValue(info.bandwidth);
					]]></script>					

					<function name="databaseHasDevice2">
						<parameters>
							<string name="devicetype" in="context.devicetype.toString()"/>
							<string name="location" in="context.location.toString()"/>
							<string name="ip" in="context.ip.toString()"/>
							<boolean name="result" out="context.result"/>
						</parameters>
					</function>
					
					
					<if cond="context.result.toBoolean() == false">
						<then>
							<function name="AddSDNMGRDevice" class="sdndevicemgr">
								<parameters>
									<string name="ip" in="context.ip.toString()"/>
									<string name="mac" in="context.mac.toString()"/>
									<string name="location" in="context.location.toString()"/>
									<string name="devicetype" in="context.devicetype.toString()"/>
									<string name="devicerole" in="context.devicerole.toString()"/>
									<string name="bandwidth" in="context.bandwidth.toString()"/>
									<string name="outresourceid" out="context.resourceid"/>
									<boolean name="addResult" out="context.addResult"/>
								</parameters>
							</function>
							<log level="100"><![CDATA[274 Device容器插入结果 addResult=<%=context.addResult.toString()%>    --sdnmgrapi.xml]]></log>
							
							<string name="sdnmgrdeviceCounts"/>
							<function name="GetSDNMGRDeviceCounts" class="sdndevicemgr">
								<parameters>
									<string name="sdnmgrdeviceCounts" out="context.sdnmgrdeviceCounts"/>
								</parameters>
							</function>
							<log level="100"><![CDATA[281  sdnmgrdeviceCounts=<%=context.sdnmgrdeviceCounts.toString()%>   --sdnmgrapi.xml]]></log>
							
							<function name="addMonitor" class="MonitorManager">
								<parameters>
									<string name="ip" in="context.ip.toString()"/>
									<boolean name="result" out="context.addResult2"/>
								</parameters>
							</function>
							
							<log level="100"><![CDATA[290 Monitor容器插入结果 addResult2=<%=context.addResult2.toString()%>    --sdnmgrapi.xml]]></log>
							
							<log level="100"><![CDATA[273  ip=<%=context.ip.toString()%>]]></log>
							<log level="100"><![CDATA[273  mac=<%=context.mac.toString()%>]]></log>
							<log level="100"><![CDATA[273  location=<%=context.location.toString()%>]]></log>
							<log level="100"><![CDATA[273  devicetype=<%=context.devicetype.toString()%>]]></log>
							<log level="100"><![CDATA[273  devicerole=<%=context.devicerole.toString()%>]]></log>
							<log level="100"><![CDATA[273  bandwidth=<%=context.bandwidth.toString()%>]]></log>
							<log level="100"><![CDATA[273  resourceid=<%=context.resourceid.toString()%>]]></log>
							<database name="m_db" method="ExecSQL">
								<sql><![CDATA[INSERT INTO COMPANY (RESOURCEID,IP,MAC,LOCATION,DEVICETYPE,DEVICEROLE,BANDWIDTH) VALUES ('<%=context.resourceid.toString()%>','<%=context.ip.toString()%>', '<%=context.mac.toString()%>','<%=context.location.toString()%>', '<%=context.devicetype.toString()%>', '<%=context.devicerole.toString()%>', '<%=context.bandwidth.toString()%>' );;
								]]></sql>
							</database>
							
							<wait event="db.response" transportid="context.m_db.ptr.GetTransportId()" timeout="3000">
								<log level="100"><![CDATA[insert table result <%=event.getParam('result').toString()%>]]></log>
								<set name="context.addDataBaseResult" value="event.getParam('result').toString()"/>
								<log level="100"><![CDATA[insert table description <%=event.getParam('description').toString()%>]]></log>
								<log level="100"><![CDATA[insert table transportid <%=event.getParam('transportid').toString()%>]]></log>
								<log level="100"><![CDATA[insert table eventdata <%=event.getParam('eventdata').toString()%>]]></log>
							</wait>
							<if cond="context.addDataBaseResult.toString()=='-1'">
								<then>
									<log level="100">287 enter 失败</log>
									<function name="sdnmgr_ErrorDataResponse">
										<parameters>
											<string name="transportid" in="event.getParam('transportid').toString()"/>
											<string name="description" in="'create failed !'"/>
										</parameters>
									</function>
									<exit/>
								</then>
							</if>
							
							<script><![CDATA[
								var one=new Object();
									one.resourceid = context.resourceid.toString();
									one.code = "0";
									one.description = "ok";
									
								var json = new Object();
									json.result = one;
								var strjson=JSON.stringify(json);
								context.outjson123.setValue(strjson);
							]]></script>
							<function name="SendResponse" class="RestfulService">
								<parameters>
									<string name="transportid" in="event.getParam('transportid').toString()"/>
									<string name="json" in="context.outjson123.toString()"/>
								</parameters>
							</function>
						</then>
						<else>
							<function name="sdnmgr_ErrorDataResponse">
								<parameters>
									<string name="transportid" in="event.getParam('transportid').toString()"/>
									<string name="description" in="'the obj is exist'"/>
								</parameters>
							</function>
						</else>
					</if>
				</then>
			</if>
		</onevent>
		<!--处理 删除 device 请求-->
		<onevent event="processDeleteOneDeviceRequest">
			<log level="101">enter processDeleteOneDeviceRequest  ----sdnmgrapi.xml 320</log>
			<if cond="event.getParam('method').toString() == 'DELETE'">
				<then>
					<log level="100">processDeleteOneDeviceRequest  ----sdnmgrapi.xml 323</log>
					<string name="resourceid"/>
					<object name="sdndevice"/>
					<boolean name="result"/>
					<script><![CDATA[
						var path = event.getParam('params').getIndexOf(0).toString()
						if (path.indexOf("{") == -1)
							context.resourceid.setValue(path)
						else
							context.resourceid.setValue(path.split("{")[1].split("}")[0])
					]]></script>
					
					<log level="100"><![CDATA[335 resourceid=<%=context.resourceid.toString()%>]]></log>
					
					<function name="databaseHasDevice">
						<parameters>
							<string name="resourceid" in="context.resourceid.toString()"/>
							<boolean name="result" out="context.result"/>
						</parameters>
					</function>
					<log level="100"><![CDATA[343 result=<%=context.result.toString()%>]]></log>
					<if cond="context.result.toBoolean() == true">
						<then>
							<database name="m_db" method="ExecSQL">
							<sql><![CDATA[
								DELETE from COMPANY where RESOURCEID = '<%=context.resourceid.toString()%>'
							]]></sql>
							</database>
							<wait event="db.response" transportid="context.m_db.ptr.GetTransportId()" timeout="3000">
								<log level="100"><![CDATA[DELETE table result <%=event.getParam('result').toString()%>]]></log>
								<log level="100"><![CDATA[DELETE table description <%=event.getParam('description').toString()%>]]></log>
								<log level="100"><![CDATA[DELETE table transportid <%=event.getParam('transportid').toString()%>]]></log>
								<log level="100"><![CDATA[DELETE table eventdata <%=event.getParam('eventdata').toString()%>]]></log>
							</wait>
							<function name="DeleteSDNMGRDeviceByid" class="sdndevicemgr">
								<parameters>
									<string name="resourceid" in="context.resourceid.toString()"/>
								</parameters>
							</function>
							<function name="testResponse"/>
						</then>
						<else>
							<function name="sdnmgr_ErrorDataResponse">
								<parameters>
									<string name="transportid" in="event.getParam('transportid').toString()"/>
									<string name="description" in="'The device is not exist !'"/>
								</parameters>
							</function>
						</else>
					</if>

					
					
				</then>
			</if>
		</onevent>

		<onevent event="getAllDevices">
			<log level="101">enter getAllDevices 377</log>
			<string name="data"/>
			<string name="handledata"/>
			<string name="detailarray"/>
			<database name="m_db" method="ExecSelectSQL" databindlist="'resourceid{RESOURCEID:v};ip{IP:v};mac{MAC:v};location{LOCATION:v};devicetype{DEVICETYPE:v};devicerole{DEVICEROLE:v};bandwidth{BANDWIDTH:v}'">
				<sql><![CDATA[
					SELECT * from COMPANY
				]]></sql>
			</database>
			<wait event="db.response" transportid="context.m_db.ptr.GetTransportId()" timeout="3000">
				<log level="100"><![CDATA[SELECT table result <%=event.getParam('result').toString()%>]]></log>
				<log level="100"><![CDATA[SELECT table description <%=event.getParam('description').toString()%>]]></log>
				<log level="100"><![CDATA[SELECT table transportid <%=event.getParam('transportid').toString()%>]]></log>
				<log level="100"><![CDATA[SELECT table eventdata <%=event.getParam('eventdata').toString()%>]]></log>
				<set name="context.data" value="event.getParam('eventdata').toString()"/>
			</wait>
			<if cond="context.data.toString() != ''">
				<then>
					<script><![CDATA[
						var json = JSON.parse(context.data.toString());

						context.handledata.setValue(JSON.stringify(json.data));						
					]]></script>
					<if cond="context.handledata != 'null'">
						<then>							
							<script><![CDATA[
								var final = new Object()
								var arr = new Array()
								var info = JSON.parse(context.data.toString())
								for (var i = 0; i < info.data.length; i++)
								{
									var device = new Object();
									
									device.resourceid = JSON.parse(info.data[i]).resourceid;
									device.ip = JSON.parse(info.data[i]).ip;
									device.mac = JSON.parse(info.data[i]).mac;
									device.location = JSON.parse(info.data[i]).location;
									device.devicetype = JSON.parse(info.data[i]).devicetype;
									device.devicerole = JSON.parse(info.data[i]).devicerole;
									device.bandwidth = JSON.parse(info.data[i]).bandwidth;
									
									arr.push(device)
								}
								final['devices'] = arr;
								context.detailarray.setValue(JSON.stringify(final));
							]]></script>
							
							<log level="101">enter getAllDevices 423</log>
							<function name="SendResponse" class="RestfulService">
								<parameters>
									<string name="transportid" in="event.getParam('transportid').toString()"/>
									<string name="json" in="context.detailarray.toString()"/>
								</parameters>
							</function>
						</then>
						<else>
							<function name="sdnmgr_ErrorDataResponse">
								<parameters>
									<string name="transportid" in="event.getParam('transportid').toString()"/>
									<string name="description" in="'The database is null !'"/>
								</parameters>
							</function>
						</else>
					</if>
				</then>
				<else>
					<function name="sdnmgr_ErrorDataResponse">
						<parameters>
							<string name="transportid" in="event.getParam('transportid').toString()"/>
							<string name="description" in="'The database is null !'"/>
						</parameters>
					</function>
				</else>
			</if>			
		</onevent>

		<!--处理创建 policy 请求-->
		<onevent event="processCreateOnePolicyRequest">
			<log level="101">enter processCreateOnePolicyRequest  ----sdnmgrapi.xml 132</log>
			<if cond="event.getParam('method').toString() == 'POST'">
				<then>
					<log level="100">processCreateOnePolicyRequest  ----sdnmgrapi.xml 135</log>
					
					<function name="addAllPolicys"/>
				</then>
			</if>
		</onevent>
		<!--处理 get policys 请求-->
		<onevent event="processGetAllPolicysRequest">
			<log level="101">enter processGetAllPolicysRequest  ----sdnmgrapi.xml 352</log>
			<if cond="event.getParam('method').toString() == 'GET'">
				<then>
					<log level="100">processGetAllPolicysRequest  ----sdnmgrapi.xml 355</log>
					
					<function name="getAllPolicys"/>
				</then>
			</if>
		</onevent>

		<!--处理删除 policy 请求-->
		<onevent event="processDeleteOnePolicyRequest">
			<log level="101">enter processDeleteOnePolicyRequest  ----sdnmgrapi.xml 147</log>
			<log level="101"><![CDATA[method type=<%=event.getParam('method').toString()%>  ----sdnmgrapi.xml 139]]></log>
			<if cond="event.getParam('method').toString() == 'DELETE'">
				<then>
					<log level="100">processDeleteOnePolicyRequest  ----sdnmgrapi.xml 142</log>
					<string name="policyid"/>
					<script><![CDATA[
						context.print("eventdata="+event.getParam('eventdata').toString());
						
					]]></script>
					<script><![CDATA[
						var str = event.getParam('requestpath').toString();
						var array = str.split("/");
						var policyid = array[array.length-1];
						context.policyid.setValue(policyid);
						context.print("379 policyid="+policyid);
					]]></script>
					
					<boolean name="deleteResult"/>
					<log level="101"><![CDATA[----sdnmgrapi.xml  deleteResult=<%=context.deleteResult.toString()%> ----383]]></log>
				
					<function name="DeletePolicyByid" class="sdnpolicymgr">
						<parameters>
							<string name="policyid" in="context.policyid.toString()"/>
							<boolean name="deleteResult" out="context.deleteResult"/>
						</parameters>
					</function>
					<log level="101"><![CDATA[----sdnmgrapi.xml  deleteResult=<%=context.deleteResult.toString()%> ----389]]></log>
				
					<if cond="context.deleteResult.toBoolean()==false">
						<then>
							<log level="101"> ----删除失败</log>
				
							<function name="sdnmgr_ErrorDataResponse">
								<parameters>
									<string name="transportid" in="event.getParam('transportid').toString()"/>
									<string name="description" in="'The policyid is not exist!'"/>
								</parameters>
							</function>
							<exit/>
						</then>
					</if>
					<log level="101"> ----删除成功</log>
					
					<log level="101">------删除数据库中的policy</log>
					<database name="m_db_policy" method="ExecSQL">
						<sql><![CDATA[
							DELETE from POLICY where POLICYID = '<%=context.policyid.toString()%>'
						]]></sql>
					</database>
					<wait event="db.response" transportid="context.m_db_policy.ptr.GetTransportId()" timeout="3000">
						<log level="100"><![CDATA[DELETE table result <%=event.getParam('result').toString()%>]]></log>
						<log level="100"><![CDATA[DELETE table description <%=event.getParam('description').toString()%>]]></log>
						<log level="100"><![CDATA[DELETE table transportid <%=event.getParam('transportid').toString()%>]]></log>
						<log level="100"><![CDATA[DELETE table eventdata <%=event.getParam('eventdata').toString()%>]]></log>
					</wait>
					
					
					<string name="outjson"/>
					<script><![CDATA[
						
						var one = new Object();
							one.policyid = context.policyid.toString();
							one.code = 0;
							one.description = "ok";
							
						var json = new Object();
							json.result = one;
							
						var strjson=JSON.stringify(json);												
						context.outjson.setValue(strjson);
					]]></script>
					<function name="SendResponse" class="RestfulService">
						<parameters>
							<string name="transportid" in="event.getParam('transportid').toString()"/>
							<string name="json" in="context.outjson.toString()"/>
						</parameters>
					</function>
				</then>
			</if>
		</onevent>
		
		<!-- get location by ip-->
		<onevent event="getlocationbyip">
		<string name="hostip" value="event.getParam('params').getIndexOf(0).toString()"/>
		<object name="hostobj"/>
		<string name="ip"/>
		<string name="deviceid"/>
		<string name="port"/>
		<object name="portobj"/>
		<string name="state"/>
		<string name="receive"/>
		<string name="jsonstr"/>
		<function name="Gethostbyip" class="HostManager">
			<parameters>
				<string name="hostip" in="context.hostip.toString()"/>	
				<object name="hostobj" out="context.hostobj"/>
			</parameters>
		</function>
		
		<if cond="context.hostobj.ptr==null">
			<then>
				<function name="sdnmgr_ErrorDataResponse">
					<parameters>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'The database is null !'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>
		
		<function name="getinfo" class="hostobj">
			<parameters>	
				<string name="ip"  out="context.ip"/>	
				<string name="deviceid"  out="context.deviceid"/>	
				<string name="port" out="context.port"/>			
			</parameters>
		</function>
		
		<function name="Getportbyportno" class="PortManager">
			<parameters>
				<string name="portno" in="context.port.toString()"/>
				<object name="protobj" out="context.portobj"/>
			</parameters>
		</function>
			
			
		<if cond="context.portobj.ptr==null">
			<then>
				<function name="sdnmgr_ErrorDataResponse">
					<parameters>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'The database is null !'"/>
					</parameters>
				</function>
				<exit/>
			</then>
		</if>	
			
		<function name="getPortinfo" class="portobj">
			<parameters>
				<string name="state" out="context.state"/>
				<string name="receive" out="context.receive"/>
			</parameters>
		</function>

		<script><![CDATA[
			var onearray = new Object();
				onearray.ipaddr=context.hostip.toString();
			
			if (context.port.toString() == 4294967294){ 						
				onearray.port = context.deviceid.toString()+"/Local";						
			}else{
				onearray.port=context.deviceid.toString()+"/"+context.port.toString();
			}
			if (context.state.toString() == '0'){ 						
				onearray.workstate = "active";						
			}else{
				onearray.workstate = "deactive";
			}
			onearray.sendbandwidth="500";
			onearray.receive=context.receive.toString();
			context.jsonstr.setValue(JSON.stringify(onearray));
			]]></script>
			
		<if conf="context.jsonstr.toString()!=''">
			<then>
				<function name="SendResponse" class="RestfulService">
					<parameters>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="json" in="context.jsonstr.toString()"/>
					</parameters>
				</function>
			</then>
		</if>
	</onevent>
		<!--处理得到 All ports 请求-->
		<onevent event="processGetAllPortsOfDeviceRequest">
			<log level="101">enter processGetAllPortsOfDeviceRequest  ----sdnmgrapi.xml 163</log>
			<log level="101"><![CDATA[method type=<%=event.getParam('method').toString()%>  ----sdnmgrapi.xml 154]]></log>
			<if cond="event.getParam('method').toString() == 'GET'">
				<then>
					<log level="100">processGetAllPortsOfDeviceRequest  ----sdnmgrapi.xml 166</log>
					<object name="deviceobj"/>
					<object name="portmgr"/>
					<string name="portmgrjson"/>
					<string name="deviceid"/>
					<set name="context.deviceid" value="event.getParam('params').getIndexOf(0).toString()"/>

					<function name="getDevice" class="DeviceManager">
						<parameters>
							<object name="outdevice" out="context.deviceobj"/>
							<string name="datapathid" in="context.deviceid.toString()"/>
						</parameters>
					</function>
					<if cond="context.deviceobj.ptr != null">
						<then>
							<function name="GetPortManager" class="context.deviceobj">
								<parameters>
									<object name="outportmgr" out="context.portmgr"/>
								</parameters>
							</function>
							<if cond="context.portmgr.ptr != null">
								<then>									
									<function name="GetAllPortInfo" class="context.portmgr">
										<parameters>	
											<string name="outjson" out="context.portmgrjson"/>
										</parameters>
									</function>
									<function name="SendResponse" class="RestfulService">
										<parameters>
											<string name="transportid" in="event.getParam('transportid').toString()"/>
											<string name="json" in="context.portmgrjson.toString()"/>
										</parameters>
									</function>
								</then>
								<else>
									<function name="sdnmgr_ErrorDataResponse">
										<parameters>
											<string name="transportid" in="event.getParam('transportid').toString()"/>
											<string name="description" in="'The port is not exist !'"/>
										</parameters>
									</function>
								</else>
							</if>
						</then>
						<else>
							<function name="sdnmgr_ErrorDataResponse">
								<parameters>
									<string name="transportid" in="event.getParam('transportid').toString()"/>
									<string name="description" in="'The device is not exist !'"/>
								</parameters>
							</function>
						</else>
					</if>
				</then>
			</if>
		</onevent>

		<!-- Get appointed port info-->
		<onevent event="get1port">
			<log level="101">enter get1port  ----sdnmgrapi.xml 639</log>
			<string name="deviceid"/>
			<string name="port"/>
			<object name="deviceobj"/>
			<object name="portmgr"/>
			<string name="result"/>
			<set name="context.deviceid" value="event.getParam('params').getIndexOf(0).toString()"/>
			<set name="context.port" value="event.getParam('params').getIndexOf(1).toString()"/>

			<function name="getDevice" class="DeviceManager">
				<parameters>
					<object name="outdevice" out="context.deviceobj"/>
					<string name="datapathid" in="context.deviceid.toString()"/>
				</parameters>
			</function>

			<if cond="context.deviceobj.ptr != null">
				<then>
					<function name="GetPortManager" class="context.deviceobj">
						<parameters>
							<object name="outportmgr" out="context.portmgr"/>
						</parameters>
					</function>
					<if cond="context.portmgr.ptr != null">
						<then>
							<function name="GetAppointedPortInfo" class="context.portmgr">
								<parameters>
									<string name="portno" in="context.port.toString()"/>
									<string name="outjson" out="context.result"/>
								</parameters>
							</function>
							<function name="SendResponse" class="RestfulService">
								<parameters>
									<string name="transportid" in="event.getParam('transportid').toString()"/>
									<string name="json" in="context.result.toString()"/>
								</parameters>
							</function>
						</then>
						<else>
							<function name="sdnmgr_ErrorDataResponse">
								<parameters>
									<string name="transportid" in="event.getParam('transportid').toString()"/>
									<string name="description" in="'The port is not exist !'"/>
								</parameters>
							</function>
						</else>
					</if>
				</then>
				<else>
					<function name="sdnmgr_ErrorDataResponse">
						<parameters>
							<string name="transportid" in="event.getParam('transportid').toString()"/>
							<string name="description" in="'The device is not exist !'"/>
						</parameters>
					</function>
				</else>
			</if>
		</onevent>
				<!--处理 得到 一个 port  请求 qilei 20180119-->
		<onevent event="processGetOnePortOfDeviceRequest">
			<log level="101">enter processGetOnePortOfDeviceRequest  ----sdnmgrapi.xml 608</log>
			<log level="101"><![CDATA[method type=<%=event.getParam('method').toString()%>  ----sdnmgrapi.xml 139]]></log>
			<if cond="event.getParam('method').toString() == 'GET'">
				<then>
					<log level="100">processGetOnePortOfDeviceRequest  ----sdnmgrapi.xml 612</log>
					<string name="resourceid"/>
					<string name="portNo"/>
					<script><![CDATA[
						context.print("eventdata="+event.getParam('eventdata').toString());
						
					]]></script>
					<script><![CDATA[
						var str = event.getParam('requestpath').toString();
						var array = str.split("/");
						var resourceid = array[array.length-2];
						
						var portNo = array[array.length-1];
						context.resourceid.setValue(resourceid);
						context.portNo.setValue(portNo);
						context.print("379 resourceid="+resourceid);
						context.print("379 portNo="+portNo);
					]]></script>

					<string name="outjson"/>
					<script><![CDATA[
						
						var one = new Object();
							one.resourceid = context.resourceid.toString();
							one.portNo = context.portNo.toString();
							one.code = 0;
							one.description = "ok";
							
						var json = new Object();
							json.result = one;
							
						var strjson=JSON.stringify(json);
						context.outjson.setValue(strjson);
					]]></script>
					<function name="SendResponse" class="RestfulService">
						<parameters>
							<string name="transportid" in="event.getParam('transportid').toString()"/>
							<string name="json" in="context.outjson.toString()"/>
						</parameters>
					</function>
				</then>
			</if>
		</onevent>
	</events>


	<!--
		@brief		返回错误信息
		@auth 		YY
		@date		2017/09/14
		Input:
			@param resourceid 	资源id
			@param transportid   发送报文id
			@param description   错误信息
		Output:
	-->	
	<function name="sdnmgr_ErrorDataResponse">
		<parameters>
			<string name="transportid"/>
			<string name="description"/>
		</parameters>
		<string name="outjson"/>
		<script><![CDATA[
			var json = new Object();
			var one = new Object();
				one.code = "-1";
				one.description = context.description.toString();
				
			json.result = one;
			var strjson=JSON.stringify(json);
			context.outjson.setValue(strjson);
		]]></script>
		<log level="101"><![CDATA[534 outjson<%=context.outjson.toString()%> --------sdnmgr_ErrorDataResponse]]></log>
		<function name="SendResponse" class="RestfulService">
			<parameters>
				<string name="transportid" in="context.transportid.toString()"/>
				<string name="json" in="context.outjson.toString()"/>
			</parameters>
		</function>
	</function>
	
	
	<!--qiulei-->
	<function name="testResponse">
		<log level="101">enter testResponse  ----sdnmgrapi.xml 217</log>
		<string name="outjson123"/>
		<script><![CDATA[
			var one=new Object();
				one.code = "0";
				one.description = "ok";
				
			var json = new Object();
				json.result = one;
			var strjson=JSON.stringify(json);
			context.outjson123.setValue(strjson);
		]]></script>
		<function name="SendResponse" class="RestfulService">
			<parameters>
				<string name="transportid" in="event.getParam('transportid').toString()"/>
				<string name="json" in="context.outjson123.toString()"/>
			</parameters>
		</function>
	</function>


	
	<function name="databaseHasDevice2">
		<parameters>
			<string name="devicetype" />
			<string name="location"/>
			<string name="ip"/>
			<boolean name="result"/>
		</parameters>
		<log level="101"><![CDATA[----sdnmgrapi.xml 789 result=<%=context.result%>]]></log>
		<string name="data"/>
		<string name="handledata"/>

		<if cond="context.devicetype.toString()=='wireless'">
			<then>
				
				<database name="m_db" method="ExecSelectSQL" databindlist="'resourceid{RESOURCEID:v};ip{IP:v};mac{MAC:v};location{LOCATION:v};devicetype{DEVICETYPE:v};devicerole{DEVICEROLE:v};bandwidth{BANDWIDTH:v}'">
					<sql><![CDATA[
						SELECT * from COMPANY where IP = '<%=context.ip.toString()%>'
					]]></sql>
				</database>
				<wait event="db.response" transportid="context.m_db.ptr.GetTransportId()" timeout="3000">
					<set name="context.data" value="event.getParam('eventdata').toString()"/>
				</wait>
				<if cond="context.data.toString() != ''">
					<then>
						<script><![CDATA[
							var json = JSON.parse(context.data.toString())
							context.handledata.setValue(JSON.stringify(json.data))
						]]></script>
						<if cond="context.handledata.toString() != 'null'">
							<then>
								<set name="context.result" value="true"/>
							</then>
							<else>
								<set name="context.result" value="false"/>
							</else>
						</if>
					</then>
					<else>
						<set name="context.result" value="false"/>
					</else>
				</if>
			</then>
			<else>
				<database name="m_db" method="ExecSelectSQL" databindlist="'resourceid{RESOURCEID:v};ip{IP:v};mac{MAC:v};location{LOCATION:v};devicetype{DEVICETYPE:v};devicerole{DEVICEROLE:v};bandwidth{BANDWIDTH:v}'">
					<sql><![CDATA[
						SELECT * from COMPANY where LOCATION = '<%=context.location.toString()%>'
					]]></sql>
				</database>
				<wait event="db.response" transportid="context.m_db.ptr.GetTransportId()" timeout="3000">
					<set name="context.data" value="event.getParam('eventdata').toString()"/>
				</wait>
				<if cond="context.data.toString() != ''">
					<then>
						<script><![CDATA[
							var json = JSON.parse(context.data.toString())
							context.handledata.setValue(JSON.stringify(json.data))
						]]></script>
						<if cond="context.handledata.toString() != 'null'">
							<then>
								<set name="context.result" value="true"/>
							</then>
							<else>
								<set name="context.result" value="false"/>
							</else>
						</if>
					</then>
					<else>
						<set name="context.result" value="false"/>
					</else>
				</if>
			</else>
		</if>
	</function>
	
	<function name="databaseHasDevice">
		<parameters>
			<string name="resourceid"/>
			<boolean name="result"/>
		</parameters>
		<string name="data"/>
		<string name="handledata"/>
		
		<database name="m_db" method="ExecSelectSQL" databindlist="'resourceid{RESOURCEID:v};ip{IP:v};mac{MAC:v};location{LOCATION:v};devicetype{DEVICETYPE:v};devicerole{DEVICEROLE:v};bandwidth{BANDWIDTH:v}'">
			<sql><![CDATA[
				SELECT * from COMPANY where RESOURCEID = '<%=context.resourceid.toString()%>'
			]]></sql>
		</database>
		<wait event="db.response" transportid="context.m_db.ptr.GetTransportId()" timeout="3000">
			<set name="context.data" value="event.getParam('eventdata').toString()"/>
		</wait>
		<if cond="context.data.toString() != ''">
			<then>
				<script><![CDATA[
					var json = JSON.parse(context.data.toString())
					context.handledata.setValue(JSON.stringify(json.data))
				]]></script>
				<if cond="context.handledata.toString() != 'null'">
					<then>
						<set name="context.result" value="true"/>
					</then>
					<else>
						<set name="context.result" value="false"/>
					</else>
				</if>
			</then>
			<else>
				<set name="context.result" value="false"/>
			</else>
		</if>
	</function>
	
	<function name="addAllPolicys">
		<log level="100">enter addAllPolicys Method  ----sdnmgrapi.xml 456</log>
		
		<function name="DeleteAllPolicy" class="context.sdnpolicymgr"/>
		<function name="UninstallALLFlow"/>

		<list name="typelist" valuetype="string"/>
		<string name="policyid"/>
		<string name="successresponse"/>
		
		<string name="srcdevicetype"/>
		<string name="srcdevicerole"/>
		<string name="dstdevicetype"/>
		<string name="dstdevicerole"/>
		<string name="priority"/>
		
		<object name="oneSDNMGRTypeMgr"/>
		<new name="oneSDNMGRTypeMgr" class="CSDNMGRTypeManager"/>

		<script><![CDATA[
			context.print("----465 policy数据="+event.getParam('eventdata').toString());

			var eventdata=event.getParam('eventdata').toString();
			
			var json = JSON.parse(eventdata);
			var policyid=json.policyid.toString();
			var typeArr=json.type;
			
			for(var i=0;i<typeArr.length;i++){
				var oneTypeJsonStr=JSON.stringify(typeArr[i]);
				context.print("oneTypeJsonStr="+oneTypeJsonStr);
				context.typelist.addValue(oneTypeJsonStr);
			}
			
			context.policyid.setValue(policyid);
		]]></script>
		
		<string name="onetypestr"/>

		<for var="onetypestr" in="context.typelist">
			<log level="101"><![CDATA[560 onetypestr=<%=context.onetypestr.toString()%>]]></log>
			<script><![CDATA[
				context.print("365 onetypestr="+context.onetypestr);
				
				var json=context.onetypestr.toString();
				json=json.replace(/-/g,"_");
				
				context.print("566 json="+json);
		
				var oneTypeObj = JSON.parse(json);
				context.print("564");

				var src_devicetype = oneTypeObj.src_devicetype;
				var src_devicerole = oneTypeObj.src_devicerole;
				var dst_devicetype = oneTypeObj.dst_devicetype;
				var dst_devicerole = oneTypeObj.dst_devicerole;
				var priority = oneTypeObj.priority;
				context.print("576");
				context.print("src_devicetype="+src_devicetype);
				context.print("src_devicerole="+src_devicerole);
				context.print("dst_devicetype="+dst_devicetype);
				context.print("dst_devicerole="+dst_devicerole);
				context.print("priority="+priority);
				context.srcdevicetype.setValue(src_devicetype);
				context.srcdevicerole.setValue(src_devicerole);
				context.dstdevicetype.setValue(dst_devicetype);
				context.dstdevicerole.setValue(dst_devicerole);
				context.priority.setValue(priority);
				context.print("583");
			]]></script>
			
			<log level="101"><![CDATA[asdfaaaaaaaaaaaaaaaaaaaaaaaaaa]]></log>
			<function name="AddType" class="oneSDNMGRTypeMgr">
				<parameters>
					<string name="srcdevicetype" in="context.srcdevicetype.toString()"/>
					<string name="srcdevicerole" in="context.srcdevicerole.toString()"/>
					<string name="dstdevicetype" in="context.dstdevicetype.toString()"/>
					<string name="dstdevicerole" in="context.dstdevicerole.toString()"/>
					<string name="priority" 	  in="context.priority.toString()"/>
				</parameters>
			</function>

			<!--qiulei 20180122-->
			<log level="101"><![CDATA[开始插入数据]]></log>
			<database name="m_db_policy" method="ExecSQL">
				<sql><![CDATA[INSERT INTO POLICY (POLICYID,SRCDEVICETYPE,SRCDEVICEROLE,DSTDEVICETYPE,DSTDEVICEROLE,PRIORITY) 
				VALUES ('<%=context.policyid.toString()%>',  '<%=context.srcdevicetype.toString()%>', '<%=context.srcdevicerole.toString()%>', '<%=context.dstdevicetype.toString()%>', '<%=context.dstdevicerole.toString()%>', '<%=context.priority.toString()%>' );;
				]]></sql>
			</database>
			<wait event="db.response" transportid="context.m_db_policy.ptr.GetTransportId()" timeout="3000">
				<log level="100"><![CDATA[insert table result <%=event.getParam('result').toString()%>]]></log>
				<log level="100"><![CDATA[insert table description <%=event.getParam('description').toString()%>]]></log>
				<log level="100"><![CDATA[insert table transportid <%=event.getParam('transportid').toString()%>]]></log>
				<log level="100"><![CDATA[insert table eventdata <%=event.getParam('eventdata').toString()%>]]></log>
			</wait>
			<log level="101"><![CDATA[数据插入完毕]]></log>
		</for>
		
		<function name="AddPolicy" class="sdnpolicymgr">
			<parameters>
				<string name="policyid" in="context.policyid"/>
				<object name="sdnmgrTypeMgr" in="context.oneSDNMGRTypeMgr"/>
			</parameters>
		</function>
		
		<function name="InstallFlow">
			<parameters>
				<string name="srcdevicetype" in="context.srcdevicetype.toString()"/>
				<string name="srcdevicerole" in="context.srcdevicerole.toString()"/>
				<string name="dstdevicetype" in="context.dstdevicetype.toString()"/>
				<string name="dstdevicerole" in="context.dstdevicerole.toString()"/>
			</parameters>
		</function>
		<function name="policy_successresponse">
			<parameters>
				<string name="successresponse" out="context.successresponse"/>
			</parameters>
		</function>	
		<function name="SendResponse" class="RestfulService">
			<parameters>
				<string name="transportid" in="event.getParam('transportid').toString()"/>
				<string name="json" in="context.successresponse.toString()"/>
			</parameters>
		</function>
		<log level="100">enter addAllPolicys Method  ----sdnmgrapi.xml 509</log>
	</function>
	<function name="policy_successresponse">
		<parameters>
			<string name="successresponse"/>
		</parameters>
		<log level="101">enter policy_successresponse  ----sdnmgrapi.xml 629</log>
		<string name="outjson"/>
		<script><![CDATA[
			var one=new Object();
				one.code = "0";
				one.description = "ok";
				
			var json = new Object();					
				json.result = one;
			var strjson=JSON.stringify(json);												
			context.successresponse.setValue(strjson);
		]]></script>

	</function>
	
	<function name="getAllPolicys">
		<log level="100">enter getAllPolicys Method  ----sdnmgrapi.xml 933</log>
		<string name="data"/>
		<string name="handledata"/>
		<string name="detailarray"/>
		
		<log level="100">enter getAllPolicys Method  ----sdnmgrapi.xml 669</log>
		<database name="m_db_policy" method="ExecSelectSQL" databindlist="'policyid{POLICYID:v};srcdevicetype{SRCDEVICETYPE:v};srcdevicerole{SRCDEVICEROLE:v};dstdevicetype{DSTDEVICETYPE:v};dstdevicerole{DSTDEVICEROLE:v};priority{PRIORITY:v}'">
			<sql><![CDATA[
				SELECT * from POLICY
			]]></sql>
		</database>
		<wait event="db.response" transportid="context.m_db_policy.ptr.GetTransportId()" timeout="3000">
			<log level="100"><![CDATA[SELECT table result <%=event.getParam('result').toString()%>]]></log>
			<log level="100"><![CDATA[SELECT table description <%=event.getParam('description').toString()%>]]></log>
			<log level="100"><![CDATA[SELECT table transportid <%=event.getParam('transportid').toString()%>]]></log>
			<log level="100"><![CDATA[SELECT table eventdata <%=event.getParam('eventdata').toString()%>]]></log>
			<set name="context.data" value="event.getParam('eventdata').toString()"/>
			<log level="101"><![CDATA[SELECT DATABASE DATA=<%=context.data.toString()%>]]></log>
		</wait>

		<if cond="context.data.toString() != ''">
			<then>
				<script><![CDATA[
					var jsonobj = JSON.parse(context.data.toString());
					
					context.handledata.setValue(JSON.stringify(jsonobj.data));

				]]></script>
				<if cond="context.handledata.toString() != 'null'">
					<then>
						<script><![CDATA[
							var final = new Object();
							var policyNewArr = new Array();
							var ptypeArr = new Array();
							
							var jsonobj = JSON.parse(context.data.toString());
							var policyArr=jsonobj.data;
							for (var i = 0; i < policyArr.length; i++){
								var policyid = JSON.parse(policyArr[i]).policyid;
								
								var ptypeobj = new Object();
									ptypeobj.srcdevicetype = JSON.parse(policyArr[i]).srcdevicetype;
									ptypeobj.srcdevicerole = JSON.parse(policyArr[i]).srcdevicerole;
									ptypeobj.dstdevicetype = JSON.parse(policyArr[i]).dstdevicetype;
									ptypeobj.dstdevicerole = JSON.parse(policyArr[i]).dstdevicerole;
									ptypeobj.priority = JSON.parse(policyArr[i]).priority;
									
								var myBoolean=new Boolean(true);
								context.print("981 myBoolean="+myBoolean);
								for (var j = 0; j < policyNewArr.length; j++){
									context.print("983 policyNewArr[j].policyid="+policyNewArr[j].policyid+";policyid"+policyid);
									if(policyNewArr[j].policyid==policyid){
										(policyNewArr[j].type).push(ptypeobj);
										myBoolean=new Boolean(false);
										context.print("986 myBoolean="+myBoolean);
										break;
									}
								}
								
								if(myBoolean==true){
									ptypeArr.push(ptypeobj);
								
									var policyobj = new Object();
										policyobj.policyid = policyid;
										policyobj.type = ptypeArr;
									
									policyNewArr.push(policyobj);
									//ptypeArr =[];
									ptypeArr.splice(0,ptypeArr.length);//清空数组
									context.print("1001 清空后的长度 length="+ptypeArr.length);
								}
								
							}
							final['policys'] = policyNewArr;
							context.detailarray.setValue(JSON.stringify(final));
						]]></script>
						<function name="SendResponse" class="RestfulService">
							<parameters>
								<string name="transportid" in="event.getParam('transportid').toString()"/>
								<string name="json" in="context.detailarray.toString()"/>
							</parameters>
						</function>
					</then>
					<else>
						<function name="sdnmgr_ErrorDataResponse">
							<parameters>
								<string name="transportid" in="event.getParam('transportid').toString()"/>
								<string name="description" in="'The database is null !'"/>
							</parameters>
						</function>
					</else>
				</if>
			</then>
			<else>
				<function name="sdnmgr_ErrorDataResponse">
					<parameters>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="description" in="'The database is null !'"/>
					</parameters>
				</function>
			</else>
		</if>
		<log level="100">enter getAllPolicys Method  ----sdnmgrapi.xml 686</log>
	</function>
	
	<function name="InstallFlow">
		<parameters>
			<string name="srcdevicetype"/>
			<string name="srcdevicerole"/>
			<string name="dstdevicetype"/>
			<string name="dstdevicerole"/>
		</parameters>
		<string name="srcip"/>
		<string name="dstip"/>
		<string name="srcmac"/>
		<string name="dstmac"/>
		<string name="srctpid"/>
		<string name="dsttpid"/>
		<string name="srcinport"/>
		<string name="dstinport"/>
		<string name="srcoutport"/>
		<string name="dstoutport"/>
		<string name="srcdpid"/>
		<string name="dstdpid"/>
		<string name="location"/>
		<boolean name="is_swired" value="false"/>
		<boolean name="is_dwired" value="false"/>
		<object name="openflowdevice"/>
		<if cond="context.srcdevicetype.toString()=='wired'">
			<then>
				<set name="is_swired" value="true"/>
			</then>
		</if>
		<if cond="context.dstdevicetype.toString()=='wired'">
			<then>
				<set name="is_dwired" value="true"/>
			</then>
		</if>
		<syslog level="INFO"><![CDATA[is_swired = <%=context.is_swired.toString()%>]]></syslog>
		<syslog level="INFO"><![CDATA[is_dwired = <%=context.is_dwired.toString()%>]]></syslog>
		<if cond="context.is_swired.toBoolean()==true">
			<then>
				<function name="GetLocationByTR" class="context.sdndevicemgr">
					<parameters>
						<string name="location" out="context.location"/>
						<string name="devicetype" in="context.srcdevicetype.toString()"/>
						<string name="devicerole" in="context.srcdevicerole.toString()"/>
					</parameters>
				</function>
				<script><![CDATA[
					var ltion = context.location.toString();
					context.srcdpid.setValue(ltion.split("/")[0]);
					context.srcinport.setValue(ltion.split("/")[1]);
				]]></script>
				<function name="GetTransportIdFromDevice" class="context.devicemgr">
					<parameters>
						<string name="datapathid" in="context.srcdpid.toString()"/>
						<string name="transportid" out="context.srctpid"/>
					</parameters>
				</function>
				<function name="GetIPMACByTR" class="context.sdndevicemgr">
					<parameters>
						<string name="ip" out="context.dstip"/>
						<string name="mac" out="context.dstmac"/>
						<string name="devicetype" in="context.dstdevicetype.toString()"/>
						<string name="devicerole" in="context.dstdevicerole.toString()"/>
					</parameters>
				</function>
				<function name="GetTPPByIP" class="context.hostmanager">
					<parameters>
						<string name="transport" out="context.dsttpid"/>
						<string name="port" out="context.dstinport"/>
						<string name="dpid" out="context.dstdpid"/>
						<string name="ip" in="context.dstip.toString()"/>
					</parameters>
				</function>
			</then>
			<elseif cond="context.is_dwired.toBoolean()==true">
				<function name="GetLocationByTR" class="context.sdndevicemgr">
					<parameters>
						<string name="location" out="context.location"/>
						<string name="devicetype" in="context.dstdevicetype.toString()"/>
						<string name="devicerole" in="context.dstdevicerole.toString()"/>
					</parameters>
				</function>
				<script><![CDATA[
					var ltion = context.location.toString();
					context.dstdpid.setValue(ltion.split("/")[0]);
					context.dstinport.setValue(ltion.split("/")[1]);
				]]></script>
				<function name="GetTransportIdFromDevice" class="context.devicemgr">
					<parameters>
						<string name="datapathid" in="context.dstdpid.toString()"/>
						<string name="transportid" out="context.dsttpid"/>
					</parameters>
				</function>
				<function name="GetIPMACByTR" class="context.sdndevicemgr">
					<parameters>
						<string name="ip" out="context.srcip"/>
						<string name="mac" out="context.srcmac"/>
						<string name="devicetype" in="context.srcdevicetype.toString()"/>
						<string name="devicerole" in="context.srcdevicerole.toString()"/>
					</parameters>
				</function>
				<function name="GetTPPByIP" class="context.hostmanager">
					<parameters>
						<string name="transport" out="context.srctpid"/>
						<string name="port" out="context.srcinport"/>
						<string name="dpid" out="context.srcdpid"/>
						<string name="ip" in="context.srcip.toString()"/>
					</parameters>
				</function>
			</elseif>
			<else>
				<function name="GetIPMACByTR" class="context.sdndevicemgr">
					<parameters>
						<string name="ip" out="context.srcip"/>
						<string name="mac" out="context.srcmac"/>
						<string name="devicetype" in="context.srcdevicetype.toString()"/>
						<string name="devicerole" in="context.srcdevicerole.toString()"/>
					</parameters>
				</function>
				<if cond="context.srcip.toString()==''">
					<then>
						<exit/>
					</then>
				</if>
				<if cond="context.srcmac.toString()==''">
					<then>
						<exit/>
					</then>
				</if>
				<function name="GetIPMACByTR" class="context.sdndevicemgr">
					<parameters>
						<string name="ip" out="context.dstip"/>				
						<string name="mac" out="context.dstmac"/>
						<string name="devicetype" in="context.dstdevicetype.toString()"/>
						<string name="devicerole" in="context.dstdevicerole.toString()"/>
					</parameters>
				</function>
				<if cond="context.dstip.toString()==''">
					<then>
						<exit/>
					</then>
				</if>
				<if cond="context.dstmac.toString()==''">
					<then>
						<exit/>
					</then>
				</if>
				<function name="GetTPPByIP" class="context.hostmanager">
					<parameters>
						<string name="transport" out="context.srctpid"/>
						<string name="port" out="context.srcinport"/>
						<string name="dpid" out="context.srcdpid"/>
						<string name="ip" in="context.srcip.toString()"/>
					</parameters>
				</function>
				<if cond="context.srcdpid.toString()==''">
					<then>
						<exit/>
						<syslog level="INFO">no device</syslog>
					</then>
				</if>
				<function name="GetTPPByIP" class="context.hostmanager">
					<parameters>
						<string name="transport" out="context.dsttpid"/>
						<string name="port" out="context.dstinport"/>
						<string name="dpid" out="context.dstdpid"/>
						<string name="ip" in="context.dstip.toString()"/>
					</parameters>
				</function>
				<if cond="context.dstdpid.toString()==''">
					<then>
						<exit/>
						<syslog level="INFO">no device</syslog>
					</then>
				</if>
			</else>
		</if>
		
		<if cond="context.srcdpid.toString() == context.dstdpid.toString()">
			<then>
				<syslog level="INFO">#Install same flow#</syslog>
				<if cond="context.is_swired.toBoolean()==true">
					<then>
						<function name="InstallSWIREDFlowMid">
							<parameters>			
								<string name="dip" in="context.dstip.toString()"/>
								<string name="dmac" in="context.dstmac.toString()"/>
								<string name="dpid" in="context.srcdpid.toString()"/>
								<string name="inport" in="context.srcinport.toString()"/>
								<string name="outport"  in="context.dstinport.toString()"/>
							</parameters>
						</function>
					</then>
					<elseif cond="context.is_dwired.toBoolean()==true">
						<function name="InstallDWIREDFlowMid">
							<parameters>			
								<string name="sip" in="context.srcip.toString()"/>
								<string name="smac" in="context.srcmac.toString()"/>
								<string name="dpid" in="context.srcdpid.toString()"/>
								<string name="inport" in="context.srcinport.toString()"/>
								<string name="outport"  in="context.dstinport.toString()"/>
							</parameters>
						</function>
					</elseif>
					<else>
						<function name="InstallFlowMid">
							<parameters>
								<string name="sip" in="context.srcip.toString()"/>
								<string name="smac" in="context.srcmac.toString()"/>				
								<string name="dip" in="context.dstip.toString()"/>
								<string name="dmac" in="context.dstmac.toString()"/>
								<string name="dpid" in="context.srcdpid.toString()"/>
								<string name="inport" in="context.srcinport.toString()"/>
								<string name="outport"  in="context.dstinport.toString()"/>
							</parameters>
						</function>
					</else>
				</if>
				
			</then>
			<else>	
				<set name="context.openflowdevice" value="context.openflowserverobj.getValue().getDevice(context.srctpid.toString())"/>
				<set name="context.srcoutport" value="context.openflowdevice.ptr.getOutPort(context.dstdpid.toString())"/>
				<set name="context.openflowdevice" value="context.openflowserverobj.getValue().getDevice(context.dsttpid.toString())"/>
				<set name="context.dstoutport" value="context.openflowdevice.ptr.getOutPort(context.srcdpid.toString())"/>
				<if cond="context.is_swired.toBoolean()==true">
					<then>
						<function name="InstallSWIREDFlowStart">
							<parameters>				
								<string name="dip" in="context.dstip.toString()"/>
								<string name="dmac" in="context.dstmac.toString()"/>
								<string name="dpid" in="context.srcdpid.toString()"/>
								<string name="inport" in="context.srcinport.toString()"/>
								<string name="outport"  in="context.srcoutport.toString()"/>
							</parameters>
						</function>
						
						<function name="InstallSWIREDFlowEnd">
							<parameters>			
								<string name="dip" in="context.dstip.toString()"/>
								<string name="dmac" in="context.dstmac.toString()"/>
								<string name="dpid" in="context.dstdpid.toString()"/>
								<string name="inport" in="context.dstinport.toString()"/>
								<string name="outport"  in="context.dstoutport.toString()"/>
							</parameters>
						</function>
					</then>
					
					<elseif cond="context.is_dwired.toBoolean()==true">
						<function name="InstallDWIREDFlowStart">
							<parameters>				
								<string name="sip" in="context.srcip.toString()"/>
								<string name="smac" in="context.srcmac.toString()"/>
								<string name="dpid" in="context.srcdpid.toString()"/>
								<string name="inport" in="context.srcinport.toString()"/>
								<string name="outport"  in="context.srcoutport.toString()"/>
							</parameters>
						</function>
						
						<function name="InstallDWIREDFlowEnd">
							<parameters>			
								<string name="sip" in="context.srcip.toString()"/>
								<string name="smac" in="context.srcmac.toString()"/>
								<string name="dpid" in="context.dstdpid.toString()"/>
								<string name="inport" in="context.dstinport.toString()"/>
								<string name="outport"  in="context.dstoutport.toString()"/>
							</parameters>
						</function>
					</elseif>
					
					<else>						
						<syslog level="INFO">#Install 2 switch flow#</syslog>	
						<function name="InstallFlowStart">
							<parameters>
								<string name="sip" in="context.srcip.toString()"/>
								<string name="smac" in="context.srcmac.toString()"/>				
								<string name="dip" in="context.dstip.toString()"/>
								<string name="dmac" in="context.dstmac.toString()"/>
								<string name="dpid" in="context.srcdpid.toString()"/>
								<string name="inport" in="context.srcinport.toString()"/>
								<string name="outport"  in="context.srcoutport.toString()"/>
							</parameters>
						</function>
						
						<function name="InstallFlowEnd">
							<parameters>
								<string name="sip" in="context.srcip.toString()"/>
								<string name="smac" in="context.srcmac.toString()"/>				
								<string name="dip" in="context.dstip.toString()"/>
								<string name="dmac" in="context.dstmac.toString()"/>
								<string name="dpid" in="context.dstdpid.toString()"/>
								<string name="inport" in="context.dstinport.toString()"/>
								<string name="outport"  in="context.dstoutport.toString()"/>
							</parameters>
						</function>
					</else>
				</if>					
			</else>
		</if>
	
	</function>
	<function name="InstallFlowStart">
		<parameters>
			<string name="sip"/>
			<string name="smac"/>
			<string name="dip"/>
			<string name="dmac"/>
			<string name="dpid"/>
			<string name="inport"/>
			<string name="outport"/>
		</parameters>
		<string name="modstrjson"/>
		<reference variable="modstrjson">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.inport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"11",
										"hasmask":"false",
										"srcip":"<%=context.sip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"12",
										"hasmask":"false",
										"dstip":"<%=context.dip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"4",
										"hasmask":"false",
										"srcmac":"<%=context.smac.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"3",
										"hasmask":"false",
										"dstmac":"<%=context.dmac.toString()%>"
									}
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.outport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>

		<string name="modstrjson2"/>
		<reference variable="modstrjson2">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.outport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"11",
										"hasmask":"false",
										"srcip":"<%=context.dip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"12",
										"hasmask":"false",
										"dstip":"<%=context.sip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"4",
										"hasmask":"false",
										"srcmac":"<%=context.dmac.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"3",
										"hasmask":"false",
										"dstmac":"<%=context.smac.toString()%>"
									}
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.inport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>


		<string name="resourceid2"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid2"/>
				<string name="strjson" in="context.modstrjson2.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid2.toString()" value="context.dpid.toString()"/>
			
		<string name="resourceid"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid"/>
				<string name="strjson" in="context.modstrjson.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid.toString()" value="context.dpid.toString()"/>

	</function>
	
	<function name="InstallFlowEnd">
		<parameters>
			<string name="sip"/>
			<string name="smac"/>
			<string name="dip"/>
			<string name="dmac"/>
			<string name="dpid"/>
			<string name="inport"/>
			<string name="outport"/>
		</parameters>
		<string name="modstrjson"/>
		<reference variable="modstrjson">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.inport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"11",
										"hasmask":"false",
										"srcip":"<%=context.sip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"12",
										"hasmask":"false",
										"dstip":"<%=context.dip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"4",
										"hasmask":"false",
										"srcmac":"<%=context.smac.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"3",
										"hasmask":"false",
										"dstmac":"<%=context.dip.toString()%>"
									}
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.outport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>
		
		<string name="modstrjson2"/>
		<reference variable="modstrjson2">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.outport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"11",
										"hasmask":"false",
										"srcip":"<%=context.dip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"12",
										"hasmask":"false",
										"dstip":"<%=context.sip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"4",
										"hasmask":"false",
										"srcmac":"<%=context.dmac.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"3",
										"hasmask":"false",
										"dstmac":"<%=context.smac.toString()%>"
									}
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.inport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>
		<string name="resourceid2"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid2"/>
				<string name="strjson" in="context.modstrjson2.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid2.toString()" value="context.dpid.toString()"/>
		
		
		<string name="resourceid"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid"/>
				<string name="strjson" in="context.modstrjson.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid.toString()" value="context.dpid.toString()"/>
	</function>
	
	<function name="InstallFlowMid">
		<parameters>
			<string name="sip" in="context.srcip.toString()"/>
			<string name="smac" in="context.srcmac.toString()"/>				
			<string name="dip" in="context.dstip.toString()"/>
			<string name="dmac" in="context.dstmac.toString()"/>
			<string name="dpid" in="context.srcdpid.toString()"/>
			<string name="inport" in="context.srcinport.toString()"/>
			<string name="outport"  in="context.srcoutport.toString()"/>
		</parameters>
		<string name="modstrjson"/>
		<reference variable="modstrjson">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.inport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"4",
										"hasmask":"false",
										"srcmac":"<%=context.smac.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"3",
										"hasmask":"false",
										"dstmac":"<%=context.dmac.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"5",
										"hasmask":"false",
										"ethtype":"0x0800"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"11",
										"hasmask":"false",
										"srcip":"<%=context.sip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"12",
										"hasmask":"false",
										"dstip":"<%=context.dip.toString()%>"
									}
									
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.outport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>
		
		<string name="modstrjson2"/>
		<reference variable="modstrjson2">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.outport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"4",
										"hasmask":"false",
										"srcmac":"<%=context.dmac.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"3",
										"hasmask":"false",
										"dstmac":"<%=context.smac.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"5",
										"hasmask":"false",
										"ethtype":"0x0800"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"11",
										"hasmask":"false",
										"srcip":"<%=context.dip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"12",
										"hasmask":"false",
										"dstip":"<%=context.sip.toString()%>"
									}
									
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.inport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>
		<string name="resourceid2"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid2"/>
				<string name="strjson" in="context.modstrjson2.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid2.toString()" value="context.dpid.toString()"/>
		
		
		<string name="resourceid"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid"/>
				<string name="strjson" in="context.modstrjson.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid.toString()" value="context.dpid.toString()"/>
	</function>
	<function name="InstallSWIREDFlowMid">
		<parameters>			
			<string name="dip" in="context.dstip.toString()"/>
			<string name="dmac" in="context.dstmac.toString()"/>
			<string name="dpid" in="context.srcdpid.toString()"/>
			<string name="inport" in="context.srcinport.toString()"/>
			<string name="outport"  in="context.dstinport.toString()"/>
		</parameters>
		<string name="modstrjson"/>
		<reference variable="modstrjson">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.inport.toString()%>"
									},									
									{
										"oxmclass":"0x8000",
										"oxmfield":"3",
										"hasmask":"false",
										"dstmac":"<%=context.dmac.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"5",
										"hasmask":"false",
										"ethtype":"0x0800"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"12",
										"hasmask":"false",
										"dstip":"<%=context.dip.toString()%>"
									}
									
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.outport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>
		
		<string name="modstrjson2"/>
		<reference variable="modstrjson2">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.outport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"4",
										"hasmask":"false",
										"srcmac":"<%=context.dmac.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"5",
										"hasmask":"false",
										"ethtype":"0x0800"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"11",
										"hasmask":"false",
										"srcip":"<%=context.dip.toString()%>"
									}
									
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.inport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>
		<string name="resourceid2"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid2"/>
				<string name="strjson" in="context.modstrjson2.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid2.toString()" value="context.dpid.toString()"/>
		
		
		<string name="resourceid"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid"/>
				<string name="strjson" in="context.modstrjson.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid.toString()" value="context.dpid.toString()"/>
	</function>
	
	<function name="InstallDWIREDFlowMid">
		<parameters>			
			<string name="sip" in="context.srcip.toString()"/>
			<string name="smac" in="context.srcmac.toString()"/>
			<string name="dpid" in="context.srcdpid.toString()"/>
			<string name="inport" in="context.srcinport.toString()"/>
			<string name="outport"  in="context.dstinport.toString()"/>
		</parameters>
		<string name="modstrjson"/>
		<reference variable="modstrjson">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.inport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"4",
										"hasmask":"false",
										"srcmac":"<%=context.smac.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"5",
										"hasmask":"false",
										"ethtype":"0x0800"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"11",
										"hasmask":"false",
										"srcip":"<%=context.sip.toString()%>"
									}
									
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.outport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>
		
		<string name="modstrjson2"/>
		<reference variable="modstrjson2">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.outport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"3",
										"hasmask":"false",
										"dstmac":"<%=context.smac.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"5",
										"hasmask":"false",
										"ethtype":"0x0800"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"12",
										"hasmask":"false",
										"dstip":"<%=context.sip.toString()%>"
									}
									
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.inport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>
		<string name="resourceid2"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid2"/>
				<string name="strjson" in="context.modstrjson2.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid2.toString()" value="context.dpid.toString()"/>
		
		
		<string name="resourceid"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid"/>
				<string name="strjson" in="context.modstrjson.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid.toString()" value="context.dpid.toString()"/>
	</function>
	
	<function name="InstallSWIREDFlowStart">
		<parameters>				
			<string name="dip" in="context.dstip.toString()"/>
			<string name="dmac" in="context.dstmac.toString()"/>
			<string name="dpid" in="context.srcdpid.toString()"/>
			<string name="inport" in="context.srcinport.toString()"/>
			<string name="outport"  in="context.srcoutport.toString()"/>
		</parameters>
		<string name="modstrjson"/>
		<reference variable="modstrjson">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.inport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"12",
										"hasmask":"false",
										"dstip":"<%=context.dip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"3",
										"hasmask":"false",
										"dstmac":"<%=context.dmac.toString()%>"
									}
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.outport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>

		<string name="modstrjson2"/>
		<reference variable="modstrjson2">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.outport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"11",
										"hasmask":"false",
										"srcip":"<%=context.dip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"4",
										"hasmask":"false",
										"srcmac":"<%=context.dmac.toString()%>"
									}
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.inport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>


		<string name="resourceid2"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid2"/>
				<string name="strjson" in="context.modstrjson2.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid2.toString()" value="context.dpid.toString()"/>
			
		<string name="resourceid"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid"/>
				<string name="strjson" in="context.modstrjson.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid.toString()" value="context.dpid.toString()"/>
	</function>
	
	<function name="InstallSWIREDFlowEnd">
		<parameters>			
			<string name="dip" in="context.dstip.toString()"/>
			<string name="dmac" in="context.dstmac.toString()"/>
			<string name="dpid" in="context.dstdpid.toString()"/>
			<string name="inport" in="context.dstinport.toString()"/>
			<string name="outport"  in="context.dstoutport.toString()"/>
		</parameters>
		<string name="modstrjson"/>
		<reference variable="modstrjson">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.inport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"12",
										"hasmask":"false",
										"dstip":"<%=context.dip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"3",
										"hasmask":"false",
										"dstmac":"<%=context.dmac.toString()%>"
									}
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.outport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>

		<string name="modstrjson2"/>
		<reference variable="modstrjson2">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.outport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"11",
										"hasmask":"false",
										"srcip":"<%=context.dip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"4",
										"hasmask":"false",
										"srcmac":"<%=context.dmac.toString()%>"
									}
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.inport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>


		<string name="resourceid2"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid2"/>
				<string name="strjson" in="context.modstrjson2.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid2.toString()" value="context.dpid.toString()"/>
			
		<string name="resourceid"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid"/>
				<string name="strjson" in="context.modstrjson.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid.toString()" value="context.dpid.toString()"/>
	</function>
	<function name="InstallDWIREDFlowStart">
		<parameters>				
			<string name="sip" in="context.srcip.toString()"/>
			<string name="smac" in="context.srcmac.toString()"/>
			<string name="dpid" in="context.srcdpid.toString()"/>
			<string name="inport" in="context.srcinport.toString()"/>
			<string name="outport"  in="context.srcoutport.toString()"/>
		</parameters>
		<string name="modstrjson"/>
		<reference variable="modstrjson">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.inport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"11",
										"hasmask":"false",
										"srcip":"<%=context.sip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"4",
										"hasmask":"false",
										"srcmac":"<%=context.smac.toString()%>"
									}
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.outport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>

		<string name="modstrjson2"/>
		<reference variable="modstrjson2">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.outport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"12",
										"hasmask":"false",
										"dstip":"<%=context.sip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"3",
										"hasmask":"false",
										"dstmac":"<%=context.smac.toString()%>"
									}
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.inport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>


		<string name="resourceid2"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid2"/>
				<string name="strjson" in="context.modstrjson2.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid2.toString()" value="context.dpid.toString()"/>
			
		<string name="resourceid"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid"/>
				<string name="strjson" in="context.modstrjson.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid.toString()" value="context.dpid.toString()"/>
	</function>
	
	<function name="InstallDWIREDFlowEnd">
		<parameters>			
			<string name="sip" in="context.srcip.toString()"/>
			<string name="smac" in="context.srcmac.toString()"/>
			<string name="dpid" in="context.dstdpid.toString()"/>
			<string name="inport" in="context.dstinport.toString()"/>
			<string name="outport"  in="context.dstoutport.toString()"/>
		</parameters>
		<string name="modstrjson"/>
		<reference variable="modstrjson">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.inport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"11",
										"hasmask":"false",
										"srcip":"<%=context.sip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"4",
										"hasmask":"false",
										"srcmac":"<%=context.smac.toString()%>"
									}
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.outport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>

		<string name="modstrjson2"/>
		<reference variable="modstrjson2">
			<jsonbody><![CDATA[ 
					{
						"deviceid":"of:<%=context.dpid.toString()%>",
						"cookie":"0",
						"cookiemask":"0",
						"tableid":"0",
						"command":"0",
						"idletimeout":"0",
						"hardtimeout":"0",
						"priority":"40000",
						"bufferid":"0xffffffff",
						"outport":"0xffffffff",
						"outgroup":"0xffffffff",
						"flags":"1",
						"match":{
								"type":"1",
								"matchfieldlist":[
									{
										"oxmclass":"0x8000",
										"oxmfield":"0",
										"hasmask":"false",
										"inport":"<%=context.outport.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"12",
										"hasmask":"false",
										"dstip":"<%=context.sip.toString()%>"
									},
									{
										"oxmclass":"0x8000",
										"oxmfield":"3",
										"hasmask":"false",
										"dstmac":"<%=context.smac.toString()%>"
									}
								]
							},
						"instructionlist":[
							{
								"type":"4",
								"actionlist":[
									{
										"type":"0",
										"outport":"<%=context.inport.toString()%>",
										"maxlen":"0xffff"
									}
								]
							}
						]
				    }
			]]></jsonbody>
		</reference>


		<string name="resourceid2"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid2"/>
				<string name="strjson" in="context.modstrjson2.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid2.toString()" value="context.dpid.toString()"/>
			
		<string name="resourceid"/>
		<if cond="context.flowservice==null">
			<then>
				<log>flowservice is null</log>
			</then>
		</if>
		<function name="InstallFlow" class="context.flowservice">
			<parameters>
				<string name="outflowid" out="context.resourceid"/>
				<string name="strjson" in="context.modstrjson.toString()"/>
				<string name="appId" in="'tunnelservice'"/>
				<string name="datapathid" in="context.dpid.toString()"/>
			</parameters>
		</function>
		<insert name="resourceid_hash" key="context.resourceid.toString()" value="context.dpid.toString()"/>
	</function>
	
	<function name="UninstalloneFlow">
		<parameters>
			<string name="flowid"/>
		</parameters>
		<pair name="oneflowid" keytype="string" valuetype="string"/>
			<for var="context.oneflowid" in="context.resourceid_hash">	
				<if cond="context.flowid == context.oneflowid.first().toString()">
					<then>
						<function name="UnInstallFlow" class="context.flowservice">
							<parameters>
								<string name="flowid" in="context.flowid.toString()"/>			
								<string name="datapathid" in="context.oneflowid.second().toString()"/>
							</parameters>
						</function>
					</then>
				</if>		
			</for>
	</function>
	
	<function name="UninstallALLFlow">
		<pair name="oneflowid" keytype="string" valuetype="string"/>
			<for var="context.oneflowid" in="context.resourceid_hash">				
				<function name="UnInstallFlow" class="context.flowservice">
					<parameters>
						<string name="flowid" in="context.oneflowid.first().toString()"/>			
						<string name="datapathid" in="context.oneflowid.second().toString()"/>
					</parameters>
				</function>
			</for>
	</function>
	
</starlang>
