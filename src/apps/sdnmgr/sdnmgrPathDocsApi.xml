<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (C) 2013-2016 Nanjing StarOS Technology Co., Ltd
	All rights reserved.
	
	@file 		tunnelServicePathDocsApi.xml
	@brief 		apiUI
	@version 	1.1.0
	@auth 		qiulei
	@date		2018/01/06

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<starlang xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">

	<function name="addPath_sdnmgr">
		<function name="postDevicePanel"/>
		<function name="postPolicyPanel"/>
		<function name="deleteDevicePanel"/>
		<function name="deletePolicyPanel"/>
		<function name="getPortsPanel"/>
	</function>

	<function name="removePath_sdnmgr">
		<function name="removePath" class="APIDocsService">
			<parameters>
				<string name="pathname" in="'/sdnmgr/device'"/>			
			</parameters>
		</function>
		
		<function name="removePath" class="APIDocsService">
			<parameters>
				<string name="pathname" in="'/sdnmgr/device/{ip}'"/>			
			</parameters>
		</function>
		<function name="removePath" class="APIDocsService">
			<parameters>
				<string name="pathname" in="'/sdnmgr/policy'"/>			
			</parameters>
		</function>
		<function name="removePath" class="APIDocsService">
			<parameters>
				<string name="pathname" in="'/sdnmgr/policy/{policyid}/{src-devidetype}/{src-devicerole}'"/>
			</parameters>
		</function>
		
		<function name="removePath" class="APIDocsService">
			<parameters>
				<string name="pathname" in="'/sdnmgr/ports/{deviceid}'"/>			
			</parameters>
		</function>

	</function>
	<!--
		@brief		get Ports
		@auth 		qiulei
		@date		2018/01/16
		Input:
		Output:
	-->	
	<function name="getPortsPanel">
		<string name="name"/>
		<string name="pathconntent"/>
		<reference variable="pathconntent">
			<jsonbody><![CDATA[ 
				{
					"get": {
						"tags": [
							"sdnmgr"
						],
						"summary": "Returns all Ports of device",
						"description": "",
						"parameters": [],
						"produces": [
							"application/json"
						],
						"responses": {
							"200": {
								"description": "successful operation",
								"schema": {
									"$ref": "#/definitions/Ports"
								}
							},
							"default": {
								"description": "Unexpected error"
							}
						}
					}
				}				
			]]></jsonbody>
		</reference>
		<set name="context.name" value="'/sdnmgr/ports/{deviceid}'"/>
		<function name="addPath" class="APIDocsService">
			<parameters>
				<string name="pathname" in="context.name.toString()"/>
				<string name="pathconntent" in="context.pathconntent.toString()"/>
			</parameters>
		</function>
	</function>

	<!--
		qiulei 2018/01/16 创建 device 面板
	-->	
	<function name="postDevicePanel">
		<string name="name"/>
		<string name="pathconntent"/>
		<reference variable="pathconntent">
			<jsonbody><![CDATA[ 
				{
					"post": {
						"tags": [
							"sdnmgr"
						],
						"summary": "Install a new Device",
						"description": "",
						"parameters": [
							{
								"name": "stream",
								"in": "body",
								"type": "string",
								"description": "Create a new Device",
								"required": true,
								"schema": {
									"$ref": "#/definitions/Device"
								}					
							}
						],
						"consumes": [
							"application/octet_stream"
						],
						"produces": [
							"application/json"
						],
						"responses": {
							"200": {
								"description": "successful operation",
								"schema": {
									"$ref": "#/definitions/Result"
								}
							},
							"default": {
								"description": "Unexpected error"
							}
						}
					}
				}
			]]></jsonbody>
		</reference>
		<set name="context.name" value="'/sdnmgr/device'"/>
		<function name="addPath" class="APIDocsService">
			<parameters>
				<string name="pathname" in="context.name.toString()"/>
				<string name="pathconntent" in="context.pathconntent.toString()"/>
			</parameters>
		</function>
	</function>
	<!--
		创建 policy 面板 2018/01/16 qiulei
	-->	
	<function name="postPolicyPanel">
		<string name="name"/>
		<string name="pathconntent"/>
		<reference variable="pathconntent">
			<jsonbody><![CDATA[ 
				{
					"post": {
						"tags": [
							"sdnmgr"
						],
						"summary": "Create a new Policy",
						"description": "",
						"parameters": [
							{
								"name": "stream",
								"in": "body",
								"type": "string",
								"description": "Create one policy",
								"required": true,
								"schema": {
									"$ref": "#/definitions/Policy"
								}					
							}
						],
						"consumes": [
							"application/octet_stream"
						],
						"produces": [
							"application/json"
						],
						"responses": {
							"200": {
								"description": "successful operation",
								"schema": {
									"$ref": "#/definitions/Result"
								}
							},
							"default": {
								"description": "Unexpected error"
							}
						}
					}
				}
			]]></jsonbody>
		</reference>
		<set name="context.name" value="'/sdnmgr/policy'"/>
		<function name="addPath" class="APIDocsService">
			<parameters>
				<string name="pathname" in="context.name.toString()"/>
				<string name="pathconntent" in="context.pathconntent.toString()"/>
			</parameters>
		</function>
	</function>
	
		<!--
		qiulei 20180116 删除 one device 面板
	-->	
	<function name="deleteDevicePanel">
		<string name="name"/>
		<string name="pathconntent"/>
		<reference variable="pathconntent">
			<jsonbody><![CDATA[ 
				{
					"delete": {
						"tags": [
							"sdnmgr"
						],
						"summary": "Removes one Device",
						"description": "",
						"parameters": [
							{
								"name": "ip",
								"in": "path",
								"type": "string",
								"description": "Delete one Device by ip",
								"required": "true"
							}
						],
						"responses": {
							"200": {
								"description": "successful operation",
								"schema": {
									"$ref": "#/definitions/Result"
								}
							},
							"default": {
								"description": "Unexpected error"
							}
						}
					}
				}
			]]></jsonbody>
		</reference>
		<set name="context.name" value="'/sdnmgr/device/{ip}'"/>
		<function name="addPath" class="APIDocsService">
			<parameters>
				<string name="pathname" in="context.name.toString()"/>
				<string name="pathconntent" in="context.pathconntent.toString()"/>
			</parameters>
		</function>
	</function>
	
		<!--
		qiulei 20180116 删除 policy 面板
	-->	
	<function name="deletePolicyPanel">
		<string name="name"/>
		<string name="pathconntent"/>
		<reference variable="pathconntent">
			<jsonbody><![CDATA[ 
				{
					"delete": {
						"tags": [
							"sdnmgr"
						],
						"summary": "Removes one Device",
						"description": "",
						"parameters": [
							{
								"name": "policyid",
								"in": "path",
								"type": "string",
								"description": "Delete one Policy by policyid",
								"required": "true"
							},
							{
								"name": "src-devidetype",
								"in": "path",
								"type": "string",
								"description": "Delete one Policy by src-devidetype",
								"required": "true"
							},
							{
								"name": "src-devicerole",
								"in": "path",
								"type": "string",
								"description": "Delete one Policy by src-devicerole",
								"required": "true"
							},
						],
						"responses": {
							"200": {
								"description": "successful operation",
								"schema": {
									"$ref": "#/definitions/Result"
								}
							},
							"default": {
								"description": "Unexpected error"
							}
						}
					}
				}
			]]></jsonbody>
		</reference>
		<set name="context.name" value="'/sdnmgr/policy/{policyid}/{src-devidetype}/{src-devicerole}'"/>
		<function name="addPath" class="APIDocsService">
			<parameters>
				<string name="pathname" in="context.name.toString()"/>
				<string name="pathconntent" in="context.pathconntent.toString()"/>
			</parameters>
		</function>
	</function>
</starlang>