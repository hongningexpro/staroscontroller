<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (C) 2013-2016 Nanjing StarOS Technology Co., Ltd
	All rights reserved.
	
	@file 		hostservice.xml
	@brief 		hostservice
	@version 	1.1.0
	@auth 		YXR
	@date		2018/1/8

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<starlang xmlns="http://www.staros.xyz/staros" scope="application">
	<object name="applicationmgr" value="global.ApplicationManager" reference="true"/>
	<object name="devicemgr" value="global.DeviceManager" reference="true"/>
	<object name="flowservice" value="global.FlowService" reference="true"/>
	<object name="meterservice" value="global.MeterService" reference="true"/>
	<object name="restfulservice" value="global.RestfulService" reference="true"/>
	<object name="toposervice" value="global.TopoService" reference="true"/>
	<object name="deviceservice" value="global.DeviceService" reference="true"/>
	<object name="vgatewaymanager" value="global.vGatewayManager" reference="true"/>
	<object name="hostmanager" value="global.HostManager" reference="true"/>
	<object name="tunnelmanager" value="global.TunnelManager" reference="true"/>
	<object name="globaltimer"/>	
	<hashmap name="hosthashmap" keytype="string" valuetype="object"/>
	<hashmap name="vgwhashmap" keytype="string" valuetype="object"/>
	<!--
		@brief		定时发送Arp至host
		@auth 		YangXR
		@date		2018/1/15
	-->
	<function name="SendARPtoHost">
		<boolean name="is_have" value="true" />				
		<object name="hostobj"/>
		<string name="hostip" />
		<string name="hostmac"/>
		<string name="payloadjson" />		
		<string name="hostport" />
		
		<object name="vgwobj" />
		<string name="vgwip"/>
		<string name="vgwmac" />
		
		<boolean name="is_true" value="false" />
		<string name="deviceid"/>
		<string name="transportid"/>
		<messageblock name="msgblock"/>
		
		<function name="Container_Is_Have" class="context.hostmanager">
			<parameters>
				<boolean name="is_null" out="context.is_have"/>
			</parameters>
		</function>
		<function name="Container_Is_Have" class="context.vgatewaymanager">
			<parameters>
				<boolean name="is_null" out="context.is_have"/>
			</parameters>
		</function>
		<if cond="context.is_have.toBoolean()==false">
			<then>
				<exit/>
			</then>
		</if>
		<function name="Gethashmap" class="context.hostmanager">
			<parameters>
				<hashmap name="hhashmap" out="context.hosthashmap"/>
			</parameters>
		</function>
		<function name="Gethashmap" class="context.vgatewaymanager">
			<parameters>
				<hashmap name="vhashmap" out="context.vgwhashmap"/>
			</parameters>
		</function>
		<pair name="onehost" keytype="string" valuetype="object"/>
		<pair name="onevgw" keytype="string" valuetype="object"/>
		<for var="context.onehost" in="context.hosthashmap">
			<set name="context.hostobj" value="context.onehost.second()"/>
			<function name="GetHostIP" class="context.hostobj">
				<parameters>
					<string name="hostid" out="context.hostip"/>
				</parameters>
			</function>
			<for var="context.onevgw" in="context.vgwhashmap">
				<set name="context.vgwobj" value="context.onevgw.second()"/>
				<function name="Is_HaveGateway" class="context.vgatewaymanager">
					<parameters>
						<string name="ip" in="context.hostip.toString()"/>
						<boolean name="is_have" out="context.is_true"/>
						<string name="outvmac" out="context.vgwmac"/>
						<string name="outip" out="context.vgwip"/>
					</parameters>
				</function>
				<if cond="context.is_true.toBoolean()==true">
					<then>
						<syslog level="INFO">^^^^join in true path^^^^^</syslog>
						<function name="GetHostPKjson" class="context.hostobj">
							<parameters>
								<string name="payloadjson" out="context.payloadjson"/>
							</parameters>
						</function>
						<function name="GetHostMac" class="context.hostobj">
							<parameters>
								<string name="hostmac" out="context.hostmac"/>
							</parameters>
						</function>
						<function name="GetHostInPort" class="context.hostobj">
							<parameters>
								<string name="port" out="context.hostport"/>
							</parameters>
						</function>
						<function name="Getdpid" class="context.hostobj">
							<parameters>
								<string name="dpid" out="context.deviceid"/>
							</parameters>
						</function>
						<function name="GetTransPortId" class="context.hostobj">
							<parameters>
								<string name="transportid" out="context.transportid"/>
							</parameters>
						</function>
						<script><![CDATA[
							var dpid = context.deviceid.toString();
							dpid = dpid.split(":")[1];
							var pljson = JSON.parse(context.payloadjson.toString());
							pljson.dmac = "ff:ff:ff:ff:ff:ff";
							pljson.smac = context.vgwmac.toString();
							pljson.ethernetpayload.senderhardwareaddress = context.vgwmac.toString();
							pljson.ethernetpayload.targethardwareaddress = "00:00:00:00:00:00";					
							pljson.ethernetpayload.senderprotocoladdress = context.vgwip.toString();
							pljson.ethernetpayload.targetprotocoladdress = context.hostip.toString();
							pljson.ethernetpayload.opcode = "1";
							var strjson=JSON.stringify(pljson);
							context.payloadjson.setValue(strjson);
							context.deviceid.setValue(dpid);
						]]></script>	
						<syslog level="INFO"><![CDATA[json = <%=context.payloadjson.toString()%>]]></syslog>
						<syslog level="INFO"><![CDATA[outputport = <%=context.hostport.toString()%>]]></syslog>
						<syslog level="INFO"><![CDATA[datapathid = <%=context.deviceid.toString()%>]]></syslog>
						
						<!--
						<function name="PacketOutToPort" class="context.devicemgr">
							<parameters>
								<string name="outputport" in="context.hostport.toString()"/>
								<string name="pkoutjson" in="context.payloadjson.toString()"/>
								<messageblock name="msgblock" in="context.msgblock"/>
								<string name="inportid" in="''"/>
								<string name="datapathid" in="context.deviceid.toString()"/>
							</parameters>
						</function>
						-->
						<function name="SendArp" class="context.hostmanager">
							<parameters>
								<string name="outputport" in="context.hostport.toString()"/>
								<string name="payloadjson" in="context.payloadjson.toString()"/>
								<string name="transportid" in="context.transportid.toString()"/>
								<messageblock name="msgblock" in="context.msgblock"/>
							</parameters>
						</function>
						<syslog level="INFO">###############PK end</syslog>
					</then>		
					<else>
						<exit/>
					</else>
				</if>
			</for>	
		</for>
	</function>
	<events>
		<onevent event="bundleapp.startup">			
			<function name="RegistApplication" class="context.applicationmgr">
				<parameters>
					<string name="id" in="'hostservice'"/>
					<string name="version" in="'1.0.0'"/>
					<string name="category" in="'starosapp'"/>
					<string name="origin" in="'Nanjing StarOS Inc.'"/>
					<string name="title" in="'app for hostservice'"/>
					<string name="desc" in="'2.10.10.0'"/>		
					<string name="url" in="'192.168.80.10'"/>
					<long name="bundleid" in="context.getCurrentBundleId()"/>
				</parameters>
			</function>			

			<syslog level="INFO">vgatway app startup</syslog>	
					
			
		</onevent>	
		
		<onevent event="TimeOutEvent">
			<function name="SendARPtoHost"/>
		</onevent>
		
		<onevent event="bundleapp.active">
			<long name="tunnelsize"/>
			<!--
			<function name="getTunnelNum" class="context.tunnelmanager">
				<parameters>
					<long name="size" out="context.tunnelsize"/>
				</parameters>
			</function>
			
			<if cond="context.tunnelsize.toLong()==0">
				<exit/>
			</if>
			-->
			<function name="addProcessor" class="PacketService">				
				<parameters>
					<string name="app_name" in="'hostservice'"/>
					<string name="event_name" in="'PacketInEvent'"/>					
					<string name="eth_type" in="'0x0800'"/>					
				</parameters>
			</function>
			<string name="eventname"/>
			<set name="eventname"  value="'TimeOutEvent'"/>
			<!--启动SendARP定时器-->
			<timer name="context.globaltimer" method="StartTimer" event="'TimeOutEvent'" timeout="2000"/>
		</onevent>
		
		<onevent event="~bundleapp.deactive">
			<function name="removeProcessor" class="PacketService">				
				<parameters>
					<string name="app_name" in="'hostservice'"/>									
				</parameters>
			</function>
			<!--关闭SendARP定时器-->
			<timer name="context.globaltimer" method="StopTimer"/>
		</onevent>
		
		<onevent event="~bundleapp.shutdown">

		</onevent>

		<onevent event="*">
			<function>
			<log level="1"><![CDATA[ invalid event <%=event.getName().toString()%>]]> </log>
			<log level="1"><![CDATA[ invalid param <%=event.getParam("eventdata").toString()%>]]> </log>
			</function>
		</onevent>
	</events>
</starlang>