<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (C) 2013-2016 Nanjing StarOS Technology Co., Ltd
	All rights reserved.
	
	@file 		openflow_multipart_meter.xml
	@brief 		openflow multipart meter
	@version 	1.1.0
	@auth 		Wang Kang (kingsalone@sina.com)
	@date		2017/11/27

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<starlang xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	<!--
		@brief 		the request of openflow multipart meter
		@auth 		Wang Kang (kingsalone@sina.com)
		@date		2017/11/27
	-->
	<function name="OpenFlowMultiPartMeterRequest">
		<parameters>
			<long name="xid" />
		</parameters>
		<log>OpenFlowMultiPartMeterRequest</log>
		<string name="strjson"/>
		<reference variable="strjson">
			<jsonbody><![CDATA[ 
					{
						"xid":"<%=context.xid.toLong()%>",
						"flags":"0",
						"meterid":"0xffffffff"
					}
			]]></jsonbody>
		</reference>
		<function name="Send_OFPT13_MULTIPART_REQUEST.OFP13MP_METER">
			<parameters>
				<string name="transportid"  in="event.getParam('transportid').toString()"/>
				<string name="strjson"  in="context.strjson.toString()"/>
			</parameters>
		</function>
	</function>
	<!--
		@brief 		the reply of openflow multipart meter
		@auth 		Wang Kang (kingsalone@sina.com)
		@date		2017/11/27
	-->
	<function name="OpenFlowMultiPartMeterReply">
		<parameters>
			<long name="xid" />
		</parameters>
		<log>OpenFlowMultiPartMeterReply</log>
		<string name="strjson"/>
		<reference variable="strjson">
			<jsonbody><![CDATA[ 
				{
					"flags" : "0",
					"meterstatslist" : [
						{
							"meterid":"1",
							"flowcount":"2",
							"packetincount":"2",
							"byteincount":"1",
							"durationsec":"1",
							"durationnsec":"1",
							"bandstatslist":[
								{
									"packetbandcount":"1",
									"bytebandcount":"2"
								},
								{
									"packetbandcount":"3",
									"bytebandcount":"4"
								}
							]
						}
					],
					"type" : "9",
					"xid":"<%=context.xid.toLong()%>"
				}
			]]></jsonbody>
		</reference>
		<function name="Send_OFPT13_MULTIPART_REPLY.OFP13MP_METER">
			<parameters>
				<string name="transportid"  in="event.getParam('transportid').toString()"/>
				<string name="strjson"  in="context.strjson.toString()"/>
			</parameters>
		</function>
	</function>
	<!--
		@brief 		the test request of openflow multipart meter
		@auth 		Wang Kang (kingsalone@sina.com)
		@date		2017/11/27
	-->
	<function name="TestOpenFlowMultiPartMeterRequest">
		<boolean name="isstop" value="true"/>
		<long name="xid"/>
		<set name="xid" value="context.openflowserverobj.ptr.getIncreaseXID()"/>
		<function>
			<function name="OpenFlowMultiPartMeterRequest">
			<parameters>
					<long name="xid"  in="context.xid.toLong()"/>
				</parameters>
			</function>
			<wait event="openflow.OFPT13_MULTIPART_REPLY.OFP13MP_METER,openflow.OFPT13_ERROR" transportid="event.getParam('transportid').toString()" xid="context.xid.toLong()">
				<function>
					<log><![CDATA[OFPT13_MULTIPART_REPLY.OFP13MP_METER=<%=event.getParam('eventdata').toString()%>]]></log>
				</function>
			</wait>
		</function>
	</function>
	<!--
		@brief 		the test reply of openflow multipart meter
		@auth 		Wang Kang (kingsalone@sina.com)
		@date		2017/11/27
	-->
	<function name="TestOpenFlowMultiPartMeterReply">
		<long name="xid" />
		<set name="xid" value="context.openflowserverobj.ptr.getIncreaseXID()"/>
		<function>
			<function name="OpenFlowMultiPartMeterReply">
				<parameters>
					<long name="xid"  in="context.xid.toLong()"/>
				</parameters>
			</function>
		</function>
	</function>
</starlang>