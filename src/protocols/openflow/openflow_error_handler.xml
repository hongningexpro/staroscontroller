<?xml version="1.0" encoding="UTF-8"?>
<starosxml xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	
	<!-- wangkang 2017/09/01 
		1.Get a Error Message and JSON parse,Find MessageType and Cookie
		2.Find the appropriate device according to TransportID
		3.Get FlowManager from device
		4.Find the appropriate Flowentry according to Cookie
		5.Set Message State from Flowentry
	-->
	<function name="ErrorHandleFlowMod">
		<variable name="flowentryobj" type="class"/>
		<variable name="deviceobj" type="class"/>
		<variable name="flowmgrobj" type="class"/>
		<variable name="flowcookie" type="string"/>
		<script><![CDATA[
				var info = JSON.parse(event.getParam('eventdata').toString());
				if(info.body)
				{
					context.flowcookie.setValue(info.body.cookie);
				}
		]]></script>

		<log><![CDATA[flowcookie=<%=context.flowcookie.toString()%>]]></log>
		<log><![CDATA[transportid=<%=event.getParam('transportid').toString()%>]]></log>
		<log>##### MessageType is 14 #####</log>
		<function name="GetDeviceByTransportId" class="DeviceManager">
			<parameters>
				<parameter name="transportid" type="string" in="event.getParam('transportid').toString()"/>
				<parameter name="onedeviceobj" type="class" out="context.deviceobj"/>
			</parameters>
		</function>
		<if cond="context.deviceobj != null">
			<then>
				<log>##### Deviceobj is not null #####</log>
				<function name="GetFlowManager" class="context.deviceobj">
					<parameters>
						<parameter name="outflowmgr" type="class" out="context.flowmgrobj"/>
					</parameters>
				</function>
				<if cond="context.flowmgrobj!=null">
					<then>
						<log>##### Flowmgrobj is not null #####</log>
						<function name="FindFlow" class="context.flowmgrobj">
							<parameters>
								<parameter name="incookie" type="string" in="context.flowcookie.toString()"/>
								<parameter name="outflowentry" type="class" out="context.flowentryobj"/>
							</parameters>
						</function>
						<if cond="context.flowentryobj != null">											
							<then>
								<log>##### Flowentryobj is not null #####</log>
								<function name="SetState" class="context.flowentryobj">												
									<parameters>
										<parameter name="inmodstate" type="string" in="'Peeding'"/>
									</parameters>	
								</function>
							</then>
						</if>
					</then>
				</if>
			</then>
		</if>
	</function>
	
	<!-- wangkang 2017/09/06
		1.Get a Error Message and JSON parse,Find MessageType and GroupId
		2.Find the appropriate device according to TransportID
		3.Get GroupManager from device
		4.Find the appropriate Group according to GroupId
		5.Set Message State from Group
	-->
	<function name="ErrorHandleGroupMod">
		<variable name="groupobj" type="class"/>
		<variable name="deviceobj" type="class"/>
		<variable name="groupmgrobj" type="class"/>
		<variable name="groupid" type="string"/>
		<script><![CDATA[
				var info = JSON.parse(event.getParam('eventdata').toString());
				if(info.body)
				{
					context.groupid.setValue(info.body.groupid);
				}
		]]></script>

		<log><![CDATA[groupid=<%=context.groupid.toString()%>]]></log>
		<log><![CDATA[transportid=<%=event.getParam('transportid').toString()%>]]></log>
		<log>##### MessageType is 15 #####</log>
		<function name="GetDeviceByTransportId" class="DeviceManager">
			<parameters>
				<parameter name="transportid" type="string" in="event.getParam('transportid').toString()"/>
				<parameter name="onedeviceobj" type="class" out="context.deviceobj"/>
			</parameters>
		</function>
		<if cond="context.deviceobj != null">
			<then>
				<log>##### Deviceobj is not null #####</log>
				<function name="GetGroupManager" class="context.deviceobj">
					<parameters>
						<parameter name="outgroupmgr" type="class" out="context.groupmgrobj"/>
					</parameters>
				</function>
				<if cond="context.groupmgrobj!=null">
					<then>
						<log>##### groupmgrobj is not null #####</log>
						<function name="FindGroup" class="context.groupmgrobj">
							<parameters>
								<parameter name="ingroupid" type="string" in="context.groupid.toString()"/>
								<parameter name="outgroup" type="class" out="context.groupobj"/>
							</parameters>
						</function>
						<if cond="context.groupobj != null">											
							<then>
								<log>##### groupobj is not null #####</log>
								<function name="SetState" class="context.groupobj">												
									<parameters>
										<parameter name="inmodstate" type="string" in="'Peeding'"/>
									</parameters>	
								</function>
							</then>
						</if>
					</then>
				</if>
			</then>
		</if>
	</function>
	
	<!-- wangkang 2017/09/07
		1.Get a Error Message and JSON parse,Find MessageType and MeterId
		2.Find the appropriate device according to TransportID
		3.Get MeterManager from device
		4.Find the appropriate Meter according to MeterId
		5.Set Message State from Meter
	-->
	<function name="ErrorHandleMeterMod">
		<variable name="meterobj" type="class"/>
		<variable name="deviceobj" type="class"/>
		<variable name="metermgrobj" type="class"/>
		<variable name="meterid" type="long"/>
		<variable name="tmpmeterid" type="string"/>
		<script><![CDATA[
				var info = JSON.parse(event.getParam('eventdata').toString());
				if(info.body)
				{
					context.tmpmeterid.setValue(info.body.meterid);
				}
		]]></script>
		<set name="meterid" value="context.tmpmeterid.toLong()"/>
		
		<log><![CDATA[meterid=<%=context.meterid.toLong()%>]]></log>
		<log><![CDATA[transportid=<%=event.getParam('transportid').toString()%>]]></log>
		<log>##### MessageType is 29 #####</log>
		<function name="GetDeviceByTransportId" class="DeviceManager">
			<parameters>
				<parameter name="transportid" type="string" in="event.getParam('transportid').toString()"/>
				<parameter name="onedeviceobj" type="class" out="context.deviceobj"/>
			</parameters>
		</function>
		<if cond="context.deviceobj != null">
			<then>
				<log>##### Deviceobj is not null #####</log>
				<function name="GetMeterManager" class="context.deviceobj">
					<parameters>
						<parameter name="outmetermgr" type="class" out="context.metermgrobj"/>
					</parameters>
				</function>
				<if cond="context.metermgrobj!=null">
					<then>
						<log>##### metermgrobj is not null #####</log>
						<function name="FindMeter" class="context.metermgrobj">
							<parameters>
								<parameter name="inmeterid" type="long" in="context.meterid.toLong()"/>
								<parameter name="outmeter" type="class" out="context.meterobj"/>
							</parameters>
						</function>
						<if cond="context.meterobj != null">											
							<then>
								<log>##### meterobj is not null #####</log>
								<function name="SetState" class="context.meterobj">												
									<parameters>
										<parameter name="inmodstate" type="string" in="'Peeding'"/>
									</parameters>	
								</function>
							</then>
						</if>
					</then>
				</if>
			</then>
		</if>
	</function>


</starosxml>