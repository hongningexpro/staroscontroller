<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (C) 2013-2016 Nanjing StarOS Technology Co., Ltd
	All rights reserved.
	
	@file 		CSSHDevice.xml
	@brief 		delete device's flow
	@version 	1.1.0
	@auth 		YY
	@date		2017/11/14

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<starlang xmlns="http://www.staros.xyz/starcore" scope="application">
	<class name="CSSHDevice">
		<private>
			<object name="sshobj"/>
		</private>
		<public>
			<!--
				@brief		删除V150设备流表
				@auth 		YY
				@date		2017/11/14
				Input:
					@param ip 	设备的peeripaddr
				Output:
			-->	
			<function name="ClearFlow_v150">
				<parameters>
					<string name="ip"/>
				</parameters>
				<log level="10">CSSHDevice ClearFlow_v150</log>
				<string name="local_ip"/>
				<script><![CDATA[
					context.ip.toString().indexOf(":") != -1 ? context.local_ip.setValue(context.ip.toString().split(":")[0]) : context.local_ip.setValue(context.ip.toString())					
					context.print("CSSHDevice ip = " + context.ip.toString())
					context.print("CSSHDevice local_ip = " + context.local_ip.toString())
				]]></script>	

				<log level="100"><![CDATA[!!!!!!!!!!!!!ip= <%=context.local_ip.toString()%>]]> </log>		

				<params name="clientparams"/>
				<set name="clientparams" paramname="password" value="'TESTSDN12345678'"/>
				<set name="clientparams" paramname="username" value="'SDNTEST'"/>
				<set name="clientparams" paramname="keyFile" value="'/opt/staros.xyz/staros/system/keyfile.pem'"/>
				<set name="clientparams" paramname="keepalive" value="'disable'"/>
				<set name="clientparams" paramname="listenip" value="context.local_ip.toString()"/>
				<set name="clientparams" paramname="listenport" value="'22'"/>
				<ssh name="thisclass.sshobj" action="StartClient" params="clientparams" connectedevent="SSH_v150.connected"  dataevent="SSH_v150.dataevent"/>
			</function>
			<onevent event="SSH_v150.connected">
					<function>
							<log level="100">SSH_v150.connected event</log>
							<log level="100"><![CDATA[transportid= <%=event.getParam("transportid").toString()%>]]> </log>
							<ssh name="thisclass.sshobj" action="SendData" transportid="event.getParam('transportid').toString()">
									<applicationdata>
											<![CDATA[ovs-ofctl  dump-flows br0 -O openflow13
											ovs-ofctl  del-flows br0 -O openflow13
											]]>
									</applicationdata>
							</ssh>
							<log level="100">SSH_v150.connected is end</log>
					</function>
			</onevent>
			<!--
				@brief		删除V580设备流表
				@auth 		YY
				@date		2017/11/14
				Input:
					@param ip 	设备的peeripaddr
				Output:
			-->	
			<function name="ClearFlow">
				<parameters>
					<string name="ip"/>
				</parameters>
				<string name="local_ip"/>
				<script><![CDATA[
					context.ip.toString().indexOf(":") != -1 ? context.local_ip.setValue(context.ip.toString().split(":")[0]) : context.local_ip.setValue(context.ip.toString())					
					context.print("CSSHDevice ip = " + context.ip.toString())
					context.print("CSSHDevice local_ip = " + context.local_ip.toString())
				]]></script>
				<params name="clientparams"/>
				<set name="clientparams" paramname="password" value="'TESTSDN12345678'"/>
				<set name="clientparams" paramname="username" value="'SDNTEST'"/>
				<set name="clientparams" paramname="keyFile" value="'/opt/staros.xyz/staros/system/keyfile.pem'"/>
				<set name="clientparams" paramname="keepalive" value="'disable'"/>
				<set name="clientparams" paramname="listenip" value="context.local_ip.toString()"/>
				<set name="clientparams" paramname="listenport" value="'22'"/>
				<ssh name="thisclass.sshobj" action="StartClient" params="clientparams" connectedevent="SSH.connected" dataevent="SSH.dataevent"/>
			</function>
			<onevent event="SSH.connected">
					<function>
							<log level="10">SSH.connected event</log>
							<log><![CDATA[transportid= <%=event.getParam("transportid").toString()%>]]> </log>
							<ssh name="thisclass.sshobj" action="SendData" transportid="event.getParam('transportid').toString()">
									<applicationdata>
											<![CDATA[enable
											]]>
									</applicationdata>
							</ssh>
					</function>
			</onevent>
			<onevent event="SSH_v150.dataevent">
			  <function>
			  </function>
			 </onevent>
			<onevent event="SSH.dataevent">
			  <function>
					<log level="10"><![CDATA[get a event '<%=event.getName()%>']]></log>
					<log level="10">SSH.dataevent rec a data</log>
					<log level="100"><![CDATA[eventdata <%=event.getParam("eventdata").toString()%>]]> </log>
					<if cond="event.getParam('eventdata').toString()=='Password:'">
						<then>
							<log level="10">SDNSwitch-1</log>
							<ssh name="thisclass.sshobj" action="SendData" transportid="event.getParam('transportid').toString()">
								<applicationdata><![CDATA[TESTSDN12345678
								]]></applicationdata>
							</ssh>
							<ssh name="thisclass.sshobj" action="SendData" transportid="event.getParam('transportid').toString()">
								<applicationdata><![CDATA[ovs-ofctl del-flows br0
								]]></applicationdata>
							</ssh>
						</then>
					</if>
			  </function>
			</onevent>
			<onevent event="*">
					<function>
					<log level="1"><![CDATA[ invalid event <%=event.getName()%>]]> </log>
					<log level="1"><![CDATA[ invalid param <%=event.getParam("eventdata").toString()%>]]> </log>
					</function>
			</onevent>
        </public>
	</class>
</starlang>