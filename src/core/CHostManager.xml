<?xml version="1.0" encoding="UTF-8"?>
<starosxml xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	<class name="CHost">
		<private>
			<variable name="m_mac" type="string"/>		
			<variable name="m_ip" type="string"/>	
			<variable name="m_vlan" type="string"/>
			<variable name="m_deviceid" type="string"/>	
			<variable name="m_port" type="string"/>
		</private>
		<public>
			<function name="CHost">
				<parameters>
					<parameter name="mac" type="string"/>		
					<parameter name="ip" type="string"/>	
					<parameter name="vlan" type="string"/>
					<parameter name="deviceid" type="string"/>	
					<parameter name="port" type="string"/>				
				</parameters>
					<set name="thisclass.m_mac" value="context.mac.toString()"/>
					<set name="thisclass.m_ip" value="context.ip.toString()"/>
					<set name="thisclass.m_vlan" value="context.vlan.toString()"/>
					<set name="thisclass.m_deviceid" value="context.deviceid.toString()"/>
					<set name="thisclass.m_port" value="context.port.toString()"/>
				
			</function>
			<function name="printhost">
				<log><![CDATA[m_mac <%=thisclass.m_mac.toString()%>]]></log>
				<log><![CDATA[m_ip <%=thisclass.m_ip.toString()%>]]></log>
				<log><![CDATA[m_vlan <%=thisclass.m_vlan.toString()%>]]> </log>
				<log><![CDATA[m_deviceid <%=thisclass.m_deviceid.toString()%>]]> </log>
				<log><![CDATA[m_port <%=thisclass.m_port.toString()%>]]></log>
			</function>
			<function name="ToString">
				<parameters>
					<parameter name="jsonstring" type="string" out="context.outjson"/>
				</parameters>
				<script><![CDATA[
						var onearray = new Object();
						onearray._iconid_type='hostIcon_endstation';
						onearray.id=thisclass.m_mac.toString()+"/"+thisclass.m_vlan.toString();
						onearray.mac=thisclass.m_mac.toString();
						onearray.vlan=thisclass.m_vlan.toString();
						onearray.ips=thisclass.m_ip.toString();
						onearray.location=thisclass.m_deviceid.toString()+"/"+thisclass.m_port.toString();
						var strjson=JSON.stringify(onearray);
						context.jsonstring.setValue(strjson);
					]]></script>
					</function>
		<function name="ToAddHost2Json">
				<parameters>
					<parameter name="strjson" type="string"/>
				</parameters>
				<variable name="addhostjson" type="string"/>
				<reference variable="addhostjson">
					<jsonbody>
						<![CDATA[
							{
								"event":"addHost",
								"payload":
								{
									"id":"<%=thisclass.m_mac.toString()+"/"+thisclass.m_vlan.toString()%>",
									"type":"endstation",
									"ingress":"<%=thisclass.m_mac.toString()+"/"+thisclass.m_vlan.toString()+"/"+thisclass.m_port.toString()+"-"+thisclass.m_deviceid.toString()+"/"+thisclass.m_port.toString()%>",
									"egress":"<%=thisclass.m_deviceid.toString()+"/"+thisclass.m_port.toString()+"-"+thisclass.m_mac.toString()+"/"+thisclass.m_vlan.toString()+"/"+thisclass.m_port.toString()%>",
									"cp":
									{
										"device":"<%=thisclass.m_deviceid.toString()%>",
										"port":<%=thisclass.m_port.toString()%>
									},
									"labels":
										[
											"<%=thisclass.m_ip.toString()%>",
											"<%=thisclass.m_mac.toString()%>"
										],
									"props":{},
									"metaUi":
									{
										"x":317.73021781939826,
										"y":199.57886255805693,
										"equivLoc":
										{
										"lng":-98.18860657853635,
										"lat":43.492555430485986
										}
									}
								}
							}	
						]]>
					</jsonbody>
				</reference>
				<set name="strjson" value="context.addhostjson.toString()"/>
				
			</function>
		</public>
	</class>
	<class name="CHostManager">
		<private>
			<container name="hostContainer" type="hashmap" keytype="string" valuetype="class"/>
		</private>
		<public>
			<function name="CHostManager">
				<log>CHostManager is create</log>				
			</function>
			<function name="addHost">
				<parameters>
					<parameter name="mac" type="string"/>		
					<parameter name="ip" type="string"/>	
					<parameter name="vlan" type="string"/>
					<parameter name="deviceid" type="string"/>	
					<parameter name="port" type="string"/>				
				</parameters>
				<variable name="hostobj" type="class"/>	
				<new name="hostobj" class="CHost">
					<parameters>
						<parameter name="mac" type="string" in="context.mac.toString()"/>		
						<parameter name="ip" type="string" in="context.ip.toString()"/>	
						<parameter name="vlan" type="string" in="context.vlan.toString()"/>
						<parameter name="deviceid" type="string" in="context.deviceid.toString()"/>	
						<parameter name="port" type="string" in="context.port.toString()"/>				
				</parameters>
				</new>
				<if cond="context.hostContainer.hasValue(context.mac.toString()+'/'+context.vlan.toString())">
					<then>
						<exit/>
					</then>
				</if>
				<insert name="hostContainer" key="context.mac.toString()+'/'+context.vlan.toString()" value="context.hostobj"/>
			</function>

			<function name="printhostmanager">
				<variable name="onehostinfo" type="class"/>
				<container name="onehostpair" type="pair" keytype="string" valuetype="class"/>
				<for var="onehostpair" in="context.hostContainer">
					<function>
						<set name="onehostinfo" value="context.onehostpair.second()"/>
						<function name="printhost" class="context.onehostinfo"/>
					</function>
				</for>
			</function>
			<function name="GetHostJsonData">
				<parameters>
					<parameter name="jsonstring" type="string"/>
				</parameters>
				<variable name="outjson" type="string"/>
				<variable name="onehostinfo" type="class"/>
				<container name="hostlist" type="list" valuetype="string"/>
				<container name="onehostpair" type="pair" keytype="string" valuetype="class"/>
				<for var="onehostpair" in="context.hostContainer">
					<function>
						<set name="onehostinfo" value="context.onehostpair.second()"/>
						<function name="ToString" class="onehostinfo">
							<parameters>
								<parameter name="jsonstring" type="string" out="context.outjson"/>
							</parameters>
						</function>
						<insert name="hostlist" value="context.outjson.toString()"/>
					</function>
				</for>
				<script><![CDATA[
					var json = new Object();
					var myArray=new Array(); 
					var firststr=context.hostlist.getFirst();
					while(firststr!=null){
						var host = firststr;									
						var info = JSON.parse(host);	
						myArray.push(info);
						firststr=context.hostlist.getNext();
					}

					
					json['event']='hostDataResponse';	
					var payload = new Object();
					payload['hosts']=myArray;
					json['payload']=payload;
					
					var msg = new Object();
					msg["no_rows_msg"]="No Hosts found";
					info["annots"]=msg;
					
					var strjson=JSON.stringify(json);
					context.jsonstring.setValue(strjson);
				]]></script>
			</function>
		<function name="GetHostLinkJsonData">
				<parameters>
					<parameter name="key" type="string"/>
					<parameter name="insts" type="string"/>
					<parameter name="summary" type="string"/>
					<parameter name="detail" type="string"/>
					<parameter name="hosts" type="string"/>
					<parameter name="offdev" type="string"/>
					<parameter name="dlbls" type="string"/>
					<parameter name="porthl" type="string"/>
					<parameter name="bg" type="string"/>
					<parameter name="spr" type="string"/>
					<parameter name="ovid" type="string"/>
					<parameter name="toolbar" type="string"/>
					<parameter name="type" type="string"/>
					<parameter name="outjson" type="string"/>					
				</parameters>				
				<if cond="context.type.toString()==0">
					<then>
						<script><![CDATA[
							var json = new Object();
							json.event = "updatePrefs";
							var payload = new Object();
							var oneobject = new Object();
							oneobject.insts = context.insts.toString();
							oneobject.summary = context.summary.toString();
							oneobject.detail = context.detail.toString();
							oneobject.hosts = context.hosts.toString();
							oneobject.offdev = context.offdev.toString();
							oneobject.dlbls = context.dlbls.toString();
							oneobject.porthl = context.porthl.toString();
							oneobject.bg = context.bg.toString();
							oneobject.spr = context.spr.toString();
							oneobject.ovid = context.ovid.toString();
							oneobject.toolbar = context.toolbar.toString();
							/*
							var twoobject = new Object();
							twoobject.mapid = "usa";
							twoobject.mapscale = "1";
							twoobject.mapfilepath = "*continental_us";
							twoobject.tint = "off";
							*/
							/*
							var threeobject = new Object();
							threeobject.tx = 0;
							threeobject.ty = 0;
							threeobject.sc = 1;
							*/
							//var p_one = context.key.toString();
							payload.topo_prefs = oneobject;
							//payload[topo_mapid] = twoobject;
							//payload[topo_zoom] = threeobject;
							json.payload = payload;
							var strjson = JSON.stringify(json);
							context.outjson.setValue(strjson);							
						]]></script>
					</then>
					<else>
						<if cond="context.type.toString()==1">
							<then>
								<script><![CDATA[
									var json = new Object();
									json.event = "updatePrefs";
									var payload = new Object();
									var twoobject = new Object();
									twoobject.mapid = "usa";
									twoobject.mapscale = "1";
									twoobject.mapfilepath = "*continental_us";
									twoobject.tint = "off";
									payload.topo_mapid = twoobject;
									json.payload = payload;
									var strjson = JSON.stringify(json);
									context.outjson.setValue(strjson);									
								]]></script>
							</then>
							<else>
								<script><![CDATA[
									var json = new Object();
									json.event = "updatePrefs";
									var payload = new Object();
									var threeobject = new Object();
									threeobject.tx = 0;
									threeobject.ty = 0;
									threeobject.sc = 1;
									payload.topo_zoom = threeobject;
									json.payload = payload;
									var strjson = JSON.stringify(json);
									context.outjson.setValue(strjson);									
								]]></script>
							</else>
						</if>
					</else>
				</if>
			</function>
			<function name="SendAddAllHostToWebClient">
				<parameters>
					<parameter name="transportid" type="string"/>
				</parameters>
				<variable name="sendjsonstr" type="string"/>				
				<variable name="hostobj" type="class"/>	
				<container name="onehostpair" type="pair" keytype="string" valuetype="class"/>				
				<for var="onehostpair" in="context.hostContainer">
					<set name="hostobj" value="context.onehostpair.second()"/>
					<if cond="context.hostobj!=null">
						<then>
							<function name="ToAddHost2Json" class="hostobj">
								<parameters>
									<parameter name="strjson" type="string" out="context.sendjsonstr"/>
								</parameters>
							</function>
							<websocket name="restfulserver" method="SendText" transportid="context.transportid.toString()">
								<jsonsrc src="sendjsonstr"/>
							</websocket>
						</then>
					</if>										
					
				</for>				
			</function>
		</public>
	</class>
</starosxml>