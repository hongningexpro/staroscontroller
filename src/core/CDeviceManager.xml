<?xml version="1.0" encoding="UTF-8"?>
<starosxml xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	<class name="CDevice">
		<private>
			<variable name="m_mfrdesc" type="string"/>
			<variable name="m_swdesc" type="string"/>
			<variable name="m_serialnum" type="string"/>
			<variable name="m_dpdesc" type="string"/>
			<variable name="m_hwdesc" type="string"/>
			<variable name="m_transportid" type="string"/>
			<variable name="m_localipaddr" type="string"/>
			<variable name="m_peeripaddr" type="string"/>
			<variable name="m_masterid" type="string"/>
			<variable name="m_type" type="string"/>
			<variable name="m_online" type="string"/>
			<variable name="m_protocol" type="string"/>
			<variable name="m_auxiliaryid" type="string"/>
			<variable name="m_buffers" type="string"/>
			<variable name="m_capabilities" type="string"/>
			<variable name="m_datapathid" type="string"/>
			<variable name="m_tables" type="string"/>
		</private>
		<public>
			<function name="CDevice">
				<parameters>
					<parameter name="mfrdesc" type="string"/>
					<parameter name="swdesc" type="string"/>
					<parameter name="serialnum" type="string"/>
					<parameter name="dpdesc" type="string"/>
					<parameter name="hwdesc" type="string"/>
					<parameter name="transportid" type="string"/>
					<parameter name="datapathid" type="string"/>
					<parameter name="localipaddr" type="string"/>
					<parameter name="peeripaddr" type="string"/>
					<parameter name="masterid" type="string"/>	
					<parameter name="type" type="string"/>
					<parameter name="online" type="string"/>
					<parameter name="protocol" type="string"/>
				</parameters>
				<set name="thisclass.m_mfrdesc" value="context.mfrdesc.toString()"/>
				<set name="thisclass.m_swdesc" value="context.swdesc.toString()"/>
				<set name="thisclass.m_serialnum" value="context.serialnum.toString()"/>
				<set name="thisclass.m_dpdesc" value="context.dpdesc.toString()"/>
				<set name="thisclass.m_hwdesc" value="context.hwdesc.toString()"/>
				<set name="thisclass.m_transportid" value="context.transportid.toString()"/>
				<set name="thisclass.m_datapathid" value="context.datapathid.toString()"/>
				<set name="thisclass.m_localipaddr" value="context.localipaddr.toString()"/>
				<set name="thisclass.m_peeripaddr" value="context.peeripaddr.toString()"/>
				<set name="thisclass.m_masterid" value="context.masterid.toString()"/>
				<set name="thisclass.m_type" value="context.type.toString()"/>
				<set name="thisclass.m_online" value="context.online.toString()"/>
				<set name="thisclass.m_protocol" value="context.protocol.toString()"/>
				<log><![CDATA[m_mfrdesc=<%=thisclass.m_mfrdesc.toString()%>]]></log>
				<log><![CDATA[m_swdesc=<%=thisclass.m_swdesc.toString()%>]]></log>
				<log><![CDATA[m_serialnum=<%=thisclass.m_serialnum.toString()%>]]></log>
				<log><![CDATA[m_dpdesc=<%=thisclass.m_dpdesc.toString()%>]]></log>
				<log><![CDATA[m_hwdesc=<%=thisclass.m_hwdesc.toString()%>]]></log>
				<log><![CDATA[m_transportid=<%=thisclass.m_transportid.toString()%>]]></log>
				<log><![CDATA[m_datapathid=<%=thisclass.m_datapathid.toString()%>]]></log>
				<log><![CDATA[m_localipaddr=<%=thisclass.m_localipaddr.toString()%>]]></log>
				<log><![CDATA[m_peeripaddr=<%=thisclass.m_peeripaddr.toString()%>]]></log>
				<log><![CDATA[m_masterid=<%=thisclass.m_masterid.toString()%>]]></log>
				<log><![CDATA[m_type=<%=thisclass.m_type.toString()%>]]></log>
				<log><![CDATA[m_online=<%=thisclass.m_online.toString()%>]]></log>
			</function>
			<function name="GetDatapathId">
				<parameters>
					<parameter name="outdatapathid" type="string"/>
				</parameters>
				<log><![CDATA[GetDatapathId m_datapathid=<%=thisclass.m_datapathid.toString()%>]]></log>
				<set name="outdatapathid" value="thisclass.m_datapathid.toString()"/>
			</function>
			<function name="GetTransportId">
				<parameters>
					<parameter name="outtransport" type="string"/>
				</parameters>
				<variable name="onlinejson" type="string" value="'test'"/>
				<set name="outtransport" value="thisclass.m_transportid.toString()"/>
			</function>
			<function name="GetDeviceInfoJson">
				<parameters>
					<parameter name="strjson" type="string"/>
				</parameters>
				<variable name="deviceinfojson" type="string"/>
				<script><![CDATA[
						var onearray = new Object();
						onearray.available='true';
						onearray._iconid_available='active';
						onearray.name="of:"+thisclass.m_datapathid.toString();
						onearray.id="of:"+thisclass.m_datapathid.toString();
						onearray.masterid=thisclass.m_masterid.toString();
						onearray.num_ports=0;
						onearray.mfr=thisclass.m_mfrdesc.toString();
						onearray.hw=thisclass.m_hwdesc.toString();
						onearray.sw=thisclass.m_swdesc.toString();
						onearray.protocol=thisclass.m_protocol.toString();
						onearray.chassisid="";
						onearray.serial=thisclass.m_serialnum.toString();			
						var strjson = JSON.stringify(onearray);
						context.deviceinfojson.setValue(strjson);
				]]></script>
				<log><![CDATA[GetDeviceInfoJson deviceinfojson=<%=context.deviceinfojson.toString()%>]]></log>
				<set name="strjson" value="context.deviceinfojson.toString()"/>
			</function>
			<function name="ToOnlineJson">
				<parameters>
					<parameter name="strjson" type="string"/>
				</parameters>
				<variable name="onlinejson" type="string"/>
				<script><![CDATA[
						var json = new Object();
						json['event'] = "updateDevice";
						var payload = new Object();			
						payload['id'] = "of:" + thisclass.m_datapathid.toString();
						payload['type'] = thisclass.m_type.toString();
						payload['online'] = thisclass.m_online.toString();
						payload['master'] = thisclass.m_masterid.toString();
						var onearray = new Array();
						onearray.push("");
						onearray.push("of:" + thisclass.m_datapathid.toString());
						onearray.push("of:" + thisclass.m_datapathid.toString());
						payload['labels'] = onearray;
						var twoarray = new Object();
						twoarray['managementAddress'] = thisclass.m_localipaddr.toString();
						twoarray['protocol'] = thisclass.m_protocol.toString();
						twoarray['channelId'] = thisclass.m_peeripaddr.toString();
						payload['props'] = twoarray;
						var threearray = new Object();
						threearray['x'] = 0;
						threearray['y'] = 0;
						var three_one_array = new Object();
						three_one_array['lng'] = 0;
						three_one_array['lat'] = 0;
						threearray['equivLoc'] = three_one_array;
						payload['metaUi'] = threearray;
						json['payload'] = payload;			
						var strjson = JSON.stringify(json);
						context.onlinejson.setValue(strjson);
				]]></script>
				<set name="strjson" value="context.onlinejson.toString()"/>
			</function>
			<function name="ToOfflineJson">
				<parameters>
					<parameter name="strjson" type="string"/>
				</parameters>
				<variable name="offlinejson" type="string"/>
				<script><![CDATA[
						var json = new Object();
						json['event'] = "updateDevice";
						var payload = new Object();
						payload['id'] = "of:" + thisclass.m_datapathid.toString();
						payload['type'] = thisclass.m_type.toString();
						payload['online'] = "false";
						payload['master'] = thisclass.m_masterid.toString();
						var onearray = new Array();
						onearray.push("");
						onearray.push("of:" + thisclass.m_datapathid.toString());
						onearray.push("of:" + thisclass.m_datapathid.toString());
						payload['labels'] = onearray;
						
						var twoarray = new Object();
						twoarray['managementAddress'] = thisclass.m_localipaddr.toString();
						twoarray['protocol'] = "OF_13";
						twoarray['channelId'] = thisclass.m_peeripaddr.toString();
						payload['props'] = twoarray;
						
						var threearray = new Object();
						threearray['x'] = 0;
						threearray['y'] = 0;
						var three_one_array = new Object();
						three_one_array['lng'] = 0;
						three_one_array['lat'] = 0;
						threearray['equivLoc'] = three_one_array;
						payload['metaUi'] = threearray;
						json['payload'] = payload;
						
						var strjson = JSON.stringify(json);
						context.offlinejson.setValue(strjson);
				]]></script>
				<set name="strjson" value="context.offlinejson.toString()"/>
			</function>
			<function name="ToAddDeviceJson">
				<parameters>
					<parameter name="strjson" type="string"/>
				</parameters>
				<variable name="adddevicejson" type="string"/>
				<reference variable="adddevicejson">
					<jsonbody>
						<![CDATA[
							{
								"event":"addDevice",
								"payload":
								{
									"id":"of:<%=thisclass.m_datapathid.toString()%>",
									"type":"switch",
									"online":true,
									"master":"<%=thisclass.m_masterid.toString()%>",
									"labels":
										[
										"","of:<%=thisclass.m_datapathid.toString()%>",
										"of:<%=thisclass.m_datapathid.toString()%>"
										],
									"props":
										{
											"managementAddress":"<%=thisclass.m_localipaddr.toString()%>",
											"protocol":"OF_13",
											"channelId":"<%=thisclass.m_peeripaddr.toString()%>"
										},
									"metaUi":
									{
										"equivLoc":
											{
											"lng":-98.18860657853635,
											"lat":43.492555430485986
											}
									}
								}
							}	
						]]>
					</jsonbody>
				</reference>
				<set name="strjson" value="context.adddevicejson.toString()"/>
			</function>
		</public>
	</class>
	<class name="CDeviceManager">
		<private>
			<container name="deviceContainer" type="hashmap" keytype="string" valuetype="class"/>
		</private>
		
		<public>
			<function name="addDevice">
				<parameters>
					<parameter name="mfrdesc" type="string"/>
					<parameter name="swdesc" type="string"/>
					<parameter name="serialnum" type="string"/>
					<parameter name="dpdesc" type="string"/>
					<parameter name="hwdesc" type="string"/>
					<parameter name="transportid" type="string"/>
					<parameter name="datapathid" type="string"/>
					<parameter name="localipaddr" type="string"/>
					<parameter name="peeripaddr" type="string"/>
					<parameter name="masterid" type="string"/>	
					<parameter name="type" type="string"/>
					<parameter name="online" type="string"/>
					<parameter name="protocol" type="string"/>					
				</parameters>
				<variable name="deviceobject" type="class"/>
				<variable name="outtransid" type="string"/>
				<new name="deviceobject" class="CDevice">
					<parameters>
						<parameter name="mfrdesc" type="string" in="context.mfrdesc.toString()"/>
						<parameter name="swdesc" type="string" in="context.swdesc.toString()"/>
						<parameter name="serialnum" type="string" in="context.serialnum.toString()"/>
						<parameter name="dpdesc" type="string" in="context.dpdesc.toString()"/>
						<parameter name="hwdesc" type="string" in="context.hwdesc.toString()"/>
						<parameter name="transportid" type="string" in="context.transportid.toString()"/>
						<parameter name="datapathid" type="string" in="context.datapathid.toString()"/>
						<parameter name="localipaddr" type="string" in="context.localipaddr.toString()"/>
						<parameter name="peeripaddr" type="string" in="context.peeripaddr.toString()"/>
						<parameter name="masterid" type="string" in="context.masterid.toString()"/>		
						<parameter name="type" type="string" in="context.type.toString()"/>
						<parameter name="online" type="string" in="context.online.toString()"/>
						<parameter name="protocol" type="string" in="context.protocol.toString()"/>	
					</parameters>
				</new>
				<insert name="deviceContainer" key="context.datapathid.toString()" value="context.deviceobject"/>
				<variable name="onlinejson" type="string"/>
				<function name="ToOnlineJson" class="deviceobject">
					<parameters>
						<parameter name="strjson" type="string" out="onlinejson"/>
					</parameters>
				</function>
				<log><![CDATA[onlinejson =<%=context.onlinejson.toString()%>]]></log>
				<function name="SendToAllClient" class="WebSocketManager">
					<parameters>
						<parameter name="strjson" type="string" in="context.onlinejson.toString()"/>
					</parameters>
				</function>
				<function name="GetTransportId" class="deviceobject">
					<parameters>
						<parameter name="outtransport" type="string" out="outtransid"/>
					</parameters>
				</function>
				<log><![CDATA[addDevice outtransid =<%=context.outtransid.toString()%>]]></log>
			</function>
				
			<function name="findDevice">
				<parameters>
					<parameter name="datapathid" type="string"/>
					<parameter name="deviceobject" type="class"/>
				</parameters>
				<variable name="deviceinfo" type="class"/>
				<if cond="context.deviceContainer.hasValue(context.datapathid.toString())==true">
					<then>
						<function>
							<lookup name="deviceContainer" key="context.datapathid.toString()" output="context.deviceinfo"/>
						</function>
					</then>
				</if>
				<set name="deviceobject" value="context.deviceinfo"/>
			</function>
			
			<function name="removeDevice">
				<parameters>
					<parameter name="datapathid" type="string"/>
				</parameters>
				<log><![CDATA[removeDevice device size=<%=context.deviceContainer.size()%>]]></log>
				<variable name="deviceobject" type="class"/>
				<variable name="offlinejson" type="string"/>
				<if cond="context.deviceContainer.hasValue(context.datapathid.toString())==true">
					<then>
						<function>
							<lookup name="deviceContainer" key="context.datapathid.toString()" output="context.deviceobject"/>
							<function name="ToOfflineJson" class="deviceobject">
								<parameters>
									<parameter name="strjson" type="string" out="offlinejson"/>
								</parameters>
							</function>
							<function name="SendToAllClient" class="WebSocketManager">
								<parameters>
									<parameter name="strjson" type="string" in="context.offlinejson.toString()"/>
								</parameters>
							</function>
						</function>
					</then>
				</if>
			</function>
			<function name="GetTransportIdFromDevice">
				<parameters>
					<parameter name="datapathid" type="string"/>
					<parameter name="transportid" type="string"/>
				</parameters>
				<variable name="deviceinfo" type="class"/>
				<variable name="devicetransportid" type="string"/>
				<variable name="devicedatapathid" type="string"/>
				<for var="i" from="0" to="context.deviceContainer.size()-1">
					<function>
						<set name="deviceinfo" value="context.deviceContainer.getValueByIndex(context.i.toLong())"/>
						<function name="GetDatapathId" class="deviceinfo">
							<parameters>
								<parameter name="returndatapathid" type="string" out="devicedatapathid"/>
							</parameters>
						</function>
						<if cond="context.devicedatapathid.toString() == context.datapathid.toString()">
							<then>
								<function name="GetTransportId" class="deviceinfo">
									<parameters>
										<parameter name="returndatapathid" type="string" out="devicetransportid"/>
									</parameters>
								</function>
								<set name="transportid" value="context.devicetransportid.toString()"/>
								<exit/>
							</then>
						</if>
					</function>
				</for>
			</function>
			<function name="removeDeviceByTransportId">
				<parameters>
					<parameter name="transportid" type="string"/>
				</parameters>
				<variable name="deviceinfo" type="class"/>
				<variable name="devicetransportid" type="string"/>
				<variable name="devicedatapathid" type="string"/>
				<log><![CDATA[removeDeviceByTransportId device size=<%=context.deviceContainer.size()%>]]></log>
				<log><![CDATA[transportid=<%=context.transportid.toString()%>]]></log>
				<for var="i" from="0" to="context.deviceContainer.size()-1">
					<function>			
						<set name="deviceinfo" value="context.deviceContainer.getValueByIndex(context.i.toLong())"/>
						<function name="GetTransportId" class="deviceinfo">
							<parameters>
								<parameter name="outtransport" type="string" out="context.devicetransportid"/>
							</parameters>
						</function>
						<log><![CDATA[devicetransportid =<%=context.devicetransportid.toString()%>]]></log>
						<if cond="context.devicetransportid.toString() == context.transportid.toString()">
							<then>
								<function name="GetDatapathId" class="deviceinfo">
									<parameters>
										<parameter name="outdatapathid" type="string" out="context.devicedatapathid"/>
									</parameters>
								</function>
								<function name="removeDevice">
									<parameters>
										<parameter name="datapathid" type="string" in="context.devicedatapathid.toString()"/>
									</parameters>
								</function>
							</then>
						</if>
					</function>
				</for>
			</function>
			<function name="SendAddAllDeviceToWebClient">
				<parameters>
					<parameter name="transportid" type="string"/>
				</parameters>
				<variable name="jsonstr" type="string"/>
				<variable name="switchdevice" type="class"/>
				<for var="i" from="0" to="context.deviceContainer.size()-1">
					<log><![CDATA[SendAddAllDeviceToWebClient device size=<%=context.deviceContainer.size()%>]]></log>
					<function>
						<set name="switchdevice" value="context.deviceContainer.getValueByIndex(context.i.toLong())"/>
						<function name="ToAddDeviceJson" class="context.switchdevice">
							<parameters>
								<parameter name="strjson" type="string" out="jsonstr"/>
							</parameters>
						</function>
						<websocket name="restfulserver" method="SendText" transportid="context.transportid.toString()">
							<jsonsrc src="jsonstr"/>
						</websocket>
					</function>
				</for>
			</function>
			<function name="SendAddAllLinkToWebClient">
				<parameters>
					<parameter name="transportid" type="string"/>
				</parameters>
				<variable name="srcdevice" type="class"/>
				<variable name="dstdevice" type="class"/>
				<variable name="srcport" type="string"/>
				<variable name="srcdevicedpid" type="string"/>
				<variable name="dstdevicedpid" type="string"/>
				<variable name="dstport" type="string"/>
				<variable name="strlink" type="string" value=""/>
				<variable name="binvalidlink" type="string" value="false"/>
				<for var="i" from="0" to="context.deviceContainer.size()-1">
					<log><![CDATA[deviceLength=<%=context.deviceContainer.size()%>]]></log>
					<function>
						<set name="srcdevice" value="context.deviceContainer.getValueByIndex(context.i.toLong())"/>
						<function name="GetDatapathId" class="srcdevice">
							<parameters>
								<parameter name="outdatapathid" type="string" out="srcdevicedpid"/>
							</parameters>
						</function>
						<function>
							<for var="j" from="0" to="context.deviceContainer.size()-1">
								<set name="dstdevice" value="context.deviceContainer.getValueByIndex(context.j.toLong())"/>
								<function name="GetDatapathId" class="dstdevice">
									<parameters>
										<parameter name="outdatapathid" type="string" out="dstdevicedpid"/>
									</parameters>
								</function>
								<if cond="context.srcdevicedpid.toString()!=context.dstdevicedpid.toString()">
									<then>
										<function>
								<set name="strlink" value="context.openflowserverobj.getShortestPath(context.srcdevicedpid.toString(), context.dstdevicedpid.toString())"/>
								<log><![CDATA[strlink=<%=context.strlink.toString()%>]]></log>
					<script><![CDATA[
							if (context.strlink.toString().length>0)
							{
								var info = JSON.parse(context.strlink.toString());
								if (info.paths.length==1)
								{
									context.dstport.setValue(info.paths[0].dst.port);
									context.srcport.setValue(info.paths[0].src.port);
									context.binvalidlink.setValue('true');
								}
								else 
								{	
									context.binvalidlink.setValue('false');
								}
							}
							else 
							{
								context.binvalidlink.setValue('false');
							}
					]]></script>
									<function>
										<if cond="context.binvalidlink.toString()=='true'">
											<then>
												<function>
													<websocket name="restfulserver" method="SendText" transportid="context.transportid.toString()">
														<jsonbody>
										<![CDATA[
						{
						"event":"addLink","payload":
						{"id":"of:<%=context.srcdevicedpid.toString()%>/<%=context.srcport.toString()%>-of:<%=context.dstdevicedpid.toString()%>/<%=context.dstport.toString()%>",
						"type":"direct",
						"expected":false,
						"online":true,
						"linkWidth":1.2,
						"src":"of:<%=context.srcdevicedpid.toString()%>",
						"srcPort":"<%=context.srcport.toString()%>",
						"dst":"of:<%=context.dstdevicedpid.toString()%>",
						"dstPort":"<%=context.dstport.toString()%>"
						}
						}
										]]>
														</jsonbody>
													</websocket>
												</function>
											</then>
										</if>
									</function>
									</function>
									</then>
								</if>
							</for>
						</function>
					</function>
				</for>
			</function>
			<function name="SendDeviceInfoToWebClient">
				<parameters>
					<parameter name="transportid" type="string"/>
				</parameters>
				<variable name="jsonstr" type="string"/>
				<variable name="sendjsonstr" type="string"/>
				<variable name="switchdevice" type="class"/>
				<container name="deviceinfolist" type="list" valuetype="string"/>
				
				<log><![CDATA[SendDeviceInfoToWebClient devicesize=<%=context.deviceContainer.size()%>]]></log>
				<for var="i" from="0" to="context.deviceContainer.size()-1">
					<function>
						<set name="switchdevice" value="context.deviceContainer.getValueByIndex(context.i.toLong())"/>
						<function name="GetDeviceInfoJson" class="context.switchdevice">
							<parameters>
								<parameter name="strjson" type="string" out="jsonstr"/>
							</parameters>
						</function>
						<insert name="deviceinfolist" value="context.jsonstr.toString()"/>
					</function>
				</for>
				<script><![CDATA[
					var json = new Object();
					var myArray=new Array();  
					
					for(var i=0;i<context.deviceinfolist.size();i++)
					{									
						var onearray = JSON.parse(context.deviceinfolist.getValueByIndex(i));
						myArray.push(onearray);
					}
					json['event']='deviceDataResponse';
					
					var payload = new Object();
					payload['devices']=myArray;
					
					var annots = new Object();
					annots['no_rows_msg']='No devices found';
					payload['annots']=annots;
					json['payload']=payload;
					var strjson=JSON.stringify(json);
					context.sendjsonstr.setValue(strjson);
				]]></script>
				<log><![CDATA[SendDeviceInfoToWebClient transportid=<%=context.transportid.toString()%>]]></log>
				<log><![CDATA[SendDeviceInfoToWebClient sendjsonstr=<%=context.sendjsonstr.toString()%>]]></log>
				<websocket name="restfulserver" method="SendText" transportid="context.transportid.toString()">
					<jsonsrc src="sendjsonstr"/>
				</websocket>
			</function>
		</public>
	</class>
</starosxml>