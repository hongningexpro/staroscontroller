<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (C) 2013-2016 Nanjing StarOS Technology Co., Ltd
	All rights reserved.
	
	@file 		CGroupManager.xml
	@brief 		GroupManager
	@version 	1.1.0
	@auth 		hu peng (hupeng@staros.xyz)
	@date		2017/11/27

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<starlang xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	<string name="testresourceid"/>
	<class name="CGroupBucket">
		<private>
			<string name="m_packets" />
			<string name="m_bytes" />
			<string name="m_bucketjson"/>
		</private>
		<public>
			<function name="CGroupBucket">
				<parameters>
					<string name="bucketjson"/>
				</parameters>
				<set name="thisclass.m_bytes" value="'0'"/>
				<set name="thisclass.m_packets" value="'0'"/>
				<set name="thisclass.m_bucketjson" value="context.bucketjson.toString()"/>
			</function>
			<!--
				@brief		更新数据状态
				@auth 		hu peng (hupeng@staros.xyz)
				@date		2017/11/27
				Input:
				Output: 
			-->
			<function name="UpdateState">
				<parameters>
					<string name="packets" />
					<string name="bytes"/>
				</parameters>
				<set name="thisclass.m_packets" value="context.packets.toString()"/>
				<set name="thisclass.m_bytes" value="context.bytes.toString()"/>
			</function>
			<!--
				@brief		更改json数据
				@auth 		hu peng (hupeng@staros.xyz)
				@date		2017/11/27
				Input:
				Output: 
		
			-->
			<function name="ToJsonString">
				<parameters>
					<string name="jsonstring"/>
				</parameters>
				<script><![CDATA[
					var onebucket = JSON.parse(thisclass.m_bucketjson.toString());
					var jsonstrign='Bytes: '+thisclass.m_bytes.toString()+' Packets: '+thisclass.m_packets.toString()+' Actions: ';
					var straction="";
					if (onebucket.actions.length==0)
					{
						context.jsonstring.setValue("(No buckets for this group)");
					}
					else 
					{
						for (var j = 0; j < onebucket.actions.length; j++)
						{
							var oneaction = onebucket.actions[j];
							var key=global.actionsMap.getParam(oneaction.type).toString();
							var keyname=global.actionsNameMap.getParam(oneaction.type).toString();
							var actionvalue=oneaction[key];
							if (oneaction.type=='25')
							{
								if (global.matchfieldName.hasParam(actionvalue)==true)
								{
									var matchkeyname=global.matchfieldName.getParam(actionvalue).toString();
									var matchvalue_type = global.matchfieldMap.getParam(actionvalue).toString();
									var matchvalue = oneaction[matchvalue_type];
									if (oneaction.hasmask == "true")
									{
										var value_type_mask = matchvalue_type + "mask";
										if (oneaction[value_type_mask] != null)							
										{
											straction += keyname + ':' +matchvalue + '/' + oneaction[value_type_mask]+', ';
										}
									}
									else 
									{
										straction+=keyname+':' +matchvalue + ', ';
									}
								}
								straction+=keyname+':' +matchvalue + '/' + oneaction[value_type_mask]+', '
							}
							else 
							{
								straction+=keyname+':'+actionvalue+', ';
							}
						}
					}
					jsonstrign+=straction+"<br>";
					context.jsonstring.setValue(jsonstrign);				
				]]></script>
			</function>
			
			<function name="FetchStateFromJson">
				<parameters>
					<string name="groupjson"/>
				</parameters>
				<script><![CDATA[
					var info = JSON.parse(thisclass.groupjson.toString());
					thisclass.m_packets=info.packetcount;
					thisclass.m_bytes=info.bytecount;
				]]></script>
			</function>
		</public>
	</class>
	<class name="CGroup">
		<private>
			<string name="m_id" />
			<string name="m_appid" />
			<string name="m_state" />
			<string name="m_type" />
			<string name="m_packets" />
			<string name="m_bytes" />
			<string name="m_strjson" />
			<string name="m_duration_sec" />
			<string name="m_duration_nsec" />
			<string name="m_ref_count" />
			<list name="m_buckets"  valuetype="object"/>
		</private>
		<public>
			<function name="CGroup">
				<parameters>
					<string name="id" />
					<string name="appid" />
					<string name="groupjson" />
				</parameters>
				<set name="thisclass.m_id" value="context.id.toString()"/>
				<set name="thisclass.m_appid" value="context.appid.toString()"/>
				<set name="thisclass.m_strjson" value="context.groupjson.toString()"/>
				<set name="thisclass.m_state" value="'Added'"/>
				<set name="thisclass.m_packets" value="'0'"/>
				<set name="thisclass.m_bytes" value="'0'"/>
				<list name="strbucketlist"  valuetype="string"/>
				<object name="bucketobj" />
				<string name="strbucket" />
				<string name="strbucketlists"/>
				<script><![CDATA[
						var info = JSON.parse(thisclass.m_strjson.toString());
						thisclass.m_type.setValue(info.grouptype);
						if (info.bucketlist!=null)
						{
							for(var i=0;i<info.bucketlist.length;i++)
							{
								var onebucket = info.bucketlist[i];
								var strjson=JSON.stringify(onebucket);
								context.strbucketlist.addValue(strjson);
							}
						}
				]]></script>
				<for var="strbucketlists" in="context.strbucketlist">
					<function>
						<set name="strbucket" value="context.strbucketlists.toString()"/>
						 <new name="bucketobj" class="CGroupBucket">
							<parameters>
								<string name="bucketjson" in="context.strbucket.toString()"/>
							</parameters>
						</new>
						<insert name="m_buckets" value="context.bucketobj"/>
					</function>
				</for>
			</function>
			<!--
				@brief		把json更改成String
				@auth 		hu peng (hupeng@staros.xyz)
				@date		2017/11/27
				Input:
				Output: 
			-->
			<function name="GroupToJsonString">
				<parameters>
					<string name="groupjson"/>
				</parameters>
				<string name="outjson"/>
				<object name="bucketsobj" />
				<list name="bucketjsonlist"  valuetype="string"/>
				<object name="i" />
			
				<for var="i" in="context.m_buckets">
					<set name="bucketsobj" value="context.i"/>
					<if cond="context.bucketsobj.ptr==null">
						<then>
							<log>bucketsobj is null</log>
							<exit/>
						</then>
					</if>
					<function name="ToJsonString" class="bucketsobj">
						<parameters>
							<string name="jsonstring"  out="context.outjson"/>
						</parameters>
					</function>
					<insert name="bucketjsonlist" value="context.outjson.toString()"/>
				</for>
				<script><![CDATA[
					var flow = new Object();
					flow.id = thisclass.m_id.toString();
					flow.app_id = thisclass.m_appid.toString();
					flow.state = thisclass.m_state.toString();
					flow.packets = thisclass.m_packets.toString();
					flow.bytes = thisclass.m_bytes.toString();
					flow.type = thisclass.m_type.toString();
					var buckets=" ";
					var firstring = context.bucketjsonlist.getFirst();
					while(firstring != null)
					{
						buckets+=firstring;
						firstring=context.bucketjsonlist.getNext();
					}
					flow.buckets=buckets;
					var strjson=JSON.stringify(flow);
					context.groupjson.setValue(strjson);					
				]]></script>				

			</function>
			<!--
				@brief		从json中拿状态
				@auth 		hu peng (hupeng@staros.xyz)
				@date		2017/11/27
				Input:
				Output: 
			-->
			<function name="FetchStateFromJson">
				<parameters>
					<string name="groupjson"/>
				</parameters>
				<list name="bucketjsonlist"  valuetype="string"/>
				<object name="bucketsobj" />
				<string name="bucketstring" />
				<long name="i"  value="0"/>
				<script><![CDATA[
					var info = JSON.parse(thisclass.groupjson.toString());
					thisclass.m_ref_count=info.refcount;
					thisclass.m_packets=info.packetcount;
					thisclass.m_bytes=info.bytecount;
					thisclass.m_duration_sec=info.duretionsec;
					thisclass.m_duration_nsec=info.durationnsec;
					for(var i=0;i<info.bucketcounterlist.length;i++)
					{
						var onebucket = info.bucketcounterlist[i];
						context.bucketjsonlist.addValue(JSON.stringify(onebucket));
					}
				]]></script>
				<for var="bucketsobj" in="context.m_buckets">
					<function>
						<set name="bucketstring" value="context.bucketjsonlist.getValue(context.i.toLong())"/>
						<if cond="context.bucketsobj.ptr==null">
							<then>
								<log>bucketsobj is null</log>
								<exit/>
							</then>
						</if>
						<function name="FetchStateFromJson" class="bucketsobj">
							<parameters>
								<string name="jsonstring"  in="context.bucketstring.toString()"/>
							</parameters>
						</function>
						<set name="i" value="context.i.toLong()+1"/>
					</function>
				</for>
			</function>
			<!--
				@brief		Set group messages state
				@auth 		Wang Kang (kingsalone@sina.com)
				@date		2017/09/06
				Input:
					@param inmodstate  group message state
			-->
			<function name="SetState">
				<parameters>
					<string name="inmodstate" />
				</parameters>
				<set name="m_state" value="context.inmodstate.toString()"/>
			</function>
			
		</public>
	</class>
	<class name="CGroupManager">
		<private>
			<hashmap name="groupContainer"  keytype="string" valuetype="object"/>
			<string name="m_transportid" />
			<string name="m_testgroupid" />
			<string name="m_errorid" />
			<long name="m_groupid" />
		</private>
		<public>
			<function name="CGroupManager">
				<parameters>
					<string name="transportid"/>
				</parameters>
				<set name="thisclass.m_transportid" value="context.transportid.toString()"/>
				<!--set name="thisclass.m_testgroupid" value="'2'"/-->
				<set name="thisclass.m_groupid" value="0"/>
				<function name="testaddgroup"/>
				<function name="InstallErrorGroup"/>
			</function>
			<!--
				@brief		下载包请求
				@auth 		hu peng (hupeng@staros.xyz)
				@date		2017/11/27
				Input:
				Output: 
			-->	
			<function name="InstallGroupRequest">
				<parameters>
					<string name="in_strjson" />
					<string name="in_appid"  />
					<string name="in_groupid"  />
				</parameters>
				<long name="tmpgroupid" />
				<set name="tmpgroupid" value="thisclass.m_groupid.toLong()"/>
				<set name="in_groupid" value="context.tmpgroupid.toString()"/>
				<object name="groupobj" />
				<string name="outjson" />
				
				<script><![CDATA[
						var info = JSON.parse(context.in_strjson.toString());
						info.groupid=context.tmpgroupid.toString();
						var str_json=JSON.stringify(info);
						context.outjson.setValue(str_json);
				]]></script>
				
				<new name="groupobj" class="CGroup">
					<parameters>
						<string name="id"  in="context.in_groupid.toString()"/>
						<string name="appid"  in="context.in_appid.toString()"/>
						<string name="groupjson"  in="context.outjson.toString()"/>
					</parameters>
				</new>
				<insert name="groupContainer" key="context.in_groupid.toString()" value="context.groupobj"/>
				<set name="thisclass.m_groupid" value="thisclass.m_groupid.toLong()+1"/>
				<!--qiulei modify 20170807-->
				<function name="Send_OFPT13_GROUP_MOD">
					<parameters>
						<string name="transportid"  in="thisclass.m_transportid.toString()"/>
						<string name="strjson"  in="context.outjson.toString()"/>
					</parameters>
				</function>
			</function>
			<!--
				@brief		通过groupid卸载包请求
				@auth 		hu peng (hupeng@staros.xyz)
				@date		2017/11/27
				Input:
				Output: 
			-->	
			<function name="UnInstallGroupRequest">
				<parameters>
					<string name="groupid" />
				</parameters>
				<object name="jsongroup" />
				<string name="sendflowmodjson" />
				<string name="groupstring" />
				<if cond="context.groupContainer.hasValue(context.groupid.toString()) ==true">
					<then>
						<function>
							<lookup name="groupContainer" key="context.groupid.toString()" output="context.jsongroup"/>
						</function>
					</then>
					<else>
						<function>
							<log>UnInstallGroupRequest exit</log>
							<exit/>
						</function>
					</else>
				</if>
				<if cond="context.jsongroup.ptr != null">
					<then>
						<function name="GetGroupString" class="context.jsongroup">
							<parameters>
								<string name="outgroupstring"  out="context.groupstring"/>
							</parameters>
						</function>
						<script><![CDATA[
								var info = JSON.parse(context.groupstring.toString());
								info.command='2';
								var strjson=JSON.stringify(info);
								context.sendflowmodjson.setValue(strjson);
						]]></script>
						<function name="Send_OFPT13_GROUP_MOD">
							<parameters>
								<string name="transportid"  in="thisclass.m_transportid.toString()"/>
								<string name="strjson" in="context.sendflowmodjson.toString()"/>
							</parameters>
						</function>
					</then>
				</if>	
				<remove name="groupContainer" key="context.groupid.toString()"/>	
			</function>
			<!--
				OFPGT_ALL = 0, /* All (multicast/broadcast) group. */
				OFPGT_SELECT = 1, /* Select group. */
				OFPGT_INDIRECT = 2, /* Indirect group. */
				OFPGT_FF = 3, /* Fast failover group. */
			-->
			<function name="testaddgroup">
				<string name="modstrjson" />
				<string name="returnresourceid" />
				<reference variable="modstrjson">
					<jsonbody><![CDATA[ 
						{
							"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID().toString()%>",
							"command":"0",
							"grouptype":"1",
							"groupid":"0",
							"bucketlist":[
								{
									"weight":"1",
									"watchport":"1000",
									"watchgroup":"1000",
									"actions":[
										{
											"type":"0",
											"outport":"0xfffffffd",
											"maxlen":"0xffff"
										}
									]
								}
							]
						}	
					]]></jsonbody>
				</reference>
				<function name="InstallGroupRequest">
					<parameters>
						<string name="in_strjson"  in="context.modstrjson.toString()"/>
						<string name="in_groupid"  out="thisclass.m_testgroupid"/>
						<string name="in_appid" in="'core'"/>
					</parameters>
				</function>
			</function>
	
			<!--
				@brief		The controller sends the error group to the device
				@auth 		Wang Kang (kingsalone@sina.com)
				@date		2017/09/06
			-->
			<function name="InstallErrorGroup">
				<string name="modstrjson" />
				<string name="returnresourceid" />
				<reference variable="modstrjson">
					<jsonbody><![CDATA[ 
						{
							"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID().toString()%>",
							"command":"65",
							"grouptype":"1",
							"groupid":"0",
							"bucketlist":[
								{
									"weight":"1",
									"watchport":"1000",
									"watchgroup":"1000",
									"actions":[
										{
											"type":"0",
											"outport":"0xfffffffd",
											"maxlen":"0xffff"
										}
									]
								}
							]
						}	
					]]></jsonbody>
				</reference>
				<function name="InstallGroupRequest">
					<parameters>
						<string name="in_strjson"  in="context.modstrjson.toString()"/>
						<string name="in_groupid"  out="thisclass.m_errorid"/>
						<string name="in_appid"  in="'core'"/>
					</parameters>
				</function>
			</function>
			
			<function name="testremovegroup">			
				<function name="UnInstallGroupRequest">
					<parameters>
						<string name="groupid"  in="thisclass.m_testgroupid.toString()"/>
					</parameters>
				</function>				
			</function>
			<!-- for Get Group Json Data-->
			<!--
				@brief		拿到包json数据
				@auth 		hu peng (hupeng@staros.xyz)
				@date		2017/11/27
				Input:
				Output: 
			-->	
			<function name="GetGroupJsonData">	
				<parameters>
					<string name="jsonstring" />
				</parameters>
				<list name="groupjsonlist" valuetype="string"/>
				<object name="groupobj" />
				<string name="GroupInfoJson" />
				<pair name="onegrouppair"  keytype="string" valuetype="object"/>
					<for var="onegrouppair" in="context.groupContainer">
					<function>
						<set name="groupobj" value="context.onegrouppair.second()"/>
						<if cond="context.groupobj.ptr != null">
							<then>
								<function name="GroupToJsonString" class="groupobj">
									<parameters>
										<string name="groupjson" out="context.GroupInfoJson"/>
									</parameters>
								</function>
								<insert name="groupjsonlist" value="context.GroupInfoJson.toString()"/>
							</then>
						</if>
					</function>
				</for>
				
				<script><![CDATA[
					var json = new Object();
					var payload = new Object();							
					json['event'] = "groupDataResponse";
					
					var gArray=new Array();
					var firststr=context.groupjsonlist.getFirst();
					while(firststr!=null){
						var oneStrJson=firststr;
						var oneObject = JSON.parse(oneStrJson);
						gArray.push(oneObject);
						firststr=context.groupjsonlist.getNext();
					}

					payload['groups'] = gArray;
					
					var twobject = new Object();								
					twobject['no_rows_msg'] = "No groups found";
													
					payload['annots'] = twobject;
					json['payload'] = payload;
					var strjson=JSON.stringify(json);				
					context.jsonstring.setValue(strjson);
					
				]]></script>
			</function>	
			<!--
				@brief		提交包状态回应
				@auth 		hu peng (hupeng@staros.xyz)
				@date		2017/11/27
				Input:
				Output: 
			-->	
			<function name="HandleGroupStateResponse">
				<parameters>
					<string name="groupjson"/>
				</parameters>
				<string name="groupid"/>
				<object name="groupobj" />
				<string name="groupstate" />
				<pair name="onegrouppair"  keytype="string" valuetype="object"/>
				<hashmap name="liststate" keytype="string" valuetype="string"/>
																<script><![CDATA[							
					var info = JSON.parse(context.groupjson.toString());
									if (info.statslist != null)
									{
										for(var i=0;i<info.statslist.length;i++)
										{
											var onestat=info.statslist[i];
											context.liststate.addValue(onestate.groupid, JSON.stringify(onestat));
										}
									}
								]]></script>							
				<for var="onegrouppair" in="context.groupContainer">
					<function>
						<set name="groupobj" value="context.onegrouppair.second()"/>
						<set name="groupid" value="context.onegrouppair.first()"/>
						
						<if cond="context.liststate.hasValue(context.groupid.toString())==true">
							<then>
								<set name="groupstate" value="context.liststate.getValue(context.groupid.toString())"/>
								<function name="FetchStateFromJson" class="groupobj">
									<parameters>
										<string name="groupjson"  in="context.groupstate.toString"/>
									</parameters>
								</function>
							</then>
						</if>
					</function>
				</for>
			</function>	
			<!--
				@brief		包状态请求
				@auth 		wang kang (hupeng@staros.xyz)
				@date		2017/11/27
				Input:
				Output: 
			-->	
			<function name="GroupStateRequest">
				<long name="xid" />
				<set name="xid" value="context.openflowserverobj.ptr.getIncreaseXID()"/>
				<function name="OpenFlowMultiPartGroupRequest">
					<parameters>
						<long name="xid"  in="context.xid.toLong()"/>
						<string name="transportid"  in="thisclass.m_transportid.toString()"/>
					</parameters>
				</function>
			</function>	
			<!--
				@brief		Find group object from groupContainer
				@auth 		Wang Kang (kingsalone@sina.com)
				@date		2017/09/06
				Input:
					@param ingroupid   groupid
				Output:
					@param outgroup   group object
			-->
			<function name="FindGroup">
				<parameters>
					<string name="ingroupid" />
					<object name="outgroup" />
				</parameters>
				<function name="DumpGroup"/>
				<if cond="context.groupContainer.hasValue(context.ingroupid.toString()) == true">
					<then>
						<function>
							<lookup name="groupContainer" key="context.ingroupid.toString()" output="context.outgroup"/>
						</function>
					</then>
				</if>
			</function>
			<!--
				@brief		Print groupid from groupContainer
				@auth 		Wang Kang (kingsalone@sina.com)
				@date		2017/09/06
			-->
			<function name="DumpGroup">
				<string name="groupkey" />
				<pair name="onestatepair"  keytype="string" valuetype="object"/> 
				<for var="onestatepair" in="context.groupContainer">
					<set name="groupkey" value="context.onestatepair.first()"/>
					<log><![CDATA[groupkey=<%=context.groupkey.toString()%>]]></log>
				</for>
			</function>
		</public>
	</class>
</starlang>