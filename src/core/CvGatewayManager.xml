<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (C) 2013-2016 Nanjing StarOS Technology Co., Ltd
	All rights reserved.
	
	@file 		CvGatewayManager.xml
	@brief 		GatewayManager
	@version 	1.1.0
	@auth 		YXR
	@date		2018/1/8

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<starlang xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	<class name="CvGateway">
		<private>		
			<string name="m_ip" />	
			<string name="m_netmask" />
			<string name="m_vmac" />
		</private>
		<public>
			<function name="CvGateway">
				<parameters>	
					<string name="ip" />					
					<string name="netmask" />		
					<string name="vmac" />		
				</parameters>
				<set name="thisclass.m_ip" value="context.ip.toString()"/>
				<set name="thisclass.m_netmask" value="context.netmask.toString()"/>
				<set name="thisclass.m_vmac" value="context.vmac.toString()"/>
			</function>

			<function name="Getip">
				<parameters>
					<string name="ip" />
				</parameters>
				<set name="context.ip" value="thisclass.m_ip.toString()"/>
			</function>
			<function name="Getnetmask">
				<parameters>
					<string name="netmask" />
				</parameters>
				<set name="context.netmask" value="thisclass.m_ip.toString()"/>
			</function>		
			<function name="Getvmac">
				<parameters>
					<string name="vmac" />
				</parameters>
				<set name="context.vmac" value="thisclass.m_vmac.toString()"/>
			</function>
			
			<!--qiulei 20180110 OneVGatewayObjectToJsonStr-->
			<function name="OneVGatewayObjectToJsonStr">
				<parameters>
					<string name="vGatewayObjectToJsonStr"/>
				</parameters>
				<string name="values"/>
				<reference variable="values">
					<jsonbody><![CDATA[ 
						{	
							"ip":"<%=thisclass.ip.toString()%>",
							"netmask":"<%=thisclass.netmask.toString()%>",
							"vmac":"<%=thisclass.vmac.toString()%>"
						}
					]]></jsonbody>
				</reference>
				<set name="policyObjectToJson" value="context.values.toString()"/>
			</function>
		</public>
	</class>
	
	<class name="CvGatewayManager">
		<private>
			<hashmap name="vGatewayContainer" keytype="string" valuetype="object"/>
		</private>
		<public>			
			<function name="CvGatewayManager">
				<log level="100">CvGatewayManager is create</log>				
			</function>

			<function name="Addvgateway">
				<parameters>	
					<string name="ip" />	
					<string name="netmask"/>
					<string name="vmac"/>			
				</parameters>
				<log level="100">###### CvGatewayManager Addvgateway #######</log>
				<object name="vgatewayobj"/>
				<boolean name="ipworr" value="false"/>
				<boolean name="netmaskworr" value="false"/>
				<boolean name="macworr" value="false"/>
				<script><![CDATA[
					obj=context.ip.toString();
					var exp=/^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/; 
					var reg = obj.match(exp); 
					if(reg != null) 
					{ 
						context.ipworr.setValue("true");
					}  	
					obj=context.netmask.toString(); 
					var exp=/^(254|252|248|240|224|192|128|0)\.0\.0\.0|255\.(254|252|248|240|224|192|128|0)\.0\.0|255\.255\.(254|252|248|240|224|192|128|0)\.0|255\.255\.255\.(254|252|248|240|224|192|128|0)$/; 
					var reg = obj.match(exp); 
					if(reg != null) 
					{ 
						context.netmaskworr.setValue("true");
					} 
					
					var mac=context.vmac.toString();
					var macs = new Array();
				    macs = mac.split(":");
				
				 
				    if(macs.length == 6){
				        context.macworr.setValue("true");
				    }
				
				 
				    for (var s=0; s<6; s++) {
				        var temp = parseInt(macs[s],16);
				
				        if(!isNaN(temp))
				        {
				            context.macworr.setValue("true");  
				        }
				
				 
				        if(temp > 0 && temp < 255)
				        {
				        	context.macworr.setValue("true");  
				     	}
				    }
				]]></script>	
				<if cond="context.ipworr.toBoolean()==true">
					<then>
						<if cond="context.netmaskworr.toBoolean()==true">
							<then>
								<if cond="context.macworr.toBoolean()==true">
									<then>
										<new name="vgatewayobj" class="CvGateway">
											<parameters>
												<string name="ip"  in="context.ip.toString()"/>		
												<string name="netmask" in="context.netmask.toString()"/>	
												<string name="vmac" in="context.vmac.toString()"/>		
											</parameters>
										</new>
										<insert name="vGatewayContainer" key="context.ip.toString()" value="context.vgatewayobj"/>
									</then>
									<else>
										<syslog level="INFO">##mac wrong##</syslog>
									</else>
								</if>								
							</then>
							<else>
								<syslog level="INFO">##netmask wrong##</syslog>
							</else>
						</if>
					</then>
					<else>
						<syslog level="INFO">##ip wrong##</syslog>
					</else>
				</if>
				<log level="101"><![CDATA[Container size=<%=context.vGatewayContainer.size().toString()%> 172]]></log>
			</function>

			<function name="RemovevGateway"> 
				<parameters>
					<string name="ip"/>
				</parameters>
				<object name="vgatewayobj"/>
				<if cond="context.hostContainer.hasValue(context.ip.toString())">
					<then>
						<function name="FindvGateway">
							<parameters>
								<string name="ip" in="context.ip.toString()"/>
								<object name="vgateway" out="context.vgatewayobj"/>
							</parameters>
						</function>
						<remove name="vGatewayContainer" key="context.ip.toString()"/>
					</then>
				</if>
			</function>

			<function name="FindvGateway">
				<parameters>
					<string name="ip"/>
					<object name="vgateway"/>
				</parameters>
				<string name="vgatewaykey"/>
				<pair name="onegatewaypair" keytype="string" valuetype="object"/>
				<for var="context.onegatewaypair" in="thisclass.vGatewayContainer">
					<set name="context.vgatewaykey" value="context.onegatewaypair.first().toString()"/>
					<if cond="context.vgatewaykey.toString() == context.ip.toString()">
						<then>
							<set name="context.vgateway" value="context.onegatewaypair.second()"/>
							<exit/>
						</then>
					</if>
				</for>
			</function>
			
			<function name="Is_HaveGeteway">
				<parameters>
					<string name="ip" />
					<boolean name="is_have" />
					<string name="outvmac" />
					<string name="outip" />
				</parameters>
				<object name="gatewayobj"/>
				<string name="addr1"/>
				<string name="netmask"/>
				<string name="VGW"/>
				<pair name="onegatewaypair" keytype="string" valuetype="object"/>
				<for var="context.onegatewaypair" in="thisclass.vGatewayContainer">
					<set name="context.gatewayobj" value="context.onegatewaypair.second()"/>
					<function name="Getip" class="context.gatewayobj">
						<parameters>
							<string name="ip" out="context.VGW"/>
						</parameters>
					</function>
					<function name="Getnetmask" class="context.gatewayobj">
						<parameters>
							<string name="netmask" out="context.netmask"/>
						</parameters>
					</function>
					<syslog level="INFO"><![CDATA[ip = <%=context.ip.toString()%>]]></syslog>
					<syslog level="INFO"><![CDATA[VGW = <%=context.VGW.toString()%>]]></syslog>
					<syslog level="INFO"><![CDATA[netmask = <%=context.netmask.toString()%>]]></syslog>
					<script><![CDATA[
						var addr1=context.ip.toString();
						var addr2=context.VGW.toString();
						var mask=context.netmask.toString();
						var res1 = [], 
						var res2 = []; 
						addr1 = addr1.split("."); 
						addr2 = addr2.split("."); 
						mask = mask.split("."); 
						for(var i = 0,ilen = addr1.length; i < ilen ; i++){ 
						res1.push(parseInt(addr1[i]) & parseInt(mask[i])); 
						res2.push(parseInt(addr2[i]) & parseInt(mask[i])); 
						} 
						if(res1.join(".") == res2.join(".")){ 
							context.is_have.setValue("true");
						}else{ 
							context.is_have.setValue("false");
						}
					]]></script>
					<if cond="context.is_have.toBoolean() == true">
						<then>
							<function name="Getvmac" class="context.gatewayobj">
								<parameters>
									<string name="vmac" out="context.outvmac"/>
								</parameters>
							</function>	
							<set name="context.outip" value="context.VGW.toString()"/>
						</then>
						<else>
							<set name="context.outip" value="''"/>
							<set name="context.outvmac" value="''"/>
						</else>
					</if>
				</for>
			</function>
			
			<!--qiulei 20180110 getVGatewayJsonStrByIp-->
			<function name="getVGatewayJsonStrByIp">
				<parameters>
					<string name="ip"/>
					<string name="OneVGatewayJsonStr"/>
				</parameters>
				
				<log level="101"><![CDATA[context.ip=<%=context.ip.toString()%> ----CvGatewayManager.xml 287]]></log>
						
				<object name="vGatewayObj"/>
				<string name="vGatewayStr"/>
				<if cond="thisclass.vGatewayContainer.hasValue(context.ip.toString())">
					<then>
						<lookup name="vGatewayContainer" key="context.ip.toString()" output="context.vGatewayObj"/>

						<log level="101">enter 226</log>

						<function name="OneVGatewayObjectToJsonStr" class="vGatewayObj">
							<parameters>
								<string name="vGatewayObjectToJsonStr" out="context.vGatewayStr"/>
							</parameters>
						</function>
						
						<set name="OneVGatewayJsonStr" value="context.vGatewayStr.toString()"/>
					</then>	
				</if>
			</function>
			
			<!--qiulei 20180110  查询容器中元素的个数 GetVGatewayCounts-->
			<function name="GetVGatewayCounts">
				<parameters>
					<string name="vGatewayCounts"/>
				</parameters>
				<set name="vGatewayCounts" value="context.vGatewayContainer.size()"/>	
			</function>
		</public>
	</class>
</starlang>
