<?xml version="1.0" encoding="UTF-8"?>
<starlang xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	<class name="CFlowEntry">
		<!--
			Author:
					YY
			Date:
					2017-08-24
			Copyright: 
					Nanjing StarOS Inc. All rights reserved.
		-->
		<private>
			<string name="m_flowId" />
			<string name="m_appId" />
			<string name="m_permanent"/>
			<string name="m_state" />
			<string name="m_packets" />
			<string name="m_bytes" />
			<string name="m_timeout"/>
			<string name="m_flowjson"/>
			<string name="m_durationsec"/>
			<string name="m_durationnsec"/>
		</private>
		<public>
			<function name="CFlowEntry">
				<parameters>
					<string name="flowId" />
					<string name="appId" />
					<string name="flowjson"/>					
				</parameters>	
				<set name="thisclass.m_flowId" value="context.flowId.toString()"/>
				<set name="thisclass.m_appId" value="context.appId.toString()"/>
				<set name="thisclass.m_flowjson" value="context.flowjson.toString()"/>
				<set name="thisclass.m_state" value="'Added'"/>									
			</function>
			<function name="GetFlowJsonString">
				<parameters>
					<string name="jsonstring" />
				</parameters>
				<set name="jsonstring" value="thisclass.m_flowjson.toString()"/>
			</function>
			<!--
                "id": "0x10000d40aee30",
                "appId": "1",
                "groupId": "0x0",
                "tableId": "0",
                "priority": "40000",
                "selector": "Criteria: 5:0x0806,1:0x0800",
                "treatment": "Treatment Instructions: immediate:OUTPUT:CONTROLLER,OUTPUT:CONTROLLER, cleared:true",
                "timeout": "0",
                "permanent": "true",
                "state": "Added",
                "packets": "2,600",
                "bytes": "210,600"
			-->
			
			<function name="FlowEntryToJsonString">
				<parameters>
					<string name="flowjson" />
				</parameters>
				<string name="outjson" />
				<script><![CDATA[
					var info = JSON.parse(thisclass.m_flowjson.toString());
					var flow = new Object();
					flow.id = thisclass.m_flowId.toString();
					flow.appId = thisclass.m_appId.toString();
					flow.groupId = info.outgroup;
					flow.tableId = info.tableid;
					flow.priority = info.priority;
					var local_selector = "Criteria: ";
					for (var i = 0; i < info.match.matchfieldlist.length; i++)
					{						
						var onematch = info.match.matchfieldlist[i];
						var key = onematch.oxmfield;
						if (global.matchfieldName.hasParam(key)==true)
						{
							var keyname=global.matchfieldName.getParam(key).toString();
							var value_type = global.matchfieldMap.getParam(key).toString();
							var value = onematch[value_type];
							if (onematch.hasmask == "true")
							{
								var value_type_mask = value_type + "mask";
								if (onematch[value_type_mask] != null)							
								{
									local_selector += keyname + ':' +value + '/' + onematch[value_type_mask]+', ';
								}
							}
							else 
							{
								local_selector += keyname + ':' + value + ', ';
							}
						}
					}
					flow.selector = local_selector;
					var local_treatment = "Treatment Instructions: ";
					var local_treatment_end = " cleared:true";
					var middle_treatment;
					var tboolfirst=true;
					for (var i = 0; i < info.instructionlist.length; i++)
					{
						var oneinstruction = info.instructionlist[i];
						if (oneinstruction.type != null)
						{
							if (oneinstruction.type=='1')
							{
								if (tboolfirst==true)
								{
									local_treatment+='transition:'+'TABLE:'+oneinstruction.tableid+',';
									tboolfirst=false;
								}
								else
								{
									local_treatment+='TABLE:'+oneinstruction.tableid+',';
								}
							}
						}
					}
					var boolfirst=true;
					for (var i = 0; i < info.instructionlist.length; i++)
					{
						var oneinstruction = info.instructionlist[i];
						if (oneinstruction.type != null)
						{
							if (oneinstruction.type=='2')
							{
								if (boolfirst==true)
								{
									local_treatment+='metadata:'+'METADATA:'+oneinstruction.metadata+'/'+oneinstruction.metadatamask+', ';
									boolfirst=false;
								}
								else
								{
									local_treatment+='METADATA:'+oneinstruction.metadata+'/'+oneinstruction.metadatamask+', ';
								}
							}
						}
					}
					var mboolfirst=true;
					for (var i = 0; i < info.instructionlist.length; i++)
					{
						var oneinstruction = info.instructionlist[i];
						if (oneinstruction.type != null)
						{
							if (oneinstruction.type=='6')
							{
								if (mboolfirst==true)
								{
									local_treatment+='metered:'+'METER:'+oneinstruction.meterid+', ';
									mboolfirst=false;
								}
								else
								{
									local_treatment+='METER:'+oneinstruction.meterid+'/'+', ';
								}
							}
						}
					}
					var aboolfirst=true;
					for (var i = 0; i < info.instructionlist.length; i++)
					{
						var oneinstruction = info.instructionlist[i];
						if (oneinstruction.type != null)
						{
							if ((oneinstruction.type=='3')||(oneinstruction.type=='4')||(oneinstruction.type=='5'))
							{
								if (oneinstruction.actionlist != null)
								{
									if (aboolfirst==true)
									{
										local_treatment+='immediate:';
										for (var j = 0; j < oneinstruction.actionlist.length; j++)
										{
											var oneaction = oneinstruction.actionlist[j];
											var key=global.actionsMap.getParam(oneaction.type).toString();
											var keyname=global.actionsNameMap.getParam(oneaction.type).toString();
											local_treatment+=keyname+':'+oneaction[key]+', ';
										}
										aboolfirst=false;
									}
									else 
									{
										for (var j = 0; j < oneinstruction.actionlist.length; j++)
										{
											var oneaction = oneinstruction.actionlist[j];
											var key=global.actionsMap.getParam(oneaction.type).toString();
											var keyname=global.actionsNameMap.getParam(oneaction.type).toString();
											local_treatment+=keyname+':'+oneaction[key]+', ';
										}	
									}
								}
							}
						}
						}
					flow.treatment = local_treatment + local_treatment_end;
					flow.timeout = info.idletimeout;
					if ((info.idletimeout == info.hardtimeout) && (info.idletimeout == 0))
						flow.permanent = "true";
					else
						flow.permanent = "false";
					flow.state = thisclass.m_state.toString();
					flow.packets = thisclass.m_packets.toString();
					flow.bytes = thisclass.m_bytes.toString();
					var strjson=JSON.stringify(flow);
					context.outjson.setValue(strjson);					
				]]></script>
				<set name="flowjson" value="context.outjson.toString()"/>
			</function>
			<!--
				YY
				Get Flow's flowid
				parameter:
							flowid :
									type :	string
									style :	out
			-->
			<function name="GetFlowId">
				<parameters>
					<string name="flowid"/>					
				</parameters>
				<set name="context.flowid" value="thisclass.m_flowId.toString()"/>
			</function>
			<!--
				YY
				Set Flow's packets bytes durationsec and durationnsec
				parameter:
							packets bytes durationsec durationnsec:
																type :	string
																style :	in
			-->
			<function name="Set4Natures">
				<parameters>
					<string name="packets"/>
					<string name="bytes"/>
					<string name="durationsec"/>
					<string name="durationnsec"/>
				</parameters>
				<set name="m_packets" value="context.packets.toString()"/>
				<set name="m_bytes" value="context.bytes.toString()"/>
				<set name="m_durationsec" value="context.durationsec.toString()"/>
				<set name="m_durationnsec" value="context.durationnsec.toString()"/>
			</function>
			
			<!-- wangkang 2017/09/01 -->
			<function name="SetState">
				<parameters>
					<string name="inmodstate"/>
				</parameters>
				<set name="m_state" value="context.inmodstate.toString()"/>
			</function>
		</public>
	</class>
	<class name="CFlowManager">
		<private>
			<hashmap name="flowsContainer"  keytype="string" valuetype="object"/>
			<string name="m_transportid"/>
			<string name="m_arpflowid"/>
			<string name="m_discoveryflowid"/>
			<string name="m_errorid"/>
		</private>
		<public>
			<function name="CFlowManager">
				<parameters>
					<string name="transportid"/>
				</parameters>
				<set name="thisclass.m_transportid" value="context.transportid.toString()"/>
			</function>
			<!--
				Install Flow.
				1)use DataPathId find the flowcontainer
				2)Alloc a Resource id
				3)use the resourceid as key add value to flowcontainer
				4)Send FlowMod message to Device
				5)return the resource id
			-->
			<function name="InstallFlowTableRequest">
				<parameters>
					<string name="outflowid"/>
					<string name="strjson"/>
					<string name="appId" />
				</parameters>
				<object name="flowentry"/>
				<string name="sresourceid"/>
				<string name="transportid"/>
				<string name="sendjson"/>
				<set name="sresourceid" value="context.allocResourceId()"/>				
				<!--qiulei modify 20170807-->							
				<if cond="context.strjson.toString()==''">
					<then>
						<log>strjson is null</log>
						<exit/>
					</then>
				</if>
				<script><![CDATA[				
					var info = JSON.parse(context.strjson.toString());
					info.cookie=context.sresourceid.toString();
					var str_json=JSON.stringify(info);
					context.sendjson.setValue(str_json);
				]]></script>
				<new name="flowentry" class="CFlowEntry">
					<parameters>
						<string name="flowId"  in="context.sresourceid.toString()"/>
						<string name="appId"  in="context.appId.toString()"/>
						<string name="flowjson"  in="context.sendjson.toString()"/>
					</parameters>
				</new>									
				
				
				<insert name="flowsContainer" key="context.sresourceid.toString()" value="context.flowentry"/>
				
				<!---qiulei 20170831 start-->
				<string name="BarrierStrJson" />
				<reference variable="BarrierStrJson">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID()%>"
							}
					]]></jsonbody>
				</reference>
				<!--openflow_api中的方法-->
				<function name="Send_OFPT13_BARRIER_REQUEST">
					<parameters>
						<string name="transportid"  in="thisclass.m_transportid.toString()"/>
						<string name="strjson" in="context.BarrierStrJson.toString()"/>
					</parameters>
                </function>
				<!---qiulei 20170831 end-->

				<function name="Send_OFPT13_FLOW_MOD">
					<parameters>
						<string name="transportid"  in="thisclass.m_transportid.toString()"/>
						<string name="strjson"  in="context.sendjson.toString()"/>
					</parameters>
				</function>
				<set name="outflowid" value="context.sresourceid.toString()"/>
			</function>
			<!--
				Uninstall Flow.
				1)use DataPathId find the flowcontainer
				2)use resourcedi find the flow json string
				3)Modify the Json String 
				4)Send FlowMod message to Device
				5)Delete the flow from flowcontainer
			-->
			<function name="UnInstallFlowTableRequest">
				<parameters>
					<string name="flowid" />
				</parameters>
				<string name="transportid" />
				<object name="flowentry"/>
				<string name="sendflowmodjson" />
				<string name="flowmodjson"/>
				<log><![CDATA[UnInstallFlowTableRequest flowid <%=context.flowid.toString()%>]]></log>
				<if cond="context.flowsContainer.hasValue(context.flowid.toString()) == true">
					<then>
						<function>
							<lookup name="flowsContainer" key="context.flowid.toString()" output="context.flowentry"/>
						</function>
					</then>
					<else>
						<function>
							<log>UnInstallFlowTableRequest exit2</log>							
							<exit/>
						</function>
					</else>
				</if>
				<!--qiulei 20170905 start1
					Modify some bugs
					Add if judgment-->
				<if cond="context.flowentry!=null">
					<then>
						<function name="GetFlowJsonString" class="context.flowentry">
							<parameters>
								<string name="jsonstring"  out="context.flowmodjson"/>
							</parameters>
						</function>
					</then>
					<else>
						<function>
							<log>deviceinfo is null</log>
							<assert/>
							<exit/>
						</function>
					</else>
				</if>
				<!--qiulei 20170905 end1-->
				
				<script><![CDATA[
						var info = JSON.parse(context.flowmodjson.toString());
						info.command='3';
						var strjson=JSON.stringify(info);
						context.sendflowmodjson.setValue(strjson);
				]]></script>
				
				<!---qiulei 20170831 start2-->
				<string name="BarrierStrJson" />
				<reference variable="BarrierStrJson">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID()%>"
							}
					]]></jsonbody>
				</reference>
				<!--openflow_api中的方法-->
				<function name="Send_OFPT13_BARRIER_REQUEST">
					<parameters>
						<string name="transportid"   in="thisclass.m_transportid.toString()"/>
						<string name="strjson"  in="context.BarrierStrJson.toString()"/>
					</parameters>
                </function>
				<!---qiulei 20170831 end2-->
				
				
				<function name="Send_OFPT13_FLOW_MOD">
					<parameters>
						<string name="transportid"  in="thisclass.m_transportid.toString()"/>
						<string name="strjson"  in="context.sendflowmodjson.toString()"/>
					</parameters>
				</function>
				<remove name="flowsContainer" key="context.flowid.toString()"/>
			</function>
			<function name="GetFlowJsonData">
				<parameters>
					<string name="jsonstring"/>
				</parameters>
				<object name="flowobj"/>				
				<string name="flowobjJson"/>
				<string name="flowobj_deviceid"/>
				<string name="outjson" />
				<list name="flowinfos"  valuetype="string"/>

				
				
				
				<pair name="oneflowPair"  keytype="string" valuetype="object"/>
				<for var="oneflowPair" in="context.flowsContainer">
					
					<set name="flowobj" value="context.oneflowPair.second()"/>
					<if cond="context.flowobj.ptr==null">
						<then>
							<log>flowobj is null</log>
							<exit/>
						</then>
					</if>
					<function name="FlowEntryToJsonString" class="context.flowobj">
						<parameters>
							<string name="flowjson"  out="context.flowobjJson"/>
						</parameters>
					</function>
					<insert name="flowinfos" value="context.flowobjJson.toString()"/>
				</for>
				<script><![CDATA[
					var json = new Object();
					var payload = new Object();							
					json['event'] = "flowDataResponse";
					
					var myArray = new Array();
					
					
					//	qiulei 20170918 am
					var firstString=context.flowinfos.getFirst();
					while(firstString!=null){
						
						var jsoninfo = JSON.parse(firstString);
						myArray.push(jsoninfo);
						
						firstString=context.flowinfos.getNext();
					}
					
					
					payload['flows'] = myArray;
					
					var twobject = new Object();								
					twobject['no_rows_msg'] = "No flows found";
													
					payload['annots'] = twobject;
					json['payload'] = payload;
					var strjson=JSON.stringify(json);				
					context.outjson.setValue(strjson);	
				]]></script>
				<set name="jsonstring" value="context.outjson"/>
			</function>
			<function name="HandleOpenFlowMultiPartFlowResponse">
				<parameters>
					<string name="flowjson" />
				</parameters>
				<object name="flowobj" />
				<string name="flowobj_flowid"/>
				<string name="json_cookie" />
				<string name="local_packets"/>
				<string name="local_bytes"/>
				<string name="local_durationsec" />
				<string name="local_durationnsec"/>
				<pair name="oneFlowsPair"  keytype="string" valuetype="object"/>
				<string name="oneFlowpartPair"/>
				
				<list name="flowpartlist"   valuetype="string"/>
				<string name="flowpartstring" />											
																<script><![CDATA[
					var info = JSON.parse(context.flowjson.toString());
									for (var i = 0; i < info.statslist.length; i++)
									{
										var flowstats = info.statslist[i];
										var flowstrjson=JSON.stringify(flowstats);
										context.flowpartlist.addValue(flowstrjson);
									}
								]]></script>
							<!--
					YY
					Set Flow's packets bytes durationsec and durationnsec
					1) get data from event
					2) judge Flow's flowid and data's cookie is it equal
					3) get packets bytes durationsec and durationnsec from data
					4) put 4 datas set in Flow
				-->
				<for var="oneFlowpartPair" in="context.flowpartlist">
					
					<set name="flowpartstring" value="context.oneFlowpartPair.toString()"/>
					<for var="oneFlowsPair" in="context.flowsContainer">
						<set name="flowobj" value="context.oneFlowsPair.second()"/>
						<if cond="context.flowobj.ptr==null">
							<then>
								<log>flowobj is null</log>
								<exit/>
							</then>
						</if>
						<function name="GetFlowId" class="context.flowobj">
							<parameters>
								<string name="flowid"  out="context.flowobj_flowid"/>
							</parameters>
						</function>
						
						<script><![CDATA[
							var flowstats = context.flowpartstring.toString();
							var info = JSON.parse(flowstats);
							var cookie = info.cookie;
							context.json_cookie.setValue(cookie);
						]]></script>
						<if cond="context.flowobj_flowid.toString()==context.json_cookie.toString()">
							<then>
								<script><![CDATA[
									var flowstats = context.flowpartstring.toString();
									var info = JSON.parse(flowstats);
									var packets = info.packetcount;
									var bytes = info.bytecount;
									var durationsec = info.durationsec;
									var durationnsec = info.durationnsec;
									context.local_packets.setValue(packets);
									context.local_bytes.setValue(bytes);
									context.local_durationsec.setValue(durationsec);
									context.local_durationnsec.setValue(durationnsec);
								]]></script>
								<function name="Set4Natures" class="context.flowobj">
									<parameters>
										<string name="packets"  in="context.local_packets.toString()"/>
										<string name="bytes"  in="context.local_bytes.toString()"/>
										<string name="durationsec"  in="context.local_durationsec.toString()"/>
										<string name="durationnsec"  in="context.local_durationnsec.toString()"/>
									</parameters>
								</function>
							</then>
						</if>
					</for>
				</for>
				
			</function>
			<function name="SendFlowRequest">
				<long name="xid" />

				
				<set name="xid" value="context.openflowserverobj.ptr.getIncreaseXID()"/>							
				
										
				<function name="OpenFlowMultiPartFlowRequest">
					<parameters>						
						<long name="xid"  in="context.xid.toLong()"/>
						<string name="transportid"  in="thisclass.m_transportid.toString()"/>					
					</parameters>
				</function>
				
			</function>		
			
			<function name="InstallARPFlow">
				<string name="modstrjson" />
				<reference variable="modstrjson">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"5",
												"hasmask":"false",
												"ethtype":"0x0806"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"0",
												"outport":"0xfffffffd",
												"maxlen":"0xffff"
											}
										]
									}
								]
							}
					]]></jsonbody>
				</reference>
				<function name="InstallFlowTableRequest">
					<parameters>
						<string name="outflowid"  out="thisclass.m_arpflowid"/>
						<string name="strjson"  in="context.modstrjson.toString()"/>
						<string name="appId"  in="'core'"/>
					</parameters>
				</function>
			</function>
			
			<!--qiulei 2017/07/27-->
			<function name="InstallDiscoveryFlow">
				<string name="modstrjson" />
				<string name="resourceid"  value=""/>
				<reference variable="modstrjson">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"5",
												"hasmask":"false",
												"ethtype":"0x9944"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"0",
												"outport":"0xfffffffd",
												"maxlen":"0xffff"
											}
										]
									}
								]
							}
					]]></jsonbody>
				</reference>
				<function name="InstallFlowTableRequest">
					<parameters>
						<string name="strjson"  in="context.modstrjson.toString()"/>
						<string name="outflowid"  out="thisclass.m_discoveryflowid"/>
						<string name="appId"  in="'core'"/>
					</parameters>
				</function>
			</function>
			
			<function name="InstallDefaultFlow">
				<function name="InstallARPFlow"/>
				<function name="InstallDiscoveryFlow"/>
				<function name="InstallErrorFlow"/>
			</function>
			
			<!-- wangkang 2017/09/01 -->
			<function name="InstallErrorFlow">
				<string name="modstrjson" />
				<string name="resourceid"  value=""/>
				<reference variable="modstrjson">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.ptr.getIncreaseXID()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"33",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"5",
												"hasmask":"false",
												"ethtype":"0x9944"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"0",
												"outport":"0xfffffffd",
												"maxlen":"0xffff"
											}
										]
									}
								]
							}
					]]></jsonbody>
				</reference>
				<function name="InstallFlowTableRequest">
					<parameters>
						<string name="strjson"  in="context.modstrjson.toString()"/>
						<string name="outflowid"  out="thisclass.m_errorid"/>
						<string name="appId"  in="'core'"/>
					</parameters>
				</function>
			</function>
			
			<!-- wangkang 2017/09/01-->
			<function name="FindFlow">
				<parameters>
					<string name="incookie" />
					<object name="outflowentry" />
				</parameters>
				<function name="DumpFlow"/>
				<if cond="context.flowsContainer.hasValue(context.incookie.toString()) == true">
					<then>
						<function>
							<lookup name="flowsContainer" key="context.incookie.toString()" output="context.outflowentry"/>
						</function>
					</then>
				</if>
			</function>
			<function name="DumpFlow">
				<string name="flowkey" />
				<pair name="oneFlowPair"  keytype="string" valuetype="object"/>
				<for var="oneFlowPair" in="context.flowsContainer">
					<set name="flowkey" value="context.oneFlowPair.first()"/>
				</for>			
			</function>
		</public>
	</class>
</starlang>