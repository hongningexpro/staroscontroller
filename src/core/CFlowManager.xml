<?xml version="1.0" encoding="UTF-8"?>
<starosxml xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	<class name="CFlowEntry">
		<!--
			Author:
					YY
			Date:
					2017-08-24
			Copyright: 
					Nanjing StarOS Inc. All rights reserved.
		-->
		<private>
			<variable name="m_flowId" type="string"/>
			<variable name="m_appId" type="string"/>
			<variable name="m_permanent" type="string"/>
			<variable name="m_state" type="string"/>
			<variable name="m_packets" type="string"/>
			<variable name="m_bytes" type="string"/>
			<variable name="m_timeout" type="string"/>
			<variable name="m_flowjson" type="string"/>
			<variable name="m_durationsec" type="string"/>
			<variable name="m_durationnsec" type="string"/>
		</private>
		<public>
			<function name="CFlowEntry">
				<parameters>
					<parameter name="flowId" type="string"/>
					<parameter name="appId" type="string"/>
					<parameter name="flowjson" type="string"/>					
				</parameters>	
				<set name="thisclass.m_flowId" value="context.flowId.toString()"/>
				<set name="thisclass.m_appId" value="context.appId.toString()"/>
				<set name="thisclass.m_flowjson" value="context.flowjson.toString()"/>
				<set name="thisclass.m_state" value="'Added'"/>									
			</function>
			<function name="GetFlowJsonString" class="context.flowentry">
				<parameters>
					<parameter name="jsonstring" type="string"/>
				</parameters>
				<set name="jsonstring" value="thisclass.m_flowjson.toString()"/>
			</function>
			<!--
                "id": "0x10000d40aee30",
                "appId": "1",
                "groupId": "0x0",
                "tableId": "0",
                "priority": "40000",
                "selector": "Criteria: 5:0x0806,1:0x0800",
                "treatment": "Treatment Instructions: immediate:OUTPUT:CONTROLLER,OUTPUT:CONTROLLER, cleared:true",
                "timeout": "0",
                "permanent": "true",
                "state": "Added",
                "packets": "2,600",
                "bytes": "210,600"
			-->
			
			<function name="FlowEntryToJsonString">
				<parameters>
					<parameter name="flowjson" type="string"/>
				</parameters>
				<variable name="outjson" type="string"/>
				<script><![CDATA[
					var info = JSON.parse(thisclass.m_flowjson.toString());
					var flow = new Object();
					flow.id = thisclass.m_flowId.toString();
					flow.appId = thisclass.m_appId.toString();
					flow.groupId = info.outgroup;
					flow.tableId = info.tableid;
					flow.priority = info.priority;
					var local_selector = "Criteria: ";
					for (var i = 0; i < info.match.matchfieldlist.length; i++)
					{						
						var onematch = info.match.matchfieldlist[i];
						var key = onematch.oxmfield;
						context.print(key);
						if (global.matchfieldName.hasParam(key)==true)
						{
							var keyname=global.matchfieldName.getParam(key).toString();
							var value_type = global.matchfieldMap.getParam(key).toString();
							var value = onematch[value_type];
							if (onematch.hasmask == "true")
							{
								var value_type_mask = value_type + "mask";
								if (onematch[value_type_mask] != null)							
								{
									local_selector += keyname + ':' +value + '/' + onematch[value_type_mask]+', ';
								}
							}
							else 
							{
								local_selector += keyname + ':' + value + ', ';
							}
						}
					}
					flow.selector = local_selector;
					var local_treatment = "Treatment Instructions: ";
					var local_treatment_end = " cleared:true";
					var middle_treatment;
					var tboolfirst=true;
					for (var i = 0; i < info.instructionlist.length; i++)
					{
						var oneinstruction = info.instructionlist[i];
						if (oneinstruction.type != null)
						{
							if (oneinstruction.type=='1')
							{
								if (tboolfirst==true)
								{
									local_treatment+='transition:'+'TABLE:'+oneinstruction.tableid+',';
									tboolfirst=false;
								}
								else
								{
									local_treatment+='TABLE:'+oneinstruction.tableid+',';
								}
							}
						}
					}
					var boolfirst=true;
					for (var i = 0; i < info.instructionlist.length; i++)
					{
						var oneinstruction = info.instructionlist[i];
						if (oneinstruction.type != null)
						{
							if (oneinstruction.type=='2')
							{
								if (boolfirst==true)
								{
									local_treatment+='metadata:'+'METADATA:'+oneinstruction.metadata+'/'+oneinstruction.metadatamask+', ';
									boolfirst=false;
								}
								else
								{
									local_treatment+='METADATA:'+oneinstruction.metadata+'/'+oneinstruction.metadatamask+', ';
								}
							}
						}
					}
					var mboolfirst=true;
					for (var i = 0; i < info.instructionlist.length; i++)
					{
						var oneinstruction = info.instructionlist[i];
						if (oneinstruction.type != null)
						{
							if (oneinstruction.type=='6')
							{
								if (mboolfirst==true)
								{
									local_treatment+='metered:'+'METER:'+oneinstruction.meterid+', ';
									mboolfirst=false;
								}
								else
								{
									local_treatment+='METER:'+oneinstruction.meterid+'/'+', ';
								}
							}
						}
					}
					var aboolfirst=true;
					for (var i = 0; i < info.instructionlist.length; i++)
					{
						var oneinstruction = info.instructionlist[i];
						if (oneinstruction.type != null)
						{
							if ((oneinstruction.type=='3')||(oneinstruction.type=='4')||(oneinstruction.type=='5'))
							{
								if (oneinstruction.actionlist != null)
								{
									if (aboolfirst==true)
									{
										local_treatment+='immediate:';
										for (var j = 0; j < oneinstruction.actionlist.length; j++)
										{
											var oneaction = oneinstruction.actionlist[j];
											var key=global.actionsMap.getParam(oneaction.type).toString();
											var keyname=global.actionsNameMap.getParam(oneaction.type).toString();
											local_treatment+=keyname+':'+oneaction[key]+', ';
										}
										aboolfirst=false;
									}
									else 
									{
										for (var j = 0; j < oneinstruction.actionlist.length; j++)
										{
											var oneaction = oneinstruction.actionlist[j];
											var key=global.actionsMap.getParam(oneaction.type).toString();
											var keyname=global.actionsNameMap.getParam(oneaction.type).toString();
											local_treatment+=keyname+':'+oneaction[key]+', ';
										}	
									}
								}
							}
						}
						}
					flow.treatment = local_treatment + local_treatment_end;
					flow.timeout = info.idletimeout;
					if ((info.idletimeout == info.hardtimeout) && (info.idletimeout == 0))
						flow.permanent = "true";
					else
						flow.permanent = "false";
					flow.state = thisclass.m_state.toString();
					flow.packets = thisclass.m_packets.toString();
					flow.bytes = thisclass.m_bytes.toString();
					var strjson=JSON.stringify(flow);
					context.outjson.setValue(strjson);					
				]]></script>
				<set name="flowjson" value="context.outjson.toString()"/>
			</function>
			<!--
				YY
				Get Flow's flowid
				parameter:
							flowid :
									type :	string
									style :	out
			-->
			<function name="GetFlowId">
				<parameters>
					<parameter name="flowid" type="string"/>					
				</parameters>
				<set name="context.flowid" value="thisclass.m_flowId.toString()"/>
			</function>
			<!--
				YY
				Set Flow's packets bytes durationsec and durationnsec
				parameter:
							packets bytes durationsec durationnsec:
																type :	string
																style :	in
			-->
			<function name="Set4Natures">
				<parameters>
					<parameter name="packets" type="string"/>
					<parameter name="bytes" type="string"/>
					<parameter name="durationsec" type="string"/>
					<parameter name="durationnsec" type="string"/>
				</parameters>
				<set name="m_packets" value="context.packets.toString()"/>
				<set name="m_bytes" value="context.bytes.toString()"/>
				<set name="m_durationsec" value="context.durationsec.toString()"/>
				<set name="m_durationnsec" value="context.durationnsec.toString()"/>
			</function>
			
			<!-- wangkang 2017/09/01 -->
			<function name="SetState">
				<parameters>
					<parameter name="inmodstate" type="string"/>
				</parameters>
				<set name="m_state" value="context.inmodstate.toString()"/>
			</function>
		</public>
	</class>
	<class name="CFlowManager">
		<private>
			<container name="flowsContainer" type="hashmap" keytype="string" valuetype="class"/>
			<variable name="m_transportid" type="string"/>
			<variable name="m_arpflowid" type="string"/>
			<variable name="m_discoveryflowid" type="string"/>
			<variable name="m_errorid" type="string"/>
		</private>
		<public>
			<function name="CFlowManager">
				<parameters>
					<parameter name="transportid" type="string"/>
				</parameters>
				<set name="thisclass.m_transportid" value="context.transportid.toString()"/>
			</function>
			<!--
				Install Flow.
				1)use DataPathId find the flowcontainer
				2)Alloc a Resource id
				3)use the resourceid as key add value to flowcontainer
				4)Send FlowMod message to Device
				5)return the resource id
			-->
			<function name="InstallFlowTableRequest">
				<parameters>
					<parameter name="outflowid" type="string"/>
					<parameter name="strjson" type="string"/>
					<parameter name="appId" type="string"/>
				</parameters>
				<variable name="flowentry" type="class"/>
				<variable name="sresourceid" type="string"/>
				<variable name="transportid" type="string"/>
				<variable name="sendjson" type="string"/>
				<set name="sresourceid" value="context.allocResourceId()"/>				
				<!--qiulei modify 20170807-->							
				<if cond="context.strjson.toString()==''">
					<then>
						<log>strjson is null</log>
						<exit/>
					</then>
				</if>
				<new name="flowentry" class="CFlowEntry">
					<parameters>
						<parameter name="flowId" type="string" in="context.sresourceid.toString()"/>
						<parameter name="appId" type="string" in="context.appId.toString()"/>
						<parameter name="flowjson" type="string" in="context.strjson.toString()"/>
					</parameters>
				</new>									
				<script><![CDATA[				
					var info = JSON.parse(context.strjson.toString());
					info.cookie=context.sresourceid.toString();
					var str_json=JSON.stringify(info);
					context.sendjson.setValue(str_json);
				]]></script>
				
				<insert name="flowsContainer" key="context.sresourceid.toString()" value="context.flowentry"/>
				
				<!---qiulei 20170831 start-->
				<variable name="BarrierStrJson" type="string"/>
				<reference variable="BarrierStrJson">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.getIncreaseXID()%>"
							}
					]]></jsonbody>
				</reference>
				<!--openflow_api中的方法-->
				<function name="Send_OFPT13_BARRIER_REQUEST">
					<parameters>
						<parameter name="transportid" type="string" in="thisclass.m_transportid.toString()"/>
						<parameter name="strjson" type="string" in="context.BarrierStrJson.toString()"/>
					</parameters>
                </function>
				<!---qiulei 20170831 end-->

				<function name="Send_OFPT13_FLOW_MOD">
					<parameters>
						<parameter name="transportid" type="string" in="thisclass.m_transportid.toString()"/>
						<parameter name="strjson" type="string" in="context.sendjson.toString()"/>
					</parameters>
				</function>
				<set name="outflowid" value="context.sresourceid.toString()"/>
			</function>
			<!--
				Uninstall Flow.
				1)use DataPathId find the flowcontainer
				2)use resourcedi find the flow json string
				3)Modify the Json String 
				4)Send FlowMod message to Device
				5)Delete the flow from flowcontainer
			-->
			<function name="UnInstallFlowTableRequest">
				<parameters>
					<parameter name="flowid" type="string"/>
				</parameters>
				<variable name="transportid" type="string"/>
				<variable name="flowentry" type="class"/>
				<variable name="sendflowmodjson" type="string"/>
				<variable name="flowmodjson" type="string"/>
				<if cond="context.flowsContainer.hasValue(context.flowid.toString()) == true">
					<then>
						<function>
							<lookup name="flowsContainer" key="context.flowid.toString()" output="context.flowentry"/>
						</function>
					</then>
					<else>
						<function>
							<log>UnInstallFlowTableRequest exit2</log>
							<exit/>
						</function>
					</else>
				</if>
				<!--qiulei 20170905 start1
					Modify some bugs
					Add if judgment-->
				<if cond="context.flowentry!=null">
					<then>
						<function name="GetFlowJsonString" class="context.flowentry">
							<parameters>
								<parameter name="jsonstring" type="string" out="context.flowmodjson"/>
							</parameters>
						</function>
					</then>
					<else>
						<function>
							<log>deviceinfo is null</log>
							<exit/>
						</function>
					</else>
				</if>
				<!--qiulei 20170905 end1-->
				
				<script><![CDATA[
						var info = JSON.parse(context.flowmodjson.toString());
						info.command='3';
						var strjson=JSON.stringify(info);
						context.sendflowmodjson.setValue(strjson);
				]]></script>
				
				<!---qiulei 20170831 start2-->
				<variable name="BarrierStrJson" type="string"/>
				<reference variable="BarrierStrJson">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.getIncreaseXID()%>"
							}
					]]></jsonbody>
				</reference>
				<!--openflow_api中的方法-->
				<function name="Send_OFPT13_BARRIER_REQUEST">
					<parameters>
						<parameter name="transportid" type="string"  in="thisclass.m_transportid.toString()"/>
						<parameter name="strjson" type="string" in="context.BarrierStrJson.toString()"/>
					</parameters>
                </function>
				<!---qiulei 20170831 end2-->
				
				
				
				<function name="Send_OFPT13_FLOW_MOD">
					<parameters>
						<parameter name="transportid" type="string" in="thisclass.m_transportid.toString()"/>
						<parameter name="strjson" type="string" in="context.sendflowmodjson.toString()"/>
					</parameters>
				</function>
				<remove name="flowsContainer" key="context.flowid.toString()"/>
			</function>
			<function name="GetFlowJsonData">
				<parameters>
					<parameter name="jsonstring" type="string"/>
				</parameters>
				<variable name="flowobj" type="class"/>				
				<variable name="flowobjJson" type="string"/>
				<variable name="flowobj_deviceid" type="string"/>
				<variable name="outjson" type="string"/>
				<container name="flowinfos" type="list" valuetype="string"/>

				
				
				
				<container name="oneflowPair" type="pair" keytype="string" valuetype="class"/>
				<for var="oneflowPair" in="context.flowsContainer">
					
					<set name="flowobj" value="context.oneflowPair.second()"/>
					<if cond="context.flowobj==null">
						<then>
							<log>flowobj is null</log>
							<exit/>
						</then>
					</if>
					<function name="FlowEntryToJsonString" class="context.flowobj">
						<parameters>
							<parameter name="flowjson" type="string" out="context.flowobjJson"/>
						</parameters>
					</function>
					<insert name="flowinfos" value="context.flowobjJson.toString()"/>
				</for>
				<script><![CDATA[
					var json = new Object();
					var payload = new Object();							
					json['event'] = "flowDataResponse";
					
					var myArray = new Array();
					
					
					//	qiulei 20170918 am
					var firstString=context.flowinfos.getFirst();
					while(firstString!=null){
						
						var jsoninfo = JSON.parse(firstString);
						myArray.push(jsoninfo);
						
						firstString=context.flowinfos.getNext();
					}
					
					
					payload['flows'] = myArray;
					
					var twobject = new Object();								
					twobject['no_rows_msg'] = "No flows found";
													
					payload['annots'] = twobject;
					json['payload'] = payload;
					var strjson=JSON.stringify(json);				
					context.outjson.setValue(strjson);	
				]]></script>
				<set name="jsonstring" value="context.outjson"/>
			</function>
			<function name="HandleOpenFlowMultiPartFlowResponse">
				<parameters>
					<parameter name="flowjson" type="string"/>
				</parameters>
				<variable name="flowobj" type="class"/>
				<variable name="flowobj_flowid" type="string"/>
				<variable name="json_cookie" type="string"/>
				<variable name="local_packets" type="string"/>
				<variable name="local_bytes" type="string"/>
				<variable name="local_durationsec" type="string"/>
				<variable name="local_durationnsec" type="string"/>
				<container name="oneFlowsPair" type="pair" keytype="string" valuetype="class"/>
				<variable name="oneFlowpartPair" type="string"/>
				
				<container name="flowpartlist" type="list"  valuetype="string"/>
				<variable name="flowpartstring" type="string"/>											
																<script><![CDATA[
					var info = JSON.parse(context.flowjson.toString());
									for (var i = 0; i < info.statslist.length; i++)
									{
										var flowstats = info.statslist[i];
										var flowstrjson=JSON.stringify(flowstats);
										context.flowpartlist.addValue(flowstrjson);
									}
								]]></script>
							<!--
					YY
					Set Flow's packets bytes durationsec and durationnsec
					1) get data from event
					2) judge Flow's flowid and data's cookie is it equal
					3) get packets bytes durationsec and durationnsec from data
					4) put 4 datas set in Flow
				-->
				<for var="oneFlowpartPair" in="context.flowpartlist">
					
					<set name="flowpartstring" value="context.oneFlowpartPair.toString()"/>
					<for var="oneFlowsPair" in="context.flowsContainer">
						<set name="flowobj" value="context.oneFlowsPair.second()"/>
						<if cond="context.flowobj==null">
							<then>
								<log>flowobj is null</log>
								<exit/>
							</then>
						</if>
						<function name="GetFlowId" class="context.flowobj">
							<parameters>
								<parameter name="flowid" type="string" out="context.flowobj_flowid"/>
							</parameters>
						</function>
						
						<script><![CDATA[
							var flowstats = context.flowpartstring.toString();
							var info = JSON.parse(flowstats);
							var cookie = info.cookie;
							context.json_cookie.setValue(cookie);
						]]></script>
						<if cond="context.flowobj_flowid.toString()==context.json_cookie.toString()">
							<then>
								<script><![CDATA[
									var flowstats = context.flowpartstring.toString();
									var info = JSON.parse(flowstats);
									var packets = info.packetcount;
									var bytes = info.bytecount;
									var durationsec = info.durationsec;
									var durationnsec = info.durationnsec;
									context.local_packets.setValue(packets);
									context.local_bytes.setValue(bytes);
									context.local_durationsec.setValue(durationsec);
									context.local_durationnsec.setValue(durationnsec);
								]]></script>
								<function name="Set4Natures" class="context.flowobj">
									<parameters>
										<parameter name="packets" type="string" in="context.local_packets.toString()"/>
										<parameter name="bytes" type="string" in="context.local_bytes.toString()"/>
										<parameter name="durationsec" type="string" in="context.local_durationsec.toString()"/>
										<parameter name="durationnsec" type="string" in="context.local_durationnsec.toString()"/>
									</parameters>
								</function>
							</then>
						</if>
					</for>
				</for>
				
</function>
			<function name="SendFlowRequest">
				<variable name="xid" type="long"/>

				
				<set name="xid" value="context.openflowserverobj.getIncreaseXID()"/>							
				
										
				<function name="OpenFlowMultiPartFlowRequest">
					<parameters>						
						<parameter name="xid" type="long" in="context.xid.toLong()"/>
						<parameter name="transportid" type="string" in="thisclass.m_transportid.toString()"/>					
					</parameters>
				</function>
				
			</function>		
			
			<function name="InstallARPFlow">
				<variable name="modstrjson" type="string"/>
				<reference variable="modstrjson">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.getIncreaseXID()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"6",
												"hasmask":"false",
												"vlanid":"45"
											},
											{
												"oxmclass":"0x8000",
												"oxmfield":"0",
												"hasmask":"false",
												"inport":"4"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"0",
												"outport":"0xfffffffd",
												"maxlen":"0xffff"
											}
										]
									}
								]
							}
					]]></jsonbody>
				</reference>
				<function name="InstallFlowTableRequest">
					<parameters>
						<parameter name="outflowid" type="string" out="thisclass.m_arpflowid"/>
						<parameter name="strjson" type="string" in="context.modstrjson.toString()"/>
						<parameter name="appId" type="string" in="'core'"/>
					</parameters>
				</function>
			</function>
			
			<!--qiulei 2017/07/27-->
			<function name="InstallDiscoveryFlow">
				<variable name="modstrjson" type="string"/>
				<variable name="resourceid" type="string" value=""/>
				<reference variable="modstrjson">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.getIncreaseXID()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"0",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"5",
												"hasmask":"false",
												"ethtype":"0x9944"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"0",
												"outport":"0xfffffffd",
												"maxlen":"0xffff"
											}
										]
									}
								]
							}
					]]></jsonbody>
				</reference>
				<function name="InstallFlowTableRequest">
					<parameters>
						<parameter name="strjson" type="string" in="context.modstrjson.toString()"/>
						<parameter name="outflowid" type="string" out="thisclass.m_discoveryflowid"/>
						<parameter name="appId" type="string" in="'core'"/>
					</parameters>
				</function>
			</function>
			
			<function name="InstallDefaultFlow">
				<function name="InstallARPFlow"/>
				<function name="InstallDiscoveryFlow"/>
				<function name="InstallErrorFlow"/>
			</function>
			
			<!-- wangkang 2017/09/01 -->
			<function name="InstallErrorFlow">
				<variable name="modstrjson" type="string"/>
				<variable name="resourceid" type="string" value=""/>
				<reference variable="modstrjson">
					<jsonbody><![CDATA[ 
							{
								"xid":"<%=context.openflowserverobj.getIncreaseXID()%>",
								"cookie":"0",
								"cookiemask":"0",
								"tableid":"0",
								"command":"33",
								"idletimeout":"0",
								"hardtimeout":"0",
								"priority":"40000",
								"bufferid":"0xffffffff",
								"outport":"0xffffffff",
								"outgroup":"0xffffffff",
								"flags":"1",
								"match":{
										"type":"1",
										"matchfieldlist":[
											{
												"oxmclass":"0x8000",
												"oxmfield":"5",
												"hasmask":"false",
												"ethtype":"0x9944"
											}
										]
									},
								"instructionlist":[
									{
										"type":"4",
										"actionlist":[
											{
												"type":"0",
												"outport":"0xfffffffd",
												"maxlen":"0xffff"
											}
										]
									}
								]
							}
					]]></jsonbody>
				</reference>
				<function name="InstallFlowTableRequest">
					<parameters>
						<parameter name="strjson" type="string" in="context.modstrjson.toString()"/>
						<parameter name="outflowid" type="string" out="thisclass.m_errorid"/>
						<parameter name="appId" type="string" in="'core'"/>
					</parameters>
				</function>
			</function>
			
			<!-- wangkang 2017/09/01-->
			<function name="FindFlow">
				<parameters>
					<parameter name="incookie" type="string"/>
					<parameter name="outflowentry" type="class"/>
				</parameters>
				<function name="DumpFlow"/>
				<if cond="context.flowsContainer.hasValue(context.incookie.toString()) == true">
					<then>
						<function>
							<lookup name="flowsContainer" key="context.incookie.toString()" output="context.outflowentry"/>
						</function>
					</then>
				</if>
			</function>
			<function name="DumpFlow">
				<variable name="flowkey" type="string"/>
				<container name="oneFlowPair" type="pair" keytype="string" valuetype="class"/>
				<for var="oneFlowPair" in="context.flowsContainer">
					<set name="flowkey" value="context.oneFlowPair.first()"/>
				</for>			
			</function>
		</public>
	</class>
</starosxml>