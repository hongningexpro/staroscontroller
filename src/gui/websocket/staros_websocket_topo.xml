<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (C) 2013-2016 Nanjing StarOS Technology Co., Ltd
	All rights reserved.
	
	@file 		staros_websocket_topo.xml
	@brief 		处理发送 topo数据到前端的函数
	@version 	1.1.0
	@auth 		hu peng (hupeng@staros.xyz)
	@date		2017/11/24
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<starlang>
	<object name="requestSummaryTimer"/>
	<boolean name="summaryRunning" value="false"/>
	<hashmap name="metaUi" keytype="string" valuetype="string"/>
	<function name="HandleUpdatePrefReq">
		<string name="keystring"/>
		<string name="valuestring"/>
		<string name="strJsonPref"/>
		<script><![CDATA[
			var info = JSON.parse(event.getParam("eventdata").toString());
			if (info.payload != null)
			{
				var key = info.payload.key;
				var value=info.payload.value;
				if (key != null)
				{
					context.keystring.setValue(key);
				}
				if (value != null)
				{
					var strjson=JSON.stringify(value);
					context.valuestring.setValue(strjson);
				}
			}
		]]></script>
		<function name="setPreference" class="uiExtension">
			<parameters>
				<string name="username" in="'admin'"/>
				<string name="key" in="context.keystring.toString()"/>
				<string name="value" in="context.valuestring.toString()"/>					
			</parameters>
		</function>
		<function name="getPreference" class="uiExtension">
			<parameters>
				<string name="prefstring" out="context.strJsonPref"/>				
			</parameters>
		</function>
		<if cond="context.strJsonPref.size() != 0">
			<then>
			<websocket name="restfulserver" method="SendText" transportid="event.getParam('transportid').toString()">
				<jsonbody>
				<![CDATA[
						{"event":"updatePrefs","payload":<%=context.strJsonPref.toString()%>}
				]]>
				</jsonbody>
			</websocket>
		</then>
		</if>
	</function>
	<function name="HandletopoSelectOverlay">
		<string name="deact"/>
		<string name="act"/>
		<script><![CDATA[
			var info = JSON.parse(event.getParam("eventdata").toString());
			if (info.payload != null)
			{
				var deactivate = info.payload.deactivate;
				var activate=info.payload.activate;
				if (deactivate != null)
				{
					context.deact.setValue(deactivate);
				}
				if (activate != null)
				{
					context.act.setValue(activate);
				}
			}
			]]>
		</script>
		<log>HandletopoSelectOverlay</log>
	</function>
	<function name="clusterListenerProcess">
		<parameters>
			<string name="type"/>
			<hashmap name="instanceinfo"/>			
		</parameters>
		<log>clusterListenerProcess</log>
	</function>
	<function name="deviceListenerProcess">
		<parameters>
			<string name="type"/>
			<object name="deviceobj"/>			
		</parameters>
		<log>deviceListenerProcess</log>
	</function>
	<function name="linkListenerProcess">
		<parameters>
			<string name="type"/>
			<string name="fromdevice"/>
			<string name="todevice"/>
			<string name="path"/>		
		</parameters>
		<log>linkListenerProcess</log>
	</function>
	<function name="hostListenerProcess">
		<parameters>
			<string name="type"/>
			<object name="hostobject"/>	
		</parameters>
		<log level="100">$$$$$$$$$$$$$$</log>
		<log level="100"><![CDATA[ hostListenerProcess type= <%=context.type.toString()%>]]></log>
		<log level="100">$$$$$$$$$$$$$$</log>
		<log>hostListenerProcess</log>
		<string name="strjson"/>
		<if cond="context.hostobject.ptr==null">
			<then>
				<log>context.hostobject.ptr==null</log>
				<exit/>
			</then>
		</if>
		<if cond="context.type=='remove'">
			<then>
				<!--获取删除host json信息-->
				<log level="100">topo websocket removehost </log>
				<function name="ToRemoveHost2Json" class="hostobject">
					<parameters>
						<string name="strjson" out="context.strjson"/>
					</parameters>
				</function>
			</then>
		</if>
		<if cond="context.type.toString()=='add'">
			<then>
				<function name="ToAddHost2Json" class="hostobject">
					<parameters>
						<string name="strjson" out="context.strjson"/>
					</parameters>
				</function>
			</then>
		</if>
		
		<!--向所有客户端发送删除host消息-->
		<function name="SendToAllClient" class="WebSocketManager">
			<parameters>
				<string name="strjson" in="context.strjson.toString()"/>			
			</parameters>
		</function>
	</function>
	<function name="AddListeners">
		<function>
			<function name="addListener" class="ClusterManager">
				<parameters>
					<string name="callbackfun" in="'clusterListenerProcess'"/>		
				</parameters>
			</function>
			<function name="addListener" class="DeviceManager">
				<parameters>
					<string name="callbackfun" in="'deviceListenerProcess'"/>		
				</parameters>
			</function>
			<function name="addListener" class="TopoManager">
				<parameters>
					<string name="callbackfun" in="'linkListenerProcess'"/>		
				</parameters>
			</function>
			<function name="addListener" class="HostManager">
				<parameters>
					<string name="callbackfun" in="'hostListenerProcess'"/>		
				</parameters>
			</function>
		</function>
	</function>
	<function name="RemoveListeners">
		<function>
			<function name="removeListener" class="ClusterManager">
				<parameters>
					<string name="callbackfun" in="'clusterListenerProcess'"/>		
				</parameters>
			</function>
			<function name="removeListener" class="DeviceManager">
				<parameters>
					<string name="callbackfun" in="'deviceListenerProcess'"/>		
				</parameters>
			</function>
			<function name="removeListener" class="TopoManager">
				<parameters>
					<string name="callbackfun" in="'linkListenerProcess'"/>		
				</parameters>
			</function>
			<function name="removeListener" class="HostManager">
				<parameters>
					<string name="callbackfun" in="'hostListenerProcess'"/>		
				</parameters>
			</function>
		</function>
	</function>
	<function name="HandleTopoStart">
		<function>
			<function name="AddListeners"/>
			<function name="SendAddInstance"/>
			<function name="SendAddAllDevice"/>
			<function name="SendAddAllLink"/>
			<function name="SendAddAllHost"/>
			<function name="SendTopoStartDone"/>
		</function>
	</function>
	<function name="HandleRequestSummary">
		<function name="requestSummary"/>
		<function name="startSummaryMonitoring"/>
	</function>
	<function name="SendAddInstance">
		<string name="sendstrjson"/>
		<function>
			<function name="AddInstanceRequest" class="gInstanceManager">
				<parameters>
					<string name="transportid" in="event.getParam('transportid').toString()"/>						
				</parameters>
			</function>
		</function>
	</function>
	<function name="SendAddAllLink">
		<function name="SendAddAllLinkToWebClient" class="TopoManager">
			<parameters>
				<string name="transportid" in="event.getParam('transportid').toString()"/>
			</parameters>
		</function>
	</function>
	<function name="SendAddAllDevice">
		<function name="SendAddAllDeviceToWebClient" class="DeviceManager">
			<parameters>
				<string name="transportid" in="event.getParam('transportid').toString()"/>
			</parameters>
		</function>
	</function>
	<!--YY 20170912-->
	<function name="SendAddAllHost">
	<log> topo SendAddAllHost  #################</log>
		<function name="SendAddAllHostToWebClient" class="HostManager">
			<parameters>
				<string name="transportid" in="event.getParam('transportid').toString()"/>
			</parameters>
		</function>
	</function>
	<!--qiulei 20170912 am -->
	
	<function name="requestSummary">
		<string name="sendstrjson"/>
		
		<long name="deviceCounts"/>
		<long name="linkCounts"/>
		<long name="hostCounts"/>
		<long name="tunnelCounts"/>
		<long name="flowCounts"/>
		<function name="GetDeviceCounts" class="DeviceManager">
			<parameters>
				<long name="deviceCounts" out="context.deviceCounts"/>
			</parameters>
		</function>

		<!-- qiulei 2017/12/28 pm  Get topoCounts-->
		<function name="GettopoSize" class="TopoManager">
			<parameters>
				<long name="toposize" out="context.linkCounts"/>
			</parameters>
		</function>
		
		<!-- qiulei 2017/12/28 pm  Get hostCounts-->
		<function name="GetHostCounts" class="HostManager">
			<parameters>
				<long name="hostCounts" out="context.hostCounts"/>
			</parameters>
		</function>
		
		<!-- qiulei 2017/12/28 pm  Get tunnelCounts-->
		<function name="GetTunnelCounts" class="TunnelManager">
			<parameters>
				<long name="tunnelCounts" out="context.tunnelCounts"/>
			</parameters>
		</function>
		
		
		<!-- qiulei 2017/12/28 pm  Get flowCounts-->
		<function name="getAllDeviceFlowCounts" class="DeviceManager">
	    	<parameters>
	    		<long name="AllDeviceflowCounts" out="context.flowCounts"/>
			</parameters>
		</function>
		<log><![CDATA[requestSummary websockettransportid <%=context.websockettransportid.toString()%>]]></log>
		<websocket name="restfulserver" method="SendText" transportid="context.websockettransportid.toString()">
			<jsonbody>
			<![CDATA[
					{
						"event": "showSummary",
						"payload": {
							"title": "Staros Summary",
							"type": "node",
							"id": null,
							"propOrder": [
								"Version",
								"-",
								"Devices",
								"Links",
								"Hosts",
								"Topology SCCs",
								"-",
								"Intents",
								"Tunnels",
								"Flows"
							],
							"props": {
								"Version": "1.10.0",
								"-": "",
								"Devices": "<%=context.deviceCounts.toString()%>",
								"Links": "<%=context.linkCounts.toString()%>",
								"Hosts": "<%=context.hostCounts.toString()%>",
								"Topology SCCs": "1",
								"Intents": "0",
								"Tunnels": "<%=context.tunnelCounts.toString()%>",
								"Flows": "<%=context.flowCounts.toString()%>"
							},
							"buttons": []
						}
					}
					
				]]>
			</jsonbody>
		</websocket>
	</function>
	<function name="startSummaryMonitoring">
		<log>startSummaryMonitoring</log>
		<set name="summaryRunning" value="true"/>
		<timer name="context.requestSummaryTimer" method="StartTimer" event="'requestSummaryTimerOutEvent'" timeout="2000"/>
	</function>
	<function name="stopSummaryMonitoring">
		<log>stopSummaryMonitoring</log>
		<set name="summaryRunning" value="false"/>
		<timer name="context.requestSummaryTimer" method="StopTimer"/>
	</function>
	<function name="SendTopoStartDone">
		<function>
			<websocket name="restfulserver" method="SendText" transportid="event.getParam('transportid').toString()">
				<jsonbody>
				<![CDATA[
					{"event":"topoStartDone","payload":{}}
					]]>
				</jsonbody>
			</websocket>
		</function>
	</function>
	<function name="HandleTopoStop">
		<function name="RemoveListeners"/>
		<function name="stopSummaryMonitoring"/>
		<function name="stopMonitoring" class="traffic"/>
	</function>
	<function name="HandleDetailsReq">
		<string name="id"/>
		<string name="type"/>
		<script><![CDATA[
			var info = JSON.parse(event.getParam("eventdata").toString());
			if (info.payload != null)
			{
				var dataid = info.payload.id;
				var type=info.payload.class;
				if (type == null)
				{
					type='unkown';
				}
				context.type.setValue(type);
				context.id.setValue(dataid);
			}
			]]>
		</script>
		<if cond="context.type=='device'">
			<then>
				<script><![CDATA[
					var final_id = context.id.toString().split(":")[1];
					context.id.setValue(final_id);
				]]></script>
				<function name="SendDetails" class="DeviceManager">	
					<parameters>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="datapathid" in="context.id.toString()"/>	
					</parameters>
				</function>
			</then>
			<elseif cond="context.type=='host'">
				<function name="SendDetails" class="HostManager">	
					<parameters>
						<string name="transportid" in="event.getParam('transportid').toString()"/>
						<string name="hostid" in="context.id.toString()"/>	
					</parameters>
				</function>
			</elseif>
			<else>
				<exit/>
			</else>
		</if>
	</function>
	<function name="HandleUpdateMeta">
		<log>HandleUpdateMeta</log>
		<string name="id"/>
		<string name="memento"/>
		<script><![CDATA[
			var info = JSON.parse(event.getParam("eventdata").toString());
			if (info.payload != null)
			{
				var dataid = info.payload.id;
				if (dataid != null)
				{
					context.id.setValue(dataid);
				}
				var memento=info.payload.memento;
				if (memento != null)
				{
					var strjson=JSON.stringify(memento);
					context.memento.setValue(strjson);
				}
			}
			]]>
		</script>
		<if cond="context.memento.size() == 0 ">
			<then>
				<syslog level="INFO"> ###### HandleUpdateMeta memento is NULL ######</syslog>
				<exit/>
			</then>
		</if>
		<if cond="context.id.size() == 0 ">
			<then>
				<syslog level="INFO"> ###### HandleUpdateMeta id is NULL ######</syslog>
				<exit/>
			</then>
		</if>
		<syslog level="INFO"><![CDATA[HandleUpdateMeta id = <%=context.id.toString()%>]]></syslog>
		<syslog level="INFO"><![CDATA[HandleUpdateMeta memento = <%=context.memento.toString()%>]]></syslog>
		<if cond="context.metaUi.hasValue(context.id.toString())!=true">
			<then>
				<insert name="context.metaUi" key="context.id.toString()" value="context.memento.toString()"/>
			</then>
			<else>
				<remove name="context.metaUi" key="context.id.toString()"/>
				<insert name="context.metaUi" key="context.id.toString()" value="context.memento.toString()"/>
			</else>
		</if>
	</function>
	<function name="ReqAllFlowTrafficProcess">
		<function name="monitor" class="traffic">
			<parameters>
				<string name="mode" in="'ALL_FLOW_TRAFFIC'"/>
			</parameters>
		</function>
	</function>
	<function name="ReqAllPortTrafficProcess">
		<function name="monitor" class="traffic">
			<parameters>
				<string name="mode" in="'ALL_PORT_TRAFFIC'"/>
			</parameters>
		</function>
	</function>

	<function name="HandleAddHostIntent">
		<log>HandleAddHostIntent</log>
	</function>
	<function name="HandleRemoveIntent">
		<log>HandleRemoveIntent</log>
	</function>
	<function name="HandleResubmitIntent">
		<log>HandleResubmitIntent</log>
	</function>
	<function name="HandleAddMultiSourceIntent">
		<log>HandleAddMultiSourceIntent</log>
	</function>
	<function name="HandleRequestRelatedIntents">
		<log>HandleRequestRelatedIntents</log>
	</function>
	<function name="HandleRequestNextRelatedIntent">
		<log>HandleRequestNextRelatedIntent</log>
	</function>
	<function name="HandleRequestPrevRelatedIntent">
		<log>HandleRequestPrevRelatedIntent</log>
	</function>
	<function name="HandleRequestSelectedIntentTraffic">
		<log>HandleRequestSelectedIntentTraffic</log>
	</function>
	<function name="HandleSelectIntent">
		<log>HandleSelectIntent</log>
	</function>
	<function name="HandleRequestAllFlowTraffic">
		<log>HandleRequestAllFlowTraffic</log>
		<function name="monitor" class="traffic">
			<parameters>
				<string name="mode" in="'ALL_FLOW_TRAFFIC'"/>
			</parameters>
		</function>
	</function>
	<function name="HandleRequestAllPortTraffic">
		<log>HandleRequestAllPortTraffic</log>
		<function name="monitor" class="traffic">
			<parameters>
				<string name="mode" in="'ALL_PORT_TRAFFIC'"/>
			</parameters>
		</function>
	</function>
	<function name="HandleRequestDeviceLinkFlows">
		<log>HandleRequestDeviceLinkFlows</log>
		<function name="monitor" class="traffic">
			<parameters>
				<string name="mode" in="'DEV_LINK_FLOWS'"/>
			</parameters>
		</function>
	</function>
	<function name="HandleCancelTraffic">
		<log>HandleCancelTraffic</log>
		<function name="stopMonitoring" class="traffic"/>
	</function>
	<function name="HandleCancelSummary">
		<log>HandleCancelSummary</log>
		<function name="stopSummaryMonitoring"/>
	</function>
	<function name="HandleEqualizeMasters">
		<log>HandleEqualizeMasters</log>
	</function>
	<function name="HandleSpriteDataRequest">
		<log>HandleSpriteDataRequest</log>
	</function>
	<function name="HandleSpriteListRequest">
		<log>HandleSpriteListRequest</log>
	</function>
	<events>
		<onevent event="requestSummaryTimerOutEvent">
			<function>
				<log>requestSummaryTimerOutEvent</log>
				<if cond="context.summaryRunning.toBoolean()==true">
					<then>
						<function name="requestSummary"/>
					</then>
				</if>
			</function>
		</onevent>
	</events>
</starlang>