<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (C) 2013-2016 Nanjing StarOS Technology Co., Ltd
	All rights reserved.
	
	@file 		staros_websocket_policy.xml
	@brief 		handle policy' data
	@version 	1.1.0
	@auth 		qiulei
	@date		2018/01/13
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<starlang xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	<!--
		@brief		处理 policy 数据请求
		@auth 		qiulei
		@date		2018/01/13
		Input:
		Output:					
	-->
	<function name="HandlePolicysRequest">
		<log level="100"><![CDATA[----staros_websocket_policy.xml 33行,enter HandlePolicysRequest]]></log>
		<string name="policyjson"/>
		<string name="outjson"/>
		
		<function name="GetAllPolicy" class="PolicyManager">
			<parameters>
				<string name="policystr" out="context.policyjson"/>
			</parameters>
		</function>
		<log level="100"><![CDATA[----staros_websocket_policy.xml 43行,<%=context.policyjson.toString()%>]]></log>
		<script><![CDATA[
				context.print("staros_websocket_policy.xml 44,policyjson="+context.policyjson.toString());
				var policyobj=JSON.parse(context.policyjson.toString());
				var jsonroot = new Object();
					jsonroot['event'] = "policyDataResponse";
					jsonroot['payload'] = policyobj;
					
				var strjson=JSON.stringify(jsonroot);
				context.print("----staros_websocket_policy.xml 51,strjson="+strjson);
				context.outjson.setValue(strjson);
			]]></script>
			
		<log level="100"><![CDATA[----staros_websocket_policy.xml 53行,execute HandlePolicysRequest over]]></log>
		<websocket name="restfulserver" method="SendText" transportid="event.getParam('transportid').toString()">
			<jsonsrc src="outjson"/>
		</websocket>
	</function>
	
	
	<!--qiulei 20180113  pm funcition:HandlePolicyDetailsRequest-->
	<function name="HandlePolicyDetailsRequest">
		<log level="100"><![CDATA[----staros_websocket_policy.xml 62行,enter HandlePolicyDetailsRequest]]></log>
		<string name="datapathid"/>
		<script><![CDATA[
			var info = JSON.parse(event.getParam('eventdata').toString());
			context.print("----staros_websocket_policy.xml  62 info="+info);
			var  dataid = info.payload.id;
			var final_id=dataid.split(":")[1];
			context.datapathid.setValue(final_id);
		]]></script>
		
		
		<string name="onepolicystr"/>
		<function name="GetPolicybyid" class="PolicyManager">
			<parameters>
				<string name="policyid" in="context.datapathid.toString()"/>
				<string name="onepolicystr" out="context.onepolicystr"/>
			</parameters>
		</function>
		
		<script><![CDATA[
			var policyobj=JSON.parse(context.onepolicystr.toString());
			var jsonroot = new Object();
				jsonroot['event'] = "policyDetailsResponse";
				jsonroot['payload'] = policyobj;
				
			var strjson=JSON.stringify(jsonroot);
			context.outjson.setValue(strjson);
		]]></script>
		
		<log level="100"><![CDATA[----staros_websocket_policy.xml 91行,execute HandlePolicyDetailsRequest over]]></log>
		<websocket name="restfulserver" method="SendText" transportid="event.getParam('transportid').toString()">
			<jsonsrc src="onepolicystr"/>
		</websocket>
	</function>
</starlang>