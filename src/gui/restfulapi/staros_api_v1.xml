<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (C) 2013-2016 Nanjing StarOS Technology Co., Ltd
	All rights reserved.
	
	@file 		staros_api_v1.xml
	@brief 		api页面的路径请求和处理
	@version 	1.1.0
	@auth 		hu peng (hupeng@staros.xyz)
	@date		2017/11/27

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<starlang xmlns="http://www.staros.xyz/starcore" scope="application">
	<include src="/opt/staros.xyz/staroscontroller/starlang/gui/restfulapi/device/staros_api_device.xml"/>
	<include src="/opt/staros.xyz/staroscontroller/starlang/gui/restfulapi/flows/staros_api_flows.xml"/>
	<include src="/opt/staros.xyz/staroscontroller/starlang/gui/restfulapi/staros_api_map.xml"/>
	<include src="/opt/staros.xyz/staroscontroller/starlang/gui/restfulapi/topology/staros_api_topology.xml"/>
	<!--WebGUI-->
	<!--{"code":404,"message":"HTTP 404 Not Found"}-->
	<function name="HandlAPIRequest">
		<parameters>
			<string name="requestpath"/>
			<string name="method"/>
			<string name="eventdata"/>
			<string name="transportid"/>
		</parameters>
		<log level="11">15行 ----INSERT HandlAPIRequest staros_api_v1.xml</log>
		<string name="functionname"/>
		<params name="httpparam"/>
		<boolean name="isHaveHandler"/>
		<string name="usernameparam"/>
		<string name="passwordparam"/>
		<string name="authresult"/>
		<messageblock name="authresultmsg"/>
		<string name="authjson"/>
		<boolean name="isAPI" value="false"/>
		<boolean name="iseditor" value="false"/>
		<string name="injson"/>
		<string name="outjson"/>
		<string name="contenttype"/>
		<string name="filepath"/>
		
		<string name="swaggerjsonout"/>
		<string name="errorjson"/>
		<string name="content"/>
		<boolean name="isfile"/>
		<string name="jsonfilepath" value="'/opt/staros.xyz/staroscontroller/starlang/gui/restfulapi/onos/v1/docs/apis/onos/v1/swagger.json'"/>
		<messageblock name="filecontents"/>
		<log>HandleAPI</log>
		<log><![CDATA[HandleAPI request path <%=context.requestpath.toString()%>]]></log>
		<log><![CDATA[Authorization !!!!! <%=event.getParam("Authorization").toString()%>]]></log>	



		<if cond="context.isAPIAuth.toBoolean()==false">
			<then>
				<if cond="context.requestpath.toString()=='/onos/v1/docs/apisv1/swagger.json'">
					<then>
						<set name="isfile" value="context.isFile(context.jsonfilepath.toString())"/>
							<if cond="context.isfile.toBoolean()==true">
								<then>
									<file method="readfile" name="context.jsonfilepath.toString()" data="context.filecontents"/>
									
									<set name="content" value="context.filecontents.toString()"/>
								</then>
							</if>
						<function name="dataHandle" class="APIDocsService">
							<parameters>
								<string name="swaggerjsonstring" in="context.content.toString()"/>
								<string name="swaggerjsonout" out="context.swaggerjsonout"/>
							</parameters>
						</function>	
						
						<set name="httpparam" paramname="Server" value="'StarOS'"/>
						<set name="httpparam" paramname="Connection" value="'Close'"/>
						<set name="httpparam" paramname="Content-Type" value="'application/json'"/>
						<restful name="restfulserver" action="RESPONSE" status="200" text="ok" transportid="event.getParam('transportid').toString()" httpparams="httpparam">
							<jsonsrc src="swaggerjsonout"/>
						</restful>
						<exit/>
					</then>
				</if>
		
				<if cond="context.requestpath.toString()=='/onos/v1/editor'">
					<then>
						<function>
							<set name="httpparam" paramname="Location" value="'/onos/v1/editor/index.html'"/>
							<restful name="restfulserver" action="RESPONSE" status="301" text="Moved Temporarily" transportid="context.transportid.toString()" httpparams="httpparam"/>
							<restful name="restfulserver" action="Disconnect" transportid="context.transportid.toString()"/>
						</function>
						<exit/>
					</then>
				</if>
		
				<script><![CDATA[
					var x = context.requestpath.toString();
					
					if (x.indexOf("/onos/v1/editor")>=0)
					{	
						context.iseditor.setValue(true);
					}else{
						context.iseditor.setValue(false);
					}
						
				]]></script>
				<if cond="context.iseditor.toBoolean()==true">
					<then>
						<log>iseditor is true!!!</log>
						<script><![CDATA[
							var x = context.requestpath.toString();
					
							var filename2="/opt/staros.xyz/staroscontroller/starlang/gui/restfulapi"+x;
							context.filepath.setValue(filename2);
							if(x.indexOf(".html") > 0 )   
							{   
								context.contenttype.setValue('text/html');  
							} 
							else if (x.indexOf(".png")>0)
							{
								context.contenttype.setValue('image/png');
							}
							else if (x.indexOf(".js")>0)
							{
								context.contenttype.setValue('text/javascript');
							}
							else if (x.indexOf(".css")>0)
							{
								context.contenttype.setValue('text/css');
							}
							else if (x.indexOf(".gif")>0)
							{
								context.contenttype.setValue('image/gif');
							}
							else if (x.indexOf(".woff")>0)
							{
								context.contenttype.setValue('application/x-font-woff');
							}
							else if (x.indexOf(".ttf")>0)
							{
								context.contenttype.setValue('application/x-font-woff');
							}
							else 
							{
								context.contenttype.setValue('text/html'); 
							}
						
						
						]]></script>
						<log><![CDATA[filepath!!!= '<%=context.filepath.toString()%>']]></log>
						<set name="httpparam" paramname="Server" value="'StarOS.xyz'"/>
						<set name="httpparam" paramname="Connection" value="'Close'"/>
						<set name="httpparam" paramname="Content-Type" value="context.contenttype.toString()"/>
						<restful name="restfulserver" action="RESPONSE" status="200" text="ok" transportid="context.transportid.toString()" httpparams="httpparam">
							<html file="context.filepath"/>
						</restful>
						<restful name="restfulserver" action="Disconnect" transportid="context.transportid.toString()"/>
					</then>
				</if>
		
				<if cond="context.requestpath.toString()=='/onos/v1/docs'">
					<then>
						<function>
							<set name="httpparam" paramname="Location" value="'/onos/v1/docs/index.html'"/>
							<restful name="restfulserver" action="RESPONSE" status="301" text="Moved Temporarily" transportid="context.transportid.toString()" httpparams="httpparam"/>
							<restful name="restfulserver" action="Disconnect" transportid="context.transportid.toString()"/>
						</function>
						<exit/>
					</then>
				</if>
				
				<script><![CDATA[
					var x = context.requestpath.toString();					
					if (x.indexOf("/onos/v1/docs")>=0)
					{	
						context.isAPI.setValue(true);
					}else{
						context.isAPI.setValue(false);
					}
							
				]]></script>
				  

				<if cond="context.isAPI.toBoolean()==true">
					<then>
					
						<log>isAPI is true!!!</log>
						<script><![CDATA[
							var x = context.requestpath.toString();
						
								var filename2="/opt/staros.xyz/staroscontroller/starlang/gui/restfulapi"+x;
								context.filepath.setValue(filename2);
								if(x.indexOf(".html") > 0 )   
								{   
									context.contenttype.setValue('text/html');  
								} 
								else if (x.indexOf(".png")>0)
								{
									context.contenttype.setValue('image/png');
								}
								else if (x.indexOf(".js")>0)
								{
									context.contenttype.setValue('text/javascript');
								}
								else if (x.indexOf(".css")>0)
								{
									context.contenttype.setValue('text/css');
								}
								else if (x.indexOf(".gif")>0)
								{
									context.contenttype.setValue('image/gif');
								}
								else if (x.indexOf(".woff")>0)
								{
									context.contenttype.setValue('application/x-font-woff');
								}
								else if (x.indexOf(".ttf")>0)
								{
									context.contenttype.setValue('application/x-font-woff');
								}
								else 
								{
									context.contenttype.setValue('text/html'); 
								}
							
							
						]]></script>
						<log><![CDATA[filepath!!!= '<%=context.filepath.toString()%>']]></log>
						<set name="httpparam" paramname="Server" value="'StarOS.xyz'"/>
						<set name="httpparam" paramname="Connection" value="'Close'"/>
						<set name="httpparam" paramname="Content-Type" value="context.contenttype.toString()"/>
						<restful name="restfulserver" action="RESPONSE" status="200" text="ok" transportid="context.transportid.toString()" httpparams="httpparam">
							<html file="context.filepath"/>
						</restful>
						<restful name="restfulserver" action="Disconnect" transportid="context.transportid.toString()"/>
					</then>
					<else>
						<log level="11">225行 ----staros_api_v1.xml</log>
						<vector name="pathvector" valuetype="string"/>
						<hashmap name="queryparams" keytype="string" valuetype="string"/>
						<set name="functionname" value="global.APIV1MapFunction.matchFind(context.requestpath.toString(),context.pathvector, context.queryparams)"/>
						<if cond="context.functionname.toString() != ''">
							<then>
								<log level="11">230行 ----staros_api_v1.xml</log>
								<log level="100"><![CDATA[231 functionname= <%=context.functionname.toString()%>]]></log>
								<log level="100"><![CDATA[233 requestpath= <%=context.requestpath.toString()%>]]></log>
								<log level="100"><![CDATA[234 method= <%=context.method.toString()%>]]></log>
								<function callback="functionname">
									<parameters>
										<string name="requestpath" in="context.requestpath.toString()"/>
										<string name="method" in="context.method.toString()"/>
										<string name="eventdata" in="context.eventdata.toString()"/>
										<vector name="pathvector" in="context.pathvector"/>
										<hashmap name="queryparams" in="context.queryparams"/>
									</parameters>
								</function>
							</then>
							<else>
								<function>
									<log level="11">239行 ----staros_api_v1.xml 开始调用HandleAPI</log>
									<function name="HandleAPI" class="RestfulService">
										<parameters>
											<string name="requestpath" in="context.requestpath.toString()"/>
											<string name="method" in="context.method.toString()"/>
											<string name="eventdata" in="context.eventdata.toString()"/>
										</parameters>
									</function>
									<log><![CDATA[Don't have the HandleAPI for requestpath= <%=context.requestpath.toString()%>]]></log>
								</function>
							</else>
						</if>
					</else>
				</if>
			</then>	
		
		<else>
			<if cond="event.getParam('Authorization')==''">
				<then>
					<set name="httpparam" paramname="Server" value="'StarOS.xyz'"/>
					<set name="httpparam" paramname="Connection" value="'Close'"/>
					<set name="httpparam" paramname="WWW-Authenticate" value="'Basic realm=\'StarOSDocs\''"/>
					<restful name="restfulserver" action="RESPONSE" status="401" text="ok" transportid="context.transportid.toString()" httpparams="httpparam"/>
					<restful name="restfulserver" action="Disconnect" transportid="context.transportid.toString()"/>
					<exit/>
				</then>
			<else>
					<script><![CDATA[
						
						var strs = event.getParam("Authorization").toString();
						var str=strs.split(" ")[1];

						var Base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(e){var t="";var n,r,i,s,o,u,a;var f=0;e=Base64._utf8_encode(e);while(f<e.length){n=e.charCodeAt(f++);r=e.charCodeAt(f++);i=e.charCodeAt(f++);s=n>>2;o=(n&3)<<4|r>>4;u=(r&15)<<2|i>>6;a=i&63;if(isNaN(r)){u=a=64}else if(isNaN(i)){a=64}t=t+this._keyStr.charAt(s)+this._keyStr.charAt(o)+this._keyStr.charAt(u)+this._keyStr.charAt(a)}return t},decode:function(e){var t="";var n,r,i;var s,o,u,a;var f=0;e=e.replace(/[^A-Za-z0-9+/=]/g,"");while(f<e.length){s=this._keyStr.indexOf(e.charAt(f++));o=this._keyStr.indexOf(e.charAt(f++));u=this._keyStr.indexOf(e.charAt(f++));a=this._keyStr.indexOf(e.charAt(f++));n=s<<2|o>>4;r=(o&15)<<4|u>>2;i=(u&3)<<6|a;t=t+String.fromCharCode(n);if(u!=64){t=t+String.fromCharCode(r)}if(a!=64){t=t+String.fromCharCode(i)}}t=Base64._utf8_decode(t);return t},_utf8_encode:function(e){e=e.replace(/rn/g,"n");var t="";for(var n=0;n<e.length;n++){var r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r)}else if(r>127&&r<2048){t+=String.fromCharCode(r>>6|192);t+=String.fromCharCode(r&63|128)}else{t+=String.fromCharCode(r>>12|224);t+=String.fromCharCode(r>>6&63|128);t+=String.fromCharCode(r&63|128)}}return t},_utf8_decode:function(e){var t="";var n=0;var r=c1=c2=0;while(n<e.length){r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r);n++}else if(r>191&&r<224){c2=e.charCodeAt(n+1);t+=String.fromCharCode((r&31)<<6|c2&63);n+=2}else{c2=e.charCodeAt(n+1);c3=e.charCodeAt(n+2);t+=String.fromCharCode((r&15)<<12|(c2&63)<<6|c3&63);n+=3}}return t}}  

						var decodedString = Base64.decode(str);  
						var username=decodedString.split(":")[0];
						var password=decodedString.split(":")[1];
						context.print("username"+username);
						context.print("password"+password);
						context.usernameparam.setValue(username);
						context.passwordparam.setValue(password);
					]]></script>
					
									
					<log><![CDATA[username= '<%=context.usernameparam.toString()%>']]></log>
					<log><![CDATA[password= '<%=context.passwordparam.toString()%>']]></log>
					<reference variable="injson">
						<jsonbody><![CDATA[ 
							{
								"username":"<%=context.usernameparam.toString()%>",
								"password":"<%=context.passwordparam.toString()%>"
							}
						]]></jsonbody>
					</reference>
						
							<localcall method="AuthRequest" inparam="context.injson" outparam="context.outjson"/>
							<log><![CDATA[AuthRequest injson= '<%=context.injson.toString()%>']]></log>
							<log><![CDATA[AuthRequest outparam= '<%=context.outjson.toString()%>']]></log>
							<script><![CDATA[
								var info = JSON.parse(context.outjson.toString());
								context.authresult.setValue(info.result);
							]]></script>
						<log><![CDATA[auth reply json= '<%=context.authjson.toString()%>']]></log>
						<if cond="context.authresult.toString() == 'error'">
							<then>
								<log>auth failure</log>
								<reference variable="errorjson">
									<jsonbody><![CDATA[ 
										{"code":"404","message":"HTTP 404 Not Found"}
									]]></jsonbody>
								</reference>
									<set name="httpparam" paramname="Server" value="'StarOS'"/>
									<set name="httpparam" paramname="Connection" value="'Close'"/>
									<set name="httpparam" paramname="Content-Type" value="'application/json'"/>
									<restful name="restfulserver" action="RESPONSE" status="404" text="ok" transportid="event.getParam('transportid').toString()" httpparams="httpparam">
										<jsonsrc src="errorjson"/>
									</restful>
									<exit/>
							</then>
						</if>
			</else>
		</if>

		<if cond="context.requestpath.toString()=='/onos/v1/docs/apisv1/swagger.json'">
			<then>
				<set name="isfile" value="context.isFile(context.jsonfilepath.toString())"/>
					<if cond="context.isfile.toBoolean()==true">
						<then>
							<file method="readfile" name="context.jsonfilepath.toString()" data="context.filecontents"/>
							<log><![CDATA[filecontents = '']]></log>
							<set name="content" value="context.filecontents.toString()"/>
						</then>
					</if>
				<function name="dataHandle" class="APIDocsService">
					<parameters>
						<string name="swaggerjsonstring" in="context.content.toString()"/>
						<string name="swaggerjsonout" out="context.swaggerjsonout"/>
					</parameters>
				</function>	
				
				<set name="httpparam" paramname="Server" value="'StarOS'"/>
				<set name="httpparam" paramname="Connection" value="'Close'"/>
				<set name="httpparam" paramname="Content-Type" value="'application/json'"/>
				<restful name="restfulserver" action="RESPONSE" status="200" text="ok" transportid="event.getParam('transportid').toString()" httpparams="httpparam">
					<jsonsrc src="swaggerjsonout"/>
				</restful>
				<exit/>
			</then>
		</if>
		
		<if cond="context.requestpath.toString()=='/onos/v1/editor'">
			<then>
				<function>
					<set name="httpparam" paramname="Location" value="'/onos/v1/editor/index.html'"/>
					<restful name="restfulserver" action="RESPONSE" status="301" text="Moved Temporarily" transportid="context.transportid.toString()" httpparams="httpparam"/>
					<restful name="restfulserver" action="Disconnect" transportid="context.transportid.toString()"/>
				</function>
				<exit/>
			</then>
		</if>
		
		<script><![CDATA[
			var x = context.requestpath.toString();
			
			if (x.indexOf("/onos/v1/editor")>=0)
			{	
				context.iseditor.setValue(true);
			}else{
				context.iseditor.setValue(false);
			}
				
		]]></script>
		<if cond="context.iseditor.toBoolean()==true">
			<then>
				<log>iseditor is true!!!</log>
				<script><![CDATA[
					var x = context.requestpath.toString();
			
					var filename2="/opt/staros.xyz/staroscontroller/starlang/gui/restfulapi"+x;
					context.filepath.setValue(filename2);
					if(x.indexOf(".html") > 0 )   
					{   
						context.contenttype.setValue('text/html');  
					} 
					else if (x.indexOf(".png")>0)
					{
						context.contenttype.setValue('image/png');
					}
					else if (x.indexOf(".js")>0)
					{
						context.contenttype.setValue('text/javascript');
					}
					else if (x.indexOf(".css")>0)
					{
						context.contenttype.setValue('text/css');
					}
					else if (x.indexOf(".gif")>0)
					{
						context.contenttype.setValue('image/gif');
					}
					else if (x.indexOf(".woff")>0)
					{
						context.contenttype.setValue('application/x-font-woff');
					}
					else if (x.indexOf(".ttf")>0)
					{
						context.contenttype.setValue('application/x-font-woff');
					}
					else 
					{
						context.contenttype.setValue('text/html'); 
					}
				
				
					 ]]></script>
					<log><![CDATA[filepath!!!= '<%=context.filepath.toString()%>']]></log>
					<set name="httpparam" paramname="Server" value="'StarOS.xyz'"/>
					<set name="httpparam" paramname="Connection" value="'Close'"/>
					<set name="httpparam" paramname="Content-Type" value="context.contenttype.toString()"/>
					<restful name="restfulserver" action="RESPONSE" status="200" text="ok" transportid="context.transportid.toString()" httpparams="httpparam">
						<html file="context.filepath"/>
					</restful>
					<restful name="restfulserver" action="Disconnect" transportid="context.transportid.toString()"/>
				</then>
			</if>
		
		<if cond="context.requestpath.toString()=='/onos/v1/docs'">
			<then>
				<function>
					<set name="httpparam" paramname="Location" value="'/onos/v1/docs/index.html'"/>
					<restful name="restfulserver" action="RESPONSE" status="301" text="Moved Temporarily" transportid="context.transportid.toString()" httpparams="httpparam"/>
					<restful name="restfulserver" action="Disconnect" transportid="context.transportid.toString()"/>
				</function>
				<exit/>
			</then>
		</if>
		<script><![CDATA[
			var x = context.requestpath.toString();
			
			if (x.indexOf("/onos/v1/docs")>=0)
			{	
				context.isAPI.setValue(true);
			}else{
				context.isAPI.setValue(false);
			}
					
		]]></script>
				  

		<if cond="context.isAPI.toBoolean()==true">
			<then>
			
			<log>isAPI is true!!!</log>
				<script><![CDATA[
					var x = context.requestpath.toString();
				
						var filename2="/opt/staros.xyz/staroscontroller/starlang/gui/restfulapi"+x;
						context.filepath.setValue(filename2);
						if(x.indexOf(".html") > 0 )   
						{   
							context.contenttype.setValue('text/html');  
						} 
						else if (x.indexOf(".png")>0)
						{
							context.contenttype.setValue('image/png');
						}
						else if (x.indexOf(".js")>0)
						{
							context.contenttype.setValue('text/javascript');
						}
						else if (x.indexOf(".css")>0)
						{
							context.contenttype.setValue('text/css');
						}
						else if (x.indexOf(".gif")>0)
						{
							context.contenttype.setValue('image/gif');
						}
						else if (x.indexOf(".woff")>0)
						{
							context.contenttype.setValue('application/x-font-woff');
						}
						else if (x.indexOf(".ttf")>0)
						{
							context.contenttype.setValue('application/x-font-woff');
						}
						else 
						{
							context.contenttype.setValue('text/html'); 
						}
					
					
				 ]]></script>
				<log><![CDATA[filepath!!!= '<%=context.filepath.toString()%>']]></log>
				<set name="httpparam" paramname="Server" value="'StarOS.xyz'"/>
				<set name="httpparam" paramname="Connection" value="'Close'"/>
				<set name="httpparam" paramname="Content-Type" value="context.contenttype.toString()"/>
				<restful name="restfulserver" action="RESPONSE" status="200" text="ok" transportid="context.transportid.toString()" httpparams="httpparam">
					<html file="context.filepath"/>
				</restful>
				<restful name="restfulserver" action="Disconnect" transportid="context.transportid.toString()"/>
			</then>
			<else>
				<log level="11">502 --staros_api_vi.xml</log>
				<vector name="pathvector"/>
				<hashmap name="queryparam" keytype="string" valuetype="string"/>
				<set name="functionname" value="global.APIV1MapFunction.matchFind(context.requestpath.toString(),context.pathvector,context.queryparam)"/>
				
				<if cond="context.functionname.toString() != ''">
					<then>
						<log level="11">508 --staros_api_vi.xml</log>
						<function callback="functionname">
							<parameters>
								<string name="requestpath" in="context.requestpath.toString()"/>
								<string name="method" in="context.method.toString()"/>
								<string name="eventdata" in="context.eventdata.toString()"/>
								<vector name="pathvector" in="context.pathvector"/>
								<hashmap name="queryparam" in="context.queryparam"/>
							</parameters>
						</function>
					</then>
					<else>
						<log level="11">519 --staros_api_vi.xml</log>
						<function>							
							<function name="HandleAPI" class="RestfulService">
								<parameters>
									<string name="requestpath" in="context.requestpath.toString()"/>
									<string name="method" in="context.method.toString()"/>
									<string name="eventdata" in="context.eventdata.toString()"/>
								</parameters>
							</function>
							<log><![CDATA[Don't have the HandleAPI for requestpath= <%=context.requestpath.toString()%>]]></log>
						</function>
					</else>
				</if>
			</else>
		</if>
		</else>			
		</if>


</function>
</starlang>