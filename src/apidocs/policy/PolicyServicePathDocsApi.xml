<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (C) 2013-2016 Nanjing StarOS Technology Co., Ltd
	All rights reserved.
	
	@file 		PolicyServicePathDocsApi.xml
	@brief 		定义路径
	@version 	1.1.0
	@auth 		qiulei
	@date		2018/01/08

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<starlang xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	
	<!--
		@brief		添加路径
		@auth 		qiulei
		@date		2018/01/08
		Input:
		Output: 
	-->
	<function name="policy_addPath">		
		<function name="allPolicy"/>			
		<function name="addPostRequestPath"/>
		<function name="otherPolicymethods"/>
	</function>

	<!--
		@brief		删除路径
		@auth 		qiulei
		@date		2018/01/09
		Input:
		Output: 
	-->
	<function name="policy_removePath">
		<function name="removePath" class="APIDocsService">
			<parameters>
				<string name="pathname" in="'/policy/policys'"/>			
			</parameters>
		</function>
		<function name="removePath" class="APIDocsService">
			<parameters>
				<string name="pathname" in="'/policy/policy'"/>			
			</parameters>
		</function>
		<function name="removePath" class="APIDocsService">
			<parameters>
				<string name="pathname" in="'/policy/policy/{policyid}'"/>
			</parameters>
		</function>
	</function>

	<!--
		@brief		定义所有Policy
		@auth 		qiulei
		@date		2018/01/09
		Input:
		Output: 
	-->
	<function name="allPolicy">
		<string name="name"/>
		<string name="pathconntent"/>
		<reference variable="pathconntent">
			<jsonbody><![CDATA[ 
				{
					"get": {
						"tags": [
							"policy"
						],
						"summary": "Returns all Policys",
						"description": "",
						"parameters": [],
						"produces": [
							"application/json"
						],
						"responses": {
							"200": {
								"description": "successful operation",
								"schema": {
									"$ref": "#/definitions/Policys"
								}
							},
							"default": {
								"description": "Unexpected error"
							}
						}
					},
					"post": {
						"tags": [
							"policy"
						],
						"summary": "Create all Policys",
						"description": "",
						"parameters": [
							{
								"name": "stream",
								"in": "body",
								"type": "string",
								"description": "Create all Policys",
								"required": true,
								"schema": {
									"$ref": "#/definitions/PolicysJsonDemo"
								}					
							}
						],
						"consumes": [
							"application/octet_stream"
						],
						"produces": [
							"application/json"
						],
						"responses": {
							"200": {
								"description": "successful operation",
								"schema": {
									"$ref": "#/definitions/PolicyResult"
								}
							},
							"default": {
								"description": "Unexpected error"
							}
						}
					}
				}
			]]></jsonbody>
		</reference>
		<set name="context.name" value="'/policy/policys'"/>
		
		<!--调用staros-controller-1.1.0\src\providers\CAPIDocsService.xml类中的方法,qiulei 20180109-->
		<function name="addPath" class="APIDocsService">
			<parameters>
				<string name="pathname" in="context.name.toString()"/>
				<string name="pathconntent" in="context.pathconntent.toString()"/>
			</parameters>
		</function>
	</function>
	
	<function name="addPostRequestPath">
		<string name="name"/>
		<string name="pathconntent"/>
		<reference variable="pathconntent">
			<jsonbody><![CDATA[ 
				{
					"post": {
						"tags": [
							"policy"
						],
						"summary": "Create a new Policy",
						"description": "",
						"parameters": [
							{
								"name": "stream",
								"in": "body",
								"type": "string",
								"description": "Create one policy",
								"required": true,
								"schema": {
									"$ref": "#/definitions/Policy"
								}					
							}
						],
						"consumes": [
							"application/octet_stream"
						],
						"produces": [
							"application/json"
						],
						"responses": {
							"200": {
								"description": "successful operation",
								"schema": {
									"$ref": "#/definitions/PolicyResult"
								}
							},
							"default": {
								"description": "Unexpected error"
							}
						}
					}
				}
			]]></jsonbody>
		</reference>
		<set name="context.name" value="'/policy/policy'"/>
		
		<!--调用staros-controller-1.1.0\src\providers\CAPIDocsService.xml类中的方法,qiulei 20180109-->
		<function name="addPath" class="APIDocsService">
			<parameters>
				<string name="pathname" in="context.name.toString()"/>
				<string name="pathconntent" in="context.pathconntent.toString()"/>
			</parameters>
		</function>
	</function>
	
	<!--
		@brief		其他请求路径
		@auth 		qiulei
		@date		2018/01/09
		Input:
		Output: 
	-->
	<function name="otherPolicymethods">
		<string name="name"/>
		<string name="pathconntent"/>
		<reference variable="pathconntent">
			<jsonbody><![CDATA[ 
				{
					"get": {
						"tags": [
							"policy"
						],
						"summary": "Returns one Policy",
						"description": "",
						"parameters": [
							{
								"name": "policyid",
								"in": "path",
								"type": "string",
								"description": "Get one policy by policyid",
								"required": true						
							}
						],
						"produces": [
							"application/json"
						],
						"responses": {
							"200": {
								"description": "successful operation",
								"schema": {
									"$ref": "#/definitions/Policy"
								}
							},
							"default": {
								"description": "Unexpected error"
							}
						}
					},					
					
					"delete": {
						"tags": [
							"policy"
						],
						"summary": "Removes one Policy",
						"description": "",
						"parameters": [
							{
								"name": "policyid",
								"in": "path",
								"type": "string",
								"description": "Delete one Policy by policyid",
								"required": "true"
							}
						],
						"responses": {
							"200": {
								"description": "successful operation",
								"schema": {
									"$ref": "#/definitions/PolicyResult"
								}
							},
							"default": {
								"description": "Unexpected error"
							}
						}
					},
					
					
					
					"put": {
						"tags": [
							"policy"
						],
						"summary": "Update a Policy",
						"description": "",
						"parameters": [
							{
								"name": "policyid",
								"in": "path",		
								"type": "string",			
								"description": "Updata one Policy by policyid",
								"required": true
							},
							{
								"name": "stream",
								"in": "body",
								"type": "string",
								"schema": {
									"$ref": "#/definitions/Policy"
								},
								"description": "Update one Policy",
								"required": true
							}
						],
						"consumes": [
							"application/json"
						],
						"responses": {
							"200": {
								"description": "successful operation",
								"schema": {
									"$ref": "#/definitions/PolicyResult"
								}
							},
							"default": {
								"description": "Unexpected error"
							}
						}
					}
				}
			]]></jsonbody>
		</reference>
		<set name="context.name" value="'/policy/policy/{policyid}'"/>
		<function name="addPath" class="APIDocsService">
			<parameters>
				<string name="pathname" in="context.name.toString()"/>
				<string name="pathconntent" in="context.pathconntent.toString()"/>
			</parameters>
		</function>
	</function>
</starlang>