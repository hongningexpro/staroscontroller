<?xml version="1.0" encoding="UTF-8"?>
<starosxml xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	<!--
		Author:
				YY
		Date:
				2017-09-15
		Copyright: 
				Nanjing StarOS Inc. All rights reserved.
	-->
	<class name="CPath">
		<private>
			<variable name="m_pathname" type="string"/>
			<variable name="m_pathconntent" type="string"/>
		</private>
		<public>
			<function name="CPath">
				<parameters>
					<parameter name="pathname" type="string"/>
					<parameter name="pathconntent" type="string"/>
				</parameters>
				<set name="thisclass.m_pathname" value="context.pathname.toString()"/>
				<set name="thisclass.m_pathconntent" value="context.pathconntent.toString()"/>
			</function>
			<function name="getData">
				<parameters>
					<parameter name="pathname" type="string"/>
					<parameter name="pathconntent" type="string"/>
				</parameters>
				<set name="context.pathname" value="thisclass.m_pathname.toString()"/>
				<set name="context.pathconntent" value="thisclass.m_pathconntent.toString()"/>
			</function>
		</public>
	</class>

	<class name="CDefinition">
		<private>
			<variable name="m_definitionname" type="string"/>
			<variable name="m_definitioncontent" type="string"/>
		</private>
		<public>
			<function name="CDefinition">
				<parameters>
					<parameter name="definitionname" type="string"/>
					<parameter name="definitioncontent" type="string"/>
				</parameters>
				<set name="thisclass.m_definitionname" value="context.definitionname.toString()"/>
				<set name="thisclass.m_definitioncontent" value="context.definitioncontent.toString()"/>
			</function>	
			<function name="getData">
				<parameters>
					<parameter name="definitionname" type="string"/>
					<parameter name="definitioncontent" type="string"/>
				</parameters>
				<set name="context.definitionname" value="thisclass.m_definitionname.toString()"/>
				<set name="context.definitioncontent" value="thisclass.m_definitioncontent.toString()"/>
			</function>
		</public>
	</class>

	<class name="CAPIDocsService">
		<private>
			<container name="TagContainer" type="list" valuetype="string"/>
			<container name="PathContainer" type="hashmap" keytype="string" valuetype="class"/>
			<container name="DefinitionContainer" type="hashmap" keytype="string" valuetype="class"/>
		</private>
		<public>
			<function name="addTag">
				<parameters>
					<parameter name="tag" type="string"/>
				</parameters>
				<insert name="thisclass.TagContainer" value="context.tag.toString()"/>
				<log level="10"><![CDATA[CAPIDocsService 73 line<%=context.tag.toString()%>]]></log>
				<log level="10"><![CDATA[thisclass.TagContainer.size = <%=thisclass.TagContainer.size()%>]]></log>
			</function>
			<function name="removeTag">
				<parameters>
					<parameter name="tag" type="string"/>
				</parameters>
				<remove name="thisclass.TagContainer" value="context.tag.toString()"/>					
			</function>

			<function name="addPath">
				<parameters>
					<parameter name="pathname" type="string"/>
					<parameter name="pathconntent" type="string"/>
				</parameters>
				<variable name="path" type="class"/>
				<new name="context.path" class="CPath">
					<parameters>
						<parameter name="pathname" type="string" in="context.pathname.toString()"/>
						<parameter name="pathconntent" type="string" in="context.pathconntent.toString()"/>
					</parameters>
				</new>
				<if cond="thisclass.PathContainer.hasValue(context.pathname.toString())==false">
					<then>
						<if cond="context.path!=null">
							<then>
								<insert name="thisclass.PathContainer" key="context.pathname.toString()" value="context.path"/>
							</then>
						</if>
					</then>
				</if>
			</function>
			<function name="removePath">
				<parameters>
					<parameter name="pathname" type="string"/>
				</parameters>
				<if cond="thisclass.PathContainer.hasValue(context.pathname.toString())">
					<then>
						<remove name="thisclass.PathContainer" key="context.pathname.toString()"/>
					</then>
				</if>
			</function>

			<function name="addDefinition">
				<parameters>
					<parameter name="definitionname" type="string"/>
					<parameter name="definitioncontent" type="string"/>
				</parameters>
				<variable name="definition" type="class"/>
				<new name="context.definition" class="CDefinition">
					<parameters>
						<parameter name="definitionname" type="string" in="context.definitionname.toString()"/>
						<parameter name="definitioncontent" type="string" in="context.definitioncontent.toString()"/>
					</parameters>
				</new>
				<if cond="thisclass.DefinitionContainer.hasValue(context.definitionname.toString())==false">
					<then>
						<if cond="context.definition!=null">
							<then>
								<insert name="thisclass.DefinitionContainer" key="context.definitionname.toString()" value="context.definition"/>
							</then>
						</if>
					</then>
				</if>
			</function>
			<function name="removeDefinition">
				<parameters>
					<parameter name="definitionname" type="string"/>
				</parameters>
				<if cond="thisclass.DefinitionContainer.hasValue(context.definitionname.toString())">
					<then>
						<remove name="thisclass.DefinitionContainer" key="context.definitionname.toString()"/>
					</then>
				</if>
			</function>

			<function name="dataHandle">
				<parameters>
					<parameter name="swaggerjsonstring" type="string"/>
					<parameter name="swaggerjsonout" type="string"/>
				</parameters>
				<variable name="data" type="string"/>							
				
				<variable name="tagData" type="string"/>
				<variable name="pathData" type="string"/>
				<variable name="definitionData" type="string"/>
				<if cond="thisclass.TagContainer.size()==0||thisclass.PathContainer.size()==0||thisclass.DefinitionContainer.size()==0">
					<then>
						<set name="context.data" value="context.swaggerjsonstring.toString()"/>
					</then>
					<else>						
						<function name="handleTag">
							<parameters>
								<parameter name="zero" type="string" in="context.swaggerjsonstring.toString()"/>
								<parameter name="tag" type="string" out="context.tagData"/>
							</parameters>
						</function>
						<function name="handlePath">
							<parameters>
								<parameter name="tag" type="string" in="context.tagData.toString()"/>
								<parameter name="path" type="string" out="context.pathData"/>
							</parameters>
						</function>
						<function name="handleDefinition">	
							<parameters>
								<parameter name="path" type="string" in="context.pathData.toString()"/>
								<parameter name="definition" type="string" out="context.definitionData"/>
							</parameters>
						</function>
						<set name="context.data" value="context.definitionData.toString()"/>
					</else>
				</if>
				<set name="context.swaggerjsonout" value="context.data.toString()"/>				
			</function>

			<function name="handleTag">
				<parameters>
					<parameter name="zero" type="string"/>
					<parameter name="tag" type="string"/>
				</parameters>
				<variable name="data" type="string" value="context.zero.toString()"/>				
				<variable name="tagstr" type="string"/>
				<for var="tagstr" in="thisclass.TagContainer">
					<if cond="context.tagstr!=null">
						<then>																
							<script><![CDATA[										
								var info = JSON.parse(context.data.toString());								
								var js_tags = info.tags;								
								var local_tag = JSON.parse(context.tagstr.toString());
								js_tags.push(local_tag);									
								info.tags = js_tags;
								var str = JSON.stringify(info);
								context.data.setValue(str);
							]]></script>
						</then>
					</if>
				</for>
				
				<set name="context.tag" value="context.data.toString()"/>
			</function>

			<function name="handlePath">
				<parameters>
					<parameter name="tag" type="string"/>
					<parameter name="path" type="string"/>
				</parameters>			
				<variable name="pathobj" type="class"/>
				<variable name="pathnamestr" type="string"/>
				<variable name="pathconntentstr" type="string"/>
				<container name="onePathContainer" type="pair" keytype="string" valuetype="class"/>
				<variable name="handle_tag" type="string"/>
				<set name="context.handle_tag" value="context.tag.toString()"/>
				<for var="onePathContainer" in="thisclass.PathContainer">
					<set name="context.pathobj" value="context.onePathContainer.second()"/>
					<if cond="context.pathobj!=null">
						<then>
							<function name="getData" class="context.pathobj">
								<parameters>
									<parameter name="pathname" type="string" out="context.pathnamestr"/>
									<parameter name="pathconntent" type="string" out="context.pathconntentstr"/>
								</parameters>
							</function>
							<if cond="context.pathnamestr.toString()!=null">
								<then>
									<if cond="context.pathconntentstr.toString()!=null">
										<then>
											<log>insert handlePath 3rd if</log>
											<script><![CDATA[
												var info = JSON.parse(context.handle_tag.toString());
												var js_paths = info.paths;
												var local_path = JSON.parse(context.pathconntentstr.toString());
												js_paths[context.pathnamestr.toString()] = local_path;
												info.paths = js_paths;
												var str = JSON.stringify(info);
												context.handle_tag.setValue(str);											
											]]></script>
										</then>
									</if>
								</then>
							</if>
						</then>
					</if>
				</for>
				<set name="context.path" value="context.handle_tag.toString()"/>
			</function>

			<function name="handleDefinition">
				<parameters>
					<parameter name="path" type="string"/>
					<parameter name="definition" type="string"/>
				</parameters>
				<variable name="definitionobj" type="class"/>
				<variable name="definitionnamestr" type="string"/>
				<variable name="definitionconntentstr" type="string"/>
				<container name="oneDefinitionContainer" type="pair" keytype="string" valuetype="class"/>
				<variable name="handle_path" type="string"/>
				<set name="context.handle_path" value="context.path.toString()"/>
				<for var="oneDefinitionContainer" in="thisclass.DefinitionContainer">
					<set name="context.definitionobj" value="context.oneDefinitionContainer.second()"/>
					<if cond="context.definitionobj!=null">
						<then>
							<function name="getData" class="context.definitionobj">
								<parameters>
									<parameter name="definitionname" type="string" out="context.definitionnamestr"/>
									<parameter name="definitioncontent" type="string" out="context.definitionconntentstr"/>
								</parameters>
							</function>
							<if cond="context.definitionnamestr.toString()!=null">
								<then>
									<if cond="context.definitionconntentstr.toString()!=null">
										<then>
											<script><![CDATA[
												var info = JSON.parse(context.handle_path.toString());
												var js_definitions = info.definitions;
												var local_definition = JSON.parse(context.definitionconntentstr.toString());
												js_definitions[context.definitionnamestr.toString()] = local_definition;
												info.definitions = js_definitions;
												var str = JSON.stringify(info);
												context.handle_path.setValue(str);
											]]></script>
										</then>
									</if>
								</then>
							</if>
						</then>
					</if>
				</for>
				<set name="context.definition" value="context.handle_path.toString()"/>
			</function>





			<!--function name="RegisterAPIDocs">
				<parameters>
					<parameter name="tag" type="string"/>
					<parameter name="pathname" type="string"/>
					<parameter name="pathconntent" type="string"/>
					<parameter name="definitionname" type="string"/>
					<parameter name="definitioncontent" type="string"/>
				</parameters>
				<log>Register api docs</log>
				<variable name="docsobj" type="class"/>
				<new name="docsobj" class="CAPIDocs">
					<parameters>
						<parameter name="tag" type="string" in="context.tag.toString()"/>
						<parameter name="pathname" type="string" in="context.pathname.toString()"/>
						<parameter name="pathconntent" type="string" in="context.pathconntent.toString()"/>
						<parameter name="definitionname" type="string" in="context.definitionname.toString()"/>
						<parameter name="definitioncontent" type="string" in="context.definitioncontent.toString()"/>
					</parameters>
				</new>
				<if cond="context.docsobj!=null">
					<then>
						<insert name="thisclass.ApiContainer" key="context.pathname.toString()" value="context.docsobj"/>
					</then>
				</if>
				<variable name="swaggerjsonstring" type="string"/>
				<function name="Readjsonfile" class="SwaggerFile">
					<parameters>
						<parameter name="json" type="string" out="context.swaggerjsonstring"/>
					</parameters>
				</function>
				<variable name="swaggerjsonout" type="string"/>
				<script><![CDATA[
					var index = JSON.parse(context.swaggerjsonstring.toString());
					var local_tag, local_path, local_definition;
					local_tag = index.tags;
					var tagjson = JSON.parse(context.tag.toString());
					local_tag.push(tagjson);
					local_path = index.paths;
					var pathjson = JSON.parse(context.pathconntent.toString());
					local_path[context.pathname.toString()] = pathjson;
					local_definition = index.definitions;
					var definitionjson = JSON.parse(context.definitioncontent.toString());
					local_definition[context.definitionname.toString()] = definitionjson;
					index.tags = local_tag;
					index.paths = local_path;
					index.definitions = local_definition;
					var strjsonout = JSON.stringify(index);
					context.swaggerjsonout.setValue(strjsonout);
				]]></script>
			</function>

			<function name="findApiDocs">
				<parameters>
					<parameter name="pathname" value="string"/>
					<parameter name="apidocs" value="class"/>
				</parameters>
				<if cond="thisclass.ApiContainer.hasValue(context.pathname.toString())">
					<then>
						<lookup name="thisclass.ApiContainer" key="context.pathname.toString()" output="context.apidocs"/>
					</then>
				</if>
			</function>
			<function name="removeApiDocs">
				<parameters>
					<parameter name="pathname" value="string"/>
				</parameters>
				<if cond="thisclass.ApiContainer.hasValue(context.pathname.toString())">
					<then>
						<remove name="thisclass.ApiContainer" key="context.pathname.toString()"/>
					</then>
				</if>
			</function-->
		</public>
	</class>
</starosxml>