<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (C) 2013-2016 Nanjing StarOS Technology Co., Ltd
	All rights reserved.
	
	@file 		CAPIDocsService.xml
	@brief 		handle UIjson
	@version 	1.1.0
	@auth 		YY
	@date		2017/09/15

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<starlang xmlns="http://www.staros.xyz/starcore/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" scope="application">
	<class name="CPath">
		<private>
			<string name="m_pathname"/>
			<string name="m_pathconntent"/>
		</private>
		<public>
			<function name="CPath">
				<parameters>
					<string name="pathname"/>
					<string name="pathconntent"/>
				</parameters>
				<set name="thisclass.m_pathname" value="context.pathname.toString()"/>
				<set name="thisclass.m_pathconntent" value="context.pathconntent.toString()"/>
			</function>
			<!--
				@brief		获取path信息
				@auth 		YY
				@date		2017/09/15
				Input:					
				Output:
					@param pathname 	path名字
					@param pathconntent   path内容
			-->
			<function name="getData">
				<parameters>
					<string name="pathname"/>
					<string name="pathconntent"/>
				</parameters>
				<set name="context.pathname" value="thisclass.m_pathname.toString()"/>
				<set name="context.pathconntent" value="thisclass.m_pathconntent.toString()"/>
			</function>
		</public>
	</class>

	<class name="CDefinition">
		<private>
			<string name="m_definitionname"/>
			<string name="m_definitioncontent"/>
		</private>
		<public>
			<function name="CDefinition">
				<parameters>
					<string name="definitionname"/>
					<string name="definitioncontent"/>
				</parameters>
				<set name="thisclass.m_definitionname" value="context.definitionname.toString()"/>
				<set name="thisclass.m_definitioncontent" value="context.definitioncontent.toString()"/>
			</function>
			<!--
				@brief		获取definition信息
				@auth 		YY
				@date		2017/09/15
				Input:					
				Output:
					@param definitionname 	definition名字
					@param definitioncontent   definition内容
			-->	
			<function name="getData">
				<parameters>
					<string name="definitionname"/>
					<string name="definitioncontent"/>
				</parameters>
				<set name="context.definitionname" value="thisclass.m_definitionname.toString()"/>
				<set name="context.definitioncontent" value="thisclass.m_definitioncontent.toString()"/>
			</function>
		</public>
	</class>

	<class name="CAPIDocsService">
		<private>
			<list name="TagContainer" valuetype="string"/>
			<hashmap name="PathContainer" keytype="string" valuetype="object"/>
			<hashmap name="DefinitionContainer" keytype="string" valuetype="object"/>
		</private>
		<public>
			<!--
				@brief		添加tag
				@auth 		YY
				@date		2017/09/15
				Input:
					@param tag 	tag信息					
				Output:
			-->
			<function name="addTag">
				<parameters>
					<string name="tag"/>
				</parameters>
				<insert name="thisclass.TagContainer" value="context.tag.toString()"/>
				<log level="10"><![CDATA[CAPIDocsService 73 line<%=context.tag.toString()%>]]></log>
				<log level="10"><![CDATA[thisclass.TagContainer.size = <%=thisclass.TagContainer.size()%>]]></log>
			</function>
			<!--
				@brief		删除tag
				@auth 		YY
				@date		2017/09/15
				Input:
					@param tag 	tag信息					
				Output:
			-->
			<function name="removeTag">
				<parameters>
					<string name="tag"/>
				</parameters>
				<remove name="thisclass.TagContainer" value="context.tag.toString()"/>					
			</function>
			<!--
				@brief		添加path
				@auth 		YY
				@date		2017/09/15
				Input:
					@param pathname 	path名字
					@param pathconntent 	path内容				
				Output:
			-->
			<function name="addPath">
				<parameters>
					<string name="pathname"/>
					<string name="pathconntent"/>
				</parameters>
				<object name="path"/>
				<new name="context.path" class="CPath">
					<parameters>
						<string name="pathname" in="context.pathname.toString()"/>
						<string name="pathconntent" in="context.pathconntent.toString()"/>
					</parameters>
				</new>
				<if cond="thisclass.PathContainer.hasValue(context.pathname.toString())==false">
					<then>
						<if cond="context.path!=null">
							<then>
								<insert name="thisclass.PathContainer" key="context.pathname.toString()" value="context.path"/>
							</then>
						</if>
					</then>
				</if>
			</function>
			<!--
				@brief		删除path
				@auth 		YY
				@date		2017/09/15
				Input:
					@param pathname 	path名字
					@param pathconntent 	path内容				
				Output:
			-->
			<function name="removePath">
				<parameters>
					<string name="pathname"/>
				</parameters>
				<if cond="thisclass.PathContainer.hasValue(context.pathname.toString())">
					<then>
						<remove name="thisclass.PathContainer" key="context.pathname.toString()"/>
					</then>
				</if>
			</function>
			<!--
				@brief		添加definition
				@auth 		YY
				@date		2017/09/15
				Input:
					@param definitionname 	definition名字
					@param definitioncontent 	definition内容				
				Output:
			-->
			<function name="addDefinition">
				<parameters>
					<string name="definitionname"/>
					<string name="definitioncontent"/>
				</parameters>
				<object name="definition"/>
				<new name="context.definition" class="CDefinition">
					<parameters>
						<string name="definitionname" in="context.definitionname.toString()"/>
						<string name="definitioncontent" in="context.definitioncontent.toString()"/>
					</parameters>
				</new>
				<if cond="thisclass.DefinitionContainer.hasValue(context.definitionname.toString())==false">
					<then>
						<if cond="context.definition!=null">
							<then>
								<insert name="thisclass.DefinitionContainer" key="context.definitionname.toString()" value="context.definition"/>
							</then>
						</if>
					</then>
				</if>
			</function>
			<!--
				@brief		删除definition
				@auth 		YY
				@date		2017/09/15
				Input:
					@param definitionname 	definition名字
					@param definitioncontent 	definition内容				
				Output:
			-->
			<function name="removeDefinition">
				<parameters>
					<string name="definitionname"/>
				</parameters>
				<if cond="thisclass.DefinitionContainer.hasValue(context.definitionname.toString())">
					<then>
						<remove name="thisclass.DefinitionContainer" key="context.definitionname.toString()"/>
					</then>
				</if>
			</function>
			<!--
				@brief		handle data
				@auth 		YY
				@date		2017/09/15
				Input:
					@param swaggerjsonstring 	swagger.json原本内容								
				Output:
					@param swaggerjsonout 	swagger.json修改后内容
			-->
			<function name="dataHandle">
				<parameters>
					<string name="swaggerjsonstring"/>
					<string name="swaggerjsonout"/>
				</parameters>
				<string name="data"/>							
				
				<string name="tagData"/>
				<string name="pathData"/>
				<string name="definitionData"/>
				<if cond="thisclass.TagContainer.size()==0||thisclass.PathContainer.size()==0||thisclass.DefinitionContainer.size()==0">
					<then>
						<set name="context.data" value="context.swaggerjsonstring.toString()"/>
					</then>
					<else>						
						<function name="handleTag">
							<parameters>
								<string name="zero" in="context.swaggerjsonstring.toString()"/>
								<string name="tag" out="context.tagData"/>
							</parameters>
						</function>
						<function name="handlePath">
							<parameters>
								<string name="tag" in="context.tagData.toString()"/>
								<string name="path" out="context.pathData"/>
							</parameters>
						</function>
						<function name="handleDefinition">	
							<parameters>
								<string name="path" in="context.pathData.toString()"/>
								<string name="definition" out="context.definitionData"/>
							</parameters>
						</function>
						<set name="context.data" value="context.definitionData.toString()"/>
					</else>
				</if>
				<set name="context.swaggerjsonout" value="context.data.toString()"/>				
			</function>
			<!--
				@brief		handle tag data
				@auth 		YY
				@date		2017/09/15
				Input:
					@param zero 	tag原本内容								
				Output:
					@param tag 	tag修改后内容
			-->
			<function name="handleTag">
				<parameters>
					<string name="zero"/>
					<string name="tag"/>
				</parameters>
				<string name="data" value="context.zero.toString()"/>
		
				<string name="tagstr"/>
				<for var="tagstr" in="thisclass.TagContainer">
					<if cond="context.tagstr!=null">
						<then>																
							<script><![CDATA[
								context.print("201行,CAPIDocsService.xml");
								var info = JSON.parse(context.data.toString());
								context.print("203行,CAPIDocsService.xml");
								var js_tags = info.tags;								
								var local_tag = JSON.parse(context.tagstr.toString());
								js_tags.push(local_tag);									
								info.tags = js_tags;
								var str = JSON.stringify(info);
								context.data.setValue(str);
							]]></script>
						</then>
					</if>
				</for>
				
				<set name="context.tag" value="context.data.toString()"/>
			</function>			
			<!--
				@brief		handle path data
				@auth 		YY
				@date		2017/09/15
				Input:
					@param tag 	tag原本内容								
				Output:
					@param path 	path修改后内容
			-->
			<function name="handlePath">
				<parameters>
					<string name="tag"/>
					<string name="path"/>
				</parameters>			
				<object name="pathobj"/>
				<string name="pathnamestr"/>
				<string name="pathconntentstr"/>
				<pair name="onePathContainer" keytype="string" valuetype="object"/>
				<string name="handle_tag"/>
				<set name="context.handle_tag" value="context.tag.toString()"/>
				<for var="onePathContainer" in="thisclass.PathContainer">
					<set name="context.pathobj" value="context.onePathContainer.second()"/>
					<if cond="context.pathobj.ptr!=null">
						<then>
							<function name="getData" class="context.pathobj">
								<parameters>
									<string name="pathname" out="context.pathnamestr"/>
									<string name="pathconntent" out="context.pathconntentstr"/>
								</parameters>
							</function>
							<if cond="context.pathnamestr.toString()!=null">
								<then>
									<if cond="context.pathconntentstr.toString()!=null">
										<then>
											<log>insert handlePath 3rd if</log>
											<script><![CDATA[
												var info = JSON.parse(context.handle_tag.toString());
												var js_paths = info.paths;
												var local_path = JSON.parse(context.pathconntentstr.toString());
												js_paths[context.pathnamestr.toString()] = local_path;
												info.paths = js_paths;
												var str = JSON.stringify(info);
												context.handle_tag.setValue(str);											
											]]></script>
										</then>
									</if>
								</then>
							</if>
						</then>
					</if>
				</for>
				<set name="context.path" value="context.handle_tag.toString()"/>
			</function>
			<!--
				@brief		handle definition data
				@auth 		YY
				@date		2017/09/15
				Input:
					@param path 	path原本内容								
				Output:
					@param definition 	definition修改后内容
			-->
			<function name="handleDefinition">
				<parameters>
					<string name="path"/>
					<string name="definition"/>
				</parameters>
				<object name="definitionobj"/>
				<string name="definitionnamestr"/>
				<string name="definitionconntentstr"/>
				<pair name="oneDefinitionContainer" keytype="string" valuetype="object"/>
				<string name="handle_path"/>
				<set name="context.handle_path" value="context.path.toString()"/>
				<for var="oneDefinitionContainer" in="thisclass.DefinitionContainer">
					<set name="context.definitionobj" value="context.oneDefinitionContainer.second()"/>
					<if cond="context.definitionobj.ptr!=null">
						<then>
							<function name="getData" class="context.definitionobj">
								<parameters>
									<string name="definitionname" out="context.definitionnamestr"/>
									<string name="definitioncontent" out="context.definitionconntentstr"/>
								</parameters>
							</function>
							<if cond="context.definitionnamestr.toString()!=null">
								<then>
									<if cond="context.definitionconntentstr.toString()!=null">
										<then>
											<script><![CDATA[
												var info = JSON.parse(context.handle_path.toString());
												var js_definitions = info.definitions;
												var local_definition = JSON.parse(context.definitionconntentstr.toString());
												js_definitions[context.definitionnamestr.toString()] = local_definition;
												info.definitions = js_definitions;
												var str = JSON.stringify(info);
												context.handle_path.setValue(str);
											]]></script>
										</then>
									</if>
								</then>
							</if>
						</then>
					</if>
				</for>
				<set name="context.definition" value="context.handle_path.toString()"/>
			</function>





			<!--function name="RegisterAPIDocs">
				<parameters>
					<string name="tag"/>
					<string name="pathname"/>
					<string name="pathconntent"/>
					<string name="definitionname"/>
					<string name="definitioncontent"/>
				</parameters>
				<log>Register api docs</log>
				<object name="docsobj"/>
				<new name="docsobj" class="CAPIDocs">
					<parameters>
						<string name="tag" in="context.tag.toString()"/>
						<string name="pathname" in="context.pathname.toString()"/>
						<string name="pathconntent" in="context.pathconntent.toString()"/>
						<string name="definitionname" in="context.definitionname.toString()"/>
						<string name="definitioncontent" in="context.definitioncontent.toString()"/>
					</parameters>
				</new>
				<if cond="context.docsobj.ptr!=null">
					<then>
						<insert name="thisclass.ApiContainer" key="context.pathname.toString()" value="context.docsobj"/>
					</then>
				</if>
				<string name="swaggerjsonstring"/>
				<function name="Readjsonfile" class="SwaggerFile">
					<parameters>
						<string name="json" out="context.swaggerjsonstring"/>
					</parameters>
				</function>
				<string name="swaggerjsonout"/>
				<script><![CDATA[
					var index = JSON.parse(context.swaggerjsonstring.toString());
					var local_tag, local_path, local_definition;
					local_tag = index.tags;
					var tagjson = JSON.parse(context.tag.toString());
					local_tag.push(tagjson);
					local_path = index.paths;
					var pathjson = JSON.parse(context.pathconntent.toString());
					local_path[context.pathname.toString()] = pathjson;
					local_definition = index.definitions;
					var definitionjson = JSON.parse(context.definitioncontent.toString());
					local_definition[context.definitionname.toString()] = definitionjson;
					index.tags = local_tag;
					index.paths = local_path;
					index.definitions = local_definition;
					var strjsonout = JSON.stringify(index);
					context.swaggerjsonout.setValue(strjsonout);
				]]></script>
			</function>

			<function name="findApiDocs">
				<parameters>
					<string name="pathname"/>
					<object name="apidocs"/>
				</parameters>
				<if cond="thisclass.ApiContainer.hasValue(context.pathname.toString())">
					<then>
						<lookup name="thisclass.ApiContainer" key="context.pathname.toString()" output="context.apidocs"/>
					</then>
				</if>
			</function>
			<function name="removeApiDocs">
				<parameters>
					<string name="pathname"/>
				</parameters>
				<if cond="thisclass.ApiContainer.hasValue(context.pathname.toString())">
					<then>
						<remove name="thisclass.ApiContainer" key="context.pathname.toString()"/>
					</then>
				</if>
			</function-->
		</public>
	</class>
</starlang>